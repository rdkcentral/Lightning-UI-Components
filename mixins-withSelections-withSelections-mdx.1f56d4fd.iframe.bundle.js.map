{"version":3,"file":"mixins-withSelections-withSelections-mdx.1f56d4fd.iframe.bundle.js","mappingsvVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AAGA;AAhBA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AAIA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AA9CA;AACA;AAAA;AAAA;AA+CA;;ACrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/mixins/withSelections/withSelections.mdx","webpack://lightning-ui-docs/../../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js","webpack://lightning-ui-docs/../../../node_modules/@storybook/core/dist/components/ sync","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/mixins/withSelections/index.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/mixins/withSelections/withSelections.stories.js","webpack://lightning-ui-docs/../../../node_modules/memoizerific/ sync"],"sourcesContent":["\nimport React from 'react';\n\n/*prettier-ignore*/\n/*\nCopyright 2023 Comcast Cable Communications Management, LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nSPDX-License-Identifier: Apache-2.0\n\\*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/Lightning-UI-Components/Lightning-UI-Components/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.mjs\";\nimport {Meta, Canvas} from '@storybook/blocks';\nimport * as withSelectionsStories from './withSelections.stories';\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    em: \"em\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [\"\\n\", \"\\n\", \"\\n\", _jsx(Meta, {\n      of: withSelectionsStories\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"withselections\",\n      children: \"withSelections\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"withSelections\"\n      }), \" mixin can be wrapped around a parent component that holds a list of components with a \\\"selected\\\" state where only one child component may have \", _jsx(_components.code, {\n        children: \"isSelected=true\"\n      }), \" at a time.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"source\",\n      children: \"Source\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/@lightningjs/ui-components/src/mixins/withSelections/index.js\",\n        rel: \"nofollow\",\n        children: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/@lightningjs/ui-components/src/mixins/withSelections/index.js\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"usage\",\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Out of the box, \", _jsx(_components.code, {\n        children: \"withSelections\"\n      }), \" adds properties and methods to the wrapped parent component that allows it to manage the \\\"selected\\\" status of a direct list of components. All of the method and property names are customizable. In order to ensure that \", _jsx(_components.code, {\n        children: \"withSelections\"\n      }), \" work correctly, we need to understand what this mixin \", _jsx(_components.strong, {\n        children: \"requires\"\n      }), \" and what \", _jsx(_components.strong, {\n        children: \"additions\"\n      }), \" it brings to the base class.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"required-properties\",\n      children: \"Required properties\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Let's look at a pseudo-code of the below example:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"class UnderlineButton extends Button {\\n  set isSelected(isSelected) {\\n    // if isSelected is true render a line through the button\\n    // else do not render a line through the button\\n  }\\n}\\n\\nclass Example extends lng.Component {\\n  static _template() {\\n    return {\\n      Items: {\\n        type: withSelections(Row),\\n        items: [\\n          { type: UnderlineButton, title: 'Left' },\\n          { type: UnderlineButton, title: 'Center' },\\n          { type: UnderlineButton, title: 'Right' }\\n        ]\\n      }\\n    };\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(Canvas, {\n      of: withSelectionsStories.withSelections\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Take a look at the preview above. The row of modified \", _jsx(_components.a, {\n        href: \"?path=/docs/components-button--docs\",\n        children: \"Buttons\"\n      }), \" has navigation managed by the \", _jsx(_components.a, {\n        href: \"?path=/docs/components-row--docs\",\n        children: \"Row\"\n      }), \" component, which is also wrapped in \", _jsx(_components.code, {\n        children: \"withSelections\"\n      }), \". Navigate with the arrow keys to see the \", _jsx(_components.code, {\n        children: \"focus\"\n      }), \" state change for each \", _jsx(_components.a, {\n        href: \"?path=/docs/components-button--docs\",\n        children: \"Button\"\n      }), \". Hit the \", _jsx(_components.code, {\n        children: \"Enter\"\n      }), \" key to set the currently focused \", _jsx(_components.code, {\n        children: \"Button\"\n      }), \" to be \", _jsx(_components.code, {\n        children: \"isSelected\"\n      }), \", giving it an underline. Also notice that underline of the previously selected \", _jsx(_components.code, {\n        children: \"Button\"\n      }), \" is removed.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In this example, \", _jsx(_components.code, {\n        children: \"withSelections\"\n      }), \" is expecting the \", _jsx(_components.code, {\n        children: \"Row\"\n      }), \" component to have a property called \", _jsx(_components.code, {\n        children: \"items\"\n      }), \" which contains components that can handle an \", _jsx(_components.code, {\n        children: \"isSelected\"\n      }), \" property. Fortunately, this describes the \", _jsx(_components.code, {\n        children: \"Row\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"UnderlineButton\"\n      }), \" components perfectly! If your components are working with different property names, they can be customized with the \", _jsx(_components.code, {\n        children: \"options\"\n      }), \" property. See the \", _jsx(_components.a, {\n        href: \"#customization\",\n        children: \"Customization\"\n      }), \" section for options.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"added-properties-and-methods\",\n      children: \"Added properties and methods\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now that it is wrapped with \", _jsx(_components.code, {\n        children: \"withSelections\"\n      }), \", the \", _jsx(_components.code, {\n        children: \"Row\"\n      }), \" component has access to a few new properties and methods. The \", _jsx(_components.code, {\n        children: \"currentSelected\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"currentSelectedIndex\"\n      }), \" properties point to the child component that is \", _jsx(_components.em, {\n        children: \"currently selected\"\n      }), \" and the index of that component in the \", _jsx(_components.code, {\n        children: \"items\"\n      }), \" array.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"// ex. rendering text of the currently selected item's title\\n_firstEnable() {\\n  const selectedItem = this.tag('Items').currentSelected;\\n  this.tag('Title').text.text = 'Selected: ' + selectedItem.title;\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The core of the management functionality lives in the added \", _jsx(_components.code, {\n        children: \"setSelected\"\n      }), \" method, which will set the \", _jsx(_components.code, {\n        children: \"isSelected\"\n      }), \" value on the given component, then fire the \", _jsx(_components.code, {\n        children: \"$onSelect\"\n      }), \" event via \", _jsx(_components.a, {\n        href: \"https://lightningjs.io/docs/#/lightning-core-reference/Communication/FireAncestors?id=fire-ancestors\",\n        rel: \"nofollow\",\n        children: \"fireAncestors\"\n      }), \".\\nA \", _jsx(_components.code, {\n        children: \"_captureKey\"\n      }), \" method is also added, which calls \", _jsx(_components.code, {\n        children: \"setSelected\"\n      }), \" in response to an \", _jsx(_components.code, {\n        children: \"Enter\"\n      }), \" key event by default. All of these values can be customized; see the \", _jsx(_components.a, {\n        href: \"#customization\",\n        children: \"Customization\"\n      }), \" section for options.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"// this will be called after setting the isSelected property on an item\\n$onSelect() {/* respond to changes to the selected component */}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Lastly, a \", _jsx(_components.code, {\n        children: \"fireAncestors\"\n      }), \" handler is added, in case you need to programmatically trigger the \", _jsx(_components.code, {\n        children: \"setSelected\"\n      }), \" method via a child component.\\nBy default the method that handles this is named \", _jsx(_components.code, {\n        children: \"$setSelected\"\n      }), \", but can be changed to another value by the \", _jsx(_components.code, {\n        children: \"options\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"// trigger the $setSelected method in a parent component that has been passed to withSelections\\nclass ChildComponent extends lng.Component {\\n  _focus() {\\n    super._focus();\\n    this.fireAncestors('$setSelected', this, true);\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"customization\",\n      children: \"Customization\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This section addresses all of the optional properties that can be passed as the second argument to \", _jsx(_components.code, {\n        children: \"withSelections\"\n      })]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"name\"\n          }), _jsx(_components.th, {\n            children: \"type\"\n          }), _jsx(_components.th, {\n            children: \"default\"\n          }), _jsx(_components.th, {\n            children: \"description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"captureKey\"\n          }), _jsx(_components.td, {\n            children: \"string | string[]\"\n          }), _jsx(_components.td, {\n            children: \"'Enter'\"\n          }), _jsx(_components.td, {\n            children: \"key name(s) to capture in order to set the selected status of the currently focused child component\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"defaultIndex\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"0\"\n          }), _jsxs(_components.td, {\n            children: [\"the index of the component that should be \", _jsx(_components.code, {\n              children: \"selected\"\n            }), \" on load.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"eventName\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"'onSelect'\"\n          }), _jsxs(_components.td, {\n            children: [\"name of the event fired via \", _jsx(_components.code, {\n              children: \"fireAncestors\"\n            }), \" by the wrapped component when a \", _jsx(_components.code, {\n              children: \"selected\"\n            }), \" property is changed. \", _jsx(_components.strong, {\n              children: \"NOTE\"\n            }), \": The event fired will prepend a \\\"$\\\" to the event name.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"keys.currentSelected\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"'currentSelected'\"\n          }), _jsxs(_components.td, {\n            children: [\"name of the property applied to the wrapped component that refers to the \", _jsx(_components.strong, {\n              children: \"current selected component\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"keys.currentSelectedIndex\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"'currentSelectedIndex'\"\n          }), _jsxs(_components.td, {\n            children: [\"name of the property applied to the wrapped component that refers to the \", _jsx(_components.strong, {\n              children: \"index of the current selected component\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"keys.isSelected\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"'isSelected'\"\n          }), _jsxs(_components.td, {\n            children: [\"name of the property applied to the child components in \", _jsx(_components.code, {\n              children: \"items\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"keys.items\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"'items'\"\n          }), _jsxs(_components.td, {\n            children: [\"name of the property applied to the wrapped component that refers to the \", _jsx(_components.strong, {\n              children: \"list of managed child components\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"keys.setSelected\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"'setSelected'\"\n          }), _jsxs(_components.td, {\n            children: [\"name of the method applied to the wrapped component that manages \", _jsx(_components.code, {\n              children: \"isSelected\"\n            }), \" values for child components in \", _jsx(_components.code, {\n              children: \"items\"\n            }), \". \", _jsx(_components.strong, {\n              children: \"NOTE\"\n            }), \": Lightning has a \", _jsx(_components.code, {\n              children: \"select\"\n            }), \" method on it's \", _jsx(_components.code, {\n              children: \"Element\"\n            }), \" class, so avoid setting \", _jsx(_components.code, {\n              children: \"keys.setSelected\"\n            }), \" to \", _jsx(_components.code, {\n              children: \"'select'\"\n            }), \".\"]\n          })]\n        })]\n      })]\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../node_modules/@storybook/core/dist/components sync recursive\";\nmodule.exports = webpackEmptyContext;","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport default function withSelections(Base, options = {}) {\n  const defaultOpts = {\n    captureKey: 'Enter',\n    defaultIndex: 0,\n    eventName: 'onSelect',\n    keys: {\n      currentSelected: 'currentSelected',\n      currentSelectedIndex: 'currentSelectedIndex',\n      isSelected: 'isSelected',\n      items: 'items',\n      setSelected: 'setSelected'\n    }\n  };\n  const {\n    captureKey,\n    defaultIndex,\n    eventName,\n    keys: {\n      currentSelected,\n      currentSelectedIndex,\n      isSelected,\n      items,\n      setSelected\n    }\n  } = {\n    ...defaultOpts,\n    ...options,\n    keys: {\n      ...defaultOpts.keys,\n      ...options.keys\n    }\n  };\n\n  return class extends Base {\n    static get name() {\n      return Base.name;\n    }\n\n    _construct() {\n      super._construct();\n      this[currentSelectedIndex] = defaultIndex;\n    }\n\n    _init() {\n      super._init();\n      this[currentSelected][isSelected] = true;\n    }\n\n    [setSelected](selected, val) {\n      const prevSelected = (this[items] || [])[this[currentSelectedIndex]];\n\n      if (\n        selected &&\n        (selected !== prevSelected || selected[isSelected] !== val)\n      ) {\n        prevSelected && (prevSelected[isSelected] = false);\n        selected[isSelected] = val;\n        this[currentSelectedIndex] = Array.from(this[items] || []).indexOf(\n          selected\n        );\n        this.fireAncestors('$' + eventName, selected, val);\n      }\n    }\n\n    _captureKey(event) {\n      if (\n        (Array.isArray(captureKey) && captureKey.indexOf(event.key) > -1) ||\n        event.key === captureKey\n      ) {\n        const [selected] = this.stage.application.focusPath.slice(-1);\n        this[setSelected](selected, true);\n      }\n      return false;\n    }\n\n    ['$' + setSelected](selected, val) {\n      this[setSelected](selected, val);\n    }\n\n    get [currentSelected]() {\n      return this[items][this[currentSelectedIndex]];\n    }\n  };\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport Button from '../../components/Button/Button';\nimport Row from '../../components/Row/Row';\nimport withSelectionsMixin from '.';\n\nexport default {\n  title: 'Utilities/withSelections'\n};\n\nexport const withSelections = () => {\n  class UnderlineButton extends Button {\n    get isSelected() {\n      return this._isSelected;\n    }\n\n    set isSelected(v) {\n      this._whenEnabled.then(() => {\n        if (v !== this._isSelected) {\n          this._isSelected = v;\n          if (v) {\n            this.patch({\n              Line: {\n                rect: true,\n                color: 0xffffffff,\n                w: w => w,\n                h: 4,\n                y: h => h + 20\n              }\n            });\n          } else {\n            this.patch({\n              Line: undefined\n            });\n          }\n        }\n      });\n    }\n  }\n\n  return class withSelections extends lng.Component {\n    static _template() {\n      return {\n        Items: {\n          type: withSelectionsMixin(Row),\n          y: 100,\n          items: [\n            {\n              type: UnderlineButton,\n              title: 'Left'\n            },\n            {\n              type: UnderlineButton,\n              title: 'Center',\n              x: 150\n            },\n            {\n              type: UnderlineButton,\n              title: 'Right',\n              x: 312\n            }\n          ]\n        },\n        Title: {\n          text: {}\n        }\n      };\n    }\n\n    _firstEnable() {\n      this.tag('Title').text.text =\n        'Selected: ' + this.tag('Items').currentSelected.title;\n    }\n\n    $onSelect() {\n      this.tag('Title').text.text =\n        'Selected: ' + this.tag('Items').currentSelected.title;\n    }\n  };\n};\n\nwithSelections.storyName = 'withSelections';\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../node_modules/memoizerific sync recursive\";\nmodule.exports = webpackEmptyContext;"],"names":[],"sourceRoot":""}