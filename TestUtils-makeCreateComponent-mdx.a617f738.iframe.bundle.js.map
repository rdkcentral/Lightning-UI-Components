{"version":3,"file":"TestUtils-makeCreateComponent-mdx.a617f738.iframe.bundle.js","mappingstOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA","sources":["webpack://lightning-ui-docs/../../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components-test-utils/src/docs/TestUtils/makeCreateComponent.mdx","webpack://lightning-ui-docs/../../../node_modules/memoizerific/ sync","webpack://lightning-ui-docs/../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://lightning-ui-docs/../../../node_modules/react/jsx-runtime.js"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\n/*prettier-ignore*/\n/*\nCopyright 2023 Comcast Cable Communications Management, LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nSPDX-License-Identifier: Apache-2.0\n\\*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/Lightning-UI-Components/Lightning-UI-Components/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Meta} from '@storybook/blocks';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    a: \"a\",\n    h4: \"h4\",\n    h5: \"h5\",\n    pre: \"pre\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [\"\\n\", \"\\n\", \"\\n\", _jsx(Meta, {\n      title: \"Docs / Unit Testing / Test Utils / makeCreateComponent \"\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"makecreatecomponent\",\n      children: \"makeCreateComponent\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Returns a function, referred to as a \", _jsx(_components.code, {\n        children: \"createComponent\"\n      }), \" function, which is used to generate an instance of a component to run unit test cases against.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"arguments\",\n      children: \"Arguments\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.code, {\n        children: \"makeCreateComponent(component, defaultConfig, defaultOptions)\"\n      })\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"argument\"\n          }), _jsx(_components.th, {\n            children: \"type\"\n          }), _jsx(_components.th, {\n            children: \"default\"\n          }), _jsx(_components.th, {\n            children: \"description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"component\"\n          }), _jsx(_components.td, {\n            children: \"lng.Component\"\n          }), _jsx(_components.td, {\n            children: \"undefined\"\n          }), _jsx(_components.td, {\n            children: \"component to render an instance of\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"defaultConfig\"\n          }), _jsx(_components.td, {\n            children: \"object\"\n          }), _jsx(_components.td, {}), _jsx(_components.td, {\n            children: \"properties that should be applied to the component by default\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"defaultOptions\"\n          }), _jsx(_components.td, {\n            children: \"object\"\n          }), _jsx(_components.td, {}), _jsxs(_components.td, {\n            children: [\"default options used when creating the component instance (these options are passed to the \", _jsx(_components.code, {\n              children: \"TestRenderer.create\"\n            }), \" function)\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"createcomponent\",\n      children: _jsx(_components.code, {\n        children: \"createComponent\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Returns an array of 2 elements:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"an instance of the component to be tested against (generated by \", _jsx(_components.code, {\n          children: \"testRenderer.getInstance()\"\n        }), \")\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"a \", _jsx(_components.a, {\n          href: \"/story/docs-unit-testing-test-renderer-create--page#testrenderer-functions\",\n          children: \"testRenderer\"\n        }), \" object generated using the \", _jsx(_components.code, {\n          children: \"component\"\n        }), \" argument and a merged object created from \", _jsx(_components.code, {\n          children: \"defaultOptions\"\n        }), \" and \", _jsx(_components.code, {\n          children: \"options\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"arguments-1\",\n      children: \"Arguments\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"argument\"\n          }), _jsx(_components.th, {\n            children: \"type\"\n          }), _jsx(_components.th, {\n            children: \"default\"\n          }), _jsx(_components.th, {\n            children: \"description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"config\"\n          }), _jsx(_components.td, {\n            children: \"object\"\n          }), _jsx(_components.td, {}), _jsxs(_components.td, {\n            children: [\"properties that should be applied to the component. This object is spread over the \", _jsx(_components.code, {\n              children: \"defaultConfig\"\n            }), \" object.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"options\"\n          }), _jsx(_components.td, {\n            children: \"object\"\n          }), _jsx(_components.td, {}), _jsxs(_components.td, {\n            children: [\"options used when creating the component instance (these options are passed to the \", _jsx(_components.code, {\n              children: \"TestRenderer.create\"\n            }), \" function). This object is spread over the \", _jsx(_components.code, {\n              children: \"defaultOptions\"\n            }), \" object\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.h5, {\n      id: \"example-generating-a-makecomponent-function-and-test-component\",\n      children: [\"Example: Generating a \", _jsx(_components.code, {\n        children: \"makeComponent\"\n      }), \" function and test component\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"import lng from '@lightningjs/core';\\nimport { makeCreateComponent } from '@lightningjs/ui-components-test-utils';\\n\\n// Lightning component to write unit tests for\\nclass Example extends lng.Component {\\n  static _template() {\\n    return {\\n      Example: {\\n        text: { text: '' }\\n      }\\n    };\\n  }\\n\\n  set exampleProp(value) {\\n    this._exampleProp = value;\\n    this.tag('Example').text.text = value;\\n  }\\n\\n  get exampleProp() {\\n    return this._exampleProp;\\n  }\\n}\\n\\n// unit tests for Example component\\n\\n// generate a createComponent function to use in tests\\nconst defaultConfig = { exampleProp: 'foo' };\\nconst defaultOptions = { focused: false };\\nconst createExampleComponent = makeCreateComponent(\\n  Example,\\n  defaultConfig,\\n  defaultOptions\\n);\\n\\n// Ex. An instance of the component rendered with the properties defined in the defaultConfig and defaultOptions object\\nit('should render the exampleProp value as text', () => {\\n  const [example] = createExampleComponent();\\n\\n  expect(example.exampleProp).toBe('foo');\\n  expect(example.tag('Example').text.text).toBe('foo');\\n  expect(example.hasFocus()).toBe(false);\\n});\\n\\n// Ex. An instance of the component rendered with the properties defined in the config object\\nit('should support updating the text', () => {\\n  // overwrite the value of exampleProp defined in defaultConfig\\n  const [example] = createExampleComponent({\\n    exampleProp: 'bar'\\n  });\\n\\n  expect(example.exampleProp).toBe('bar');\\n  expect(example.tag('Example').text.text).toBe('bar');\\n});\\n\\n// Ex. An instance of the component rendered with options defined in the options object\\nit('should support rendering the component in a focused state', () => {\\n  // overwrite the value of focused defined in defaultOptions\\n  const [example] = createExampleComponent({}, { focused: true });\\n\\n  expect(example.hasFocus()).toBe(true);\\n});\\n\\n// Ex. Using a function provided by the testRenderer object (focus)\\nit('should allow focusing on the component', () => {\\n  const [example, testRenderer] = createExampleComponent();\\n\\n  // focused was set to false in defaultOptions, so the componet will initially render without focus\\n  expect(example.hasFocus()).toBe(false);\\n\\n  testRenderer.focus();\\n\\n  expect(example.hasFocus()).toBe(true);\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"spyonmethods\",\n      children: \"spyOnMethods\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A utility which enables running component methods asynchronously.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"options\"\n      }), \" argument passed to the \", _jsx(_components.code, {\n        children: \"createComponent\"\n      }), \" function accepts a field called \", _jsx(_components.code, {\n        children: \"spyOnMethods\"\n      }), \".\\nThe value for \", _jsx(_components.code, {\n        children: \"spyOnMethods\"\n      }), \" can be an array of method names to generate promises from. When one of those methods is invoked in the component it's associated promise will resolve, then the actual method will be invoked. The promises generated from the passed in methods are given the name \", _jsx(_components.code, {\n        children: \"_${methodName}SpyPromise\"\n      }), \".\"]\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(_components.h5, {\n      id: \"example-spying-on-component-methods-and-awaiting-their-execution-before-making-assertions-on-their-side-effects\",\n      children: \"Example: Spying on component methods and awaiting their execution before making assertions on their side effects\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"class MethodSpiesExample extends Base {\\n  static get __componentName() {\\n    return 'MethodSpiesExample';\\n  }\\n\\n  static _template() {\\n    return {\\n      Title: {\\n        type: TextBox\\n      },\\n      Subtitle: {\\n        type: TextBox,\\n        y: 100\\n      }\\n    };\\n  }\\n\\n  static get tags() {\\n    return ['Title', 'Subtitle'];\\n  }\\n\\n  static get properties() {\\n    return ['title', 'subtitle'];\\n  }\\n\\n  _construct() {\\n    super._construct();\\n    this._title = 'title';\\n    this._subtitle = 'subtitle';\\n  }\\n\\n  _update() {\\n    this._updateTitle();\\n    this._updateSubtitle();\\n  }\\n\\n  _updateTitle() {\\n    this._Title.content = this.title;\\n  }\\n  _updateSubtitle() {\\n    this._Subtitle.content = this.subtitle;\\n  }\\n}\\n\\nconst createComponent = makeCreateComponent(MethodSpies);\\n\\nit('should update the title and subtitle', async () => {\\n  const [methodSpiesComponent, testRenderer] = createComponent(\\n    {},\\n    { spyOnMethods: ['_update'] }\\n  );\\n\\n  // wait for _update to be called on the initial render before proceeding\\n  await methodSpiesComponent.__updateSpyPromise;\\n\\n  expect(methodSpiesComponent._Title.content).toBe('title');\\n  expect(methodSpiesComponent._Subtitle.content).toBe('subtitle');\\n\\n  const newTitle = 'new title';\\n  const newSubtitle = 'new subtitle';\\n  methodSpiesComponent.patch({\\n    title: newTitle,\\n    subtitle: newSubtitle\\n  });\\n\\n  // wait for _update to be called in response to values in the properties array changing\\n  await methodSpiesComponent.__updateSpyPromise;\\n\\n  expect(methodSpiesComponent._Title.content).toBe(newTitle);\\n  expect(methodSpiesComponent._Subtitle.content).toBe(newSubtitle);\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsxs(_components.strong, {\n        children: [\"Note: \", _jsx(_components.code, {\n          children: \"spyOnMethods\"\n        }), \" can only be set in in the \", _jsx(_components.code, {\n          children: \"options\"\n        }), \" object of \", _jsx(_components.code, {\n          children: \"createComponent\"\n        }), \". It can not be assigned to the \", _jsx(_components.code, {\n          children: \"defaultOptions\"\n        }), \" object in \", _jsx(_components.code, {\n          children: \"makeCreateComponent\"\n        })]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../node_modules/memoizerific sync recursive\";\nmodule.exports = webpackEmptyContext;","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":[],"sourceRoot":""}