{"version":3,"file":"mixins-withHandleKey-withHandleKey-mdx.b7ddd5b6.iframe.bundle.js","mappingsnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAGA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAtDA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/mixins/withHandleKey/withHandleKey.mdx","webpack://lightning-ui-docs/../../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Surface/Surface.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Surface/Surface.js","webpack://lightning-ui-docs/../../../node_modules/@storybook/core/dist/components/ sync","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/mixins/withHandleKey/withHandleKey.stories.js","webpack://lightning-ui-docs/../../../node_modules/memoizerific/ sync"],"sourcesContent":["\nimport React from 'react';\n\n/*prettier-ignore*/\n/*\nCopyright 2023 Comcast Cable Communications Management, LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nSPDX-License-Identifier: Apache-2.0\n\\*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/Lightning-UI-Components/Lightning-UI-Components/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.mjs\";\nimport {Meta} from '@storybook/blocks';\nimport * as withHandleKeyStories from './withHandleKey.stories';\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [\"\\n\", \"\\n\", \"\\n\", _jsx(Meta, {\n      of: withHandleKeyStories\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"withhandlekey\",\n      children: \"withHandleKey\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"withHandleKey\"\n      }), \" mixin can be wrapped around a parent component to handle key events and also to take advantage of the\\nglobal \", _jsx(_components.code, {\n        children: \"keyMetricsCallbackHandler\"\n      }), \" in the lightning UI Context.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"source\",\n      children: \"Source\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/@lightningjs/ui-components/src/mixins/withHandleKey/index.js\",\n        rel: \"nofollow\",\n        children: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/@lightningjs/ui-components/src/mixins/withHandleKey/index.js\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"usage\",\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Out of the box, \", _jsx(_components.code, {\n        children: \"withHandleKey\"\n      }), \" adds a generic _handleKey & _handleKeyRelease function and calls the corresponding \", _jsx(_components.code, {\n        children: \"on{Key}\"\n      }), \" handler. If no key handler is found, it fires an \", _jsx(_components.code, {\n        children: \"$on{Key}\"\n      }), \" & \", _jsx(_components.code, {\n        children: \"$on${Key}Release\"\n      }), \" event.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Additionally, if a \", _jsx(_components.code, {\n        children: \"metricsPayload\"\n      }), \" is defined, the global \", _jsx(_components.code, {\n        children: \"keyMetricsCallbackHandler\"\n      }), \" in Context will be invoked with\\nthe given \", _jsx(_components.code, {\n        children: \"metricsPayload\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"class Example extends lng.Component {\\n  static _template() {\\n    return {\\n      MyTile: {\\n        type: Tile,\\n        onArrowUp: (targetElm, keyEvent) => {\\n          console.log('Up');\\n        },\\n        onArrowDown: (targetElm, keyEvent) => {\\n          console.log('Down');\\n        },\\n        metricsPayload: {\\n          buttonName: 'arrowUp',\\n          uniqueId: 'unique-123'\\n        }\\n      }\\n    };\\n  }\\n\\n  $onEnter(item, keyEvent) {\\n    console.log('Child component entered: ', item);\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Take a look at the preview above. Tile component is using the withHandleKey mixin.\\nIf you press enter on the first tile, you should see it print a metrics payload in the console (inspector view)\\nIn this example, Tile extends \", _jsx(_components.code, {\n        children: \"withHandleKey\"\n      }), \" and allows dynamically adding \", _jsx(_components.code, {\n        children: \"on${Key}\"\n      }), \" functions or event listener for \", _jsx(_components.code, {\n        children: \"$on{key}\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Example below - an metricPayload is provided, which will be invoked when any key is handled, with the payload\\n\", _jsx(_components.code, {\n        children: \"metricsPayload: { buttonName: 'arrowUp', uniqueId: 'unique-123' }\"\n      })]\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const base = theme => ({\n  backgroundColor: theme.color.interactiveNeutral,\n  radius: theme.radius.md,\n  animation: {}\n});\n\nexport const tone = theme => ({\n  inverse: {\n    backgroundColor: theme.color.interactiveInverse\n  }\n});\n\nexport const mode = theme => ({\n  focused: {\n    backgroundColor: theme.color.interactiveNeutralFocus,\n    tone: {\n      inverse: {\n        backgroundColor: theme.color.interactiveInverseFocus\n      }\n    }\n  },\n  disabled: {\n    backgroundColor: theme.color.fillNeutralDisabled\n  }\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { getMaxRoundRadius } from '../../utils';\nimport Base from '../Base';\nimport * as styles from './Surface.styles';\nimport lng from '@lightningjs/core';\n\nexport default class Surface extends Base {\n  static _template() {\n    return {\n      Background: {}\n    };\n  }\n\n  static get __componentName() {\n    return 'Surface';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  static get properties() {\n    return [];\n  }\n\n  static get tags() {\n    return ['Background'];\n  }\n\n  get innerH() {\n    return this.h;\n  }\n\n  get innerW() {\n    return this.w;\n  }\n\n  _update() {\n    this._updateLayout();\n    this._updateScale();\n  }\n\n  _updateLayout() {\n    this._Background.patch({\n      texture: lng.Tools.getRoundRect(\n        this.innerW - 2, // Reference the underscored values here in cause the h or w getters need to be overwritten for alignment - see Tile\n        this.innerH - 2,\n        getMaxRoundRadius(this.style.radius, this.w, this.h),\n        0,\n        null,\n        true,\n        this.style.backgroundColor\n      )\n    });\n  }\n\n  _updateScale() {\n    const scale = this._isFocusedMode\n      ? this.getFocusScale(this.w, this.h)\n      : this.getUnfocusScale(this.w, this.h);\n\n    this.applySmooth(this, { scale }, { scale: [scale, this.style.animation] });\n  }\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../node_modules/@storybook/core/dist/components sync recursive\";\nmodule.exports = webpackEmptyContext;","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport Tile from '../../components/Tile/Tile';\nimport Row from '../../components/Row/Row';\nimport context from '../../globals/context/index';\nimport withHandleKeyMixin from '.';\n\ncontext.config({\n  // Inspect console to see - should only be called when pressing enter on first tile.\n  keyMetricsCallback: (key, p) => {\n    // eslint-disable-next-line\n    console.log('Metrics payload received', key, p);\n  }\n});\n\nexport default {\n  title: 'Utilities/withHandleKey'\n};\n\nexport const withHandleKey = args => {\n  class withHandleKey extends lng.Component {\n    static _template() {\n      return {\n        x: 60,\n        y: 60,\n        Row: {\n          type: Row,\n          itemSpacing: 60,\n          items: [\n            {\n              type: Tile,\n              src: 'https://image.tmdb.org/t/p/w500/zHdQ6yaqDf3OQO5uhr0auAgwK6O.jpg',\n              w: 320,\n              h: 180,\n              onEnter: args.onEnter,\n              metricsPayload: {\n                buttonName: 'enter button',\n                uniqueId: 1\n              }\n            },\n            {\n              type: Tile,\n              src: 'https://image.tmdb.org/t/p/w500/zHdQ6yaqDf3OQO5uhr0auAgwK6O.jpg',\n              w: 320,\n              h: 180,\n              onArrowDown: args.onArrowDown,\n              metricsPayload: {\n                buttonName: 'arrow down button',\n                uniqueId: 2\n              }\n            },\n            {\n              type: Tile,\n              src: 'https://image.tmdb.org/t/p/w500/zHdQ6yaqDf3OQO5uhr0auAgwK6O.jpg',\n              w: 320,\n              h: 180,\n              onArrowUp: args.onArrowUp,\n              metricsPayload: {\n                buttonName: 'arrow up button',\n                uniqueId: 3\n              }\n            },\n            {\n              type: Tile,\n              src: 'https://image.tmdb.org/t/p/w500/zHdQ6yaqDf3OQO5uhr0auAgwK6O.jpg',\n              w: 320,\n              h: 180,\n              onArrowRight: args.onArrowRight,\n              metricsPayload: {\n                buttonName: 'arrow right button',\n                uniqueId: 4\n              }\n            }\n          ]\n        }\n      };\n    }\n    // eslint-disable-next-line no-unused-vars\n    $onEnter(keyEvent, tile) {\n      args.onEnter();\n    }\n  }\n  return withHandleKeyMixin(withHandleKey);\n};\n\nwithHandleKey.storyName = 'withHandleKey';\n\nwithHandleKey.args = {};\n\nwithHandleKey.argTypes = {};\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../node_modules/memoizerific sync recursive\";\nmodule.exports = webpackEmptyContext;"],"names":[],"sourceRoot":""}