{"version":3,"file":"Readme-mdx.3693ba49.iframe.bundle.js","mappingsxMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://lightning-ui-docs/./src/Readme.mdx","webpack://lightning-ui-docs/../../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js","webpack://lightning-ui-docs/../../../node_modules/@storybook/core/dist/components/ sync","webpack://lightning-ui-docs/../../../node_modules/memoizerific/ sync"],"sourcesContent":["\nimport React from 'react';\n\n/*prettier-ignore*/\n/*\nCopyright 2023 Comcast Cable Communications Management, LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nSPDX-License-Identifier: Apache-2.0\n\\*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/Lightning-UI-Components/Lightning-UI-Components/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.mjs\";\nimport {Markdown, Meta} from '@storybook/blocks';\nimport ReadMe from '../../../../README.md?raw';\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    blockquote: \"blockquote\",\n    code: \"code\",\n    em: \"em\",\n    h1: \"h1\",\n    h2: \"h2\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [\"\\n\", \"\\n\", \"\\n\", _jsx(Meta, {\n      title: \"Docs/ Read Me\"\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"lightning-ui\",\n      children: \"Lightning UI\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This library contains shared Lightning components, you can view our live \", _jsx(_components.a, {\n        href: \"https://rdkcentral.github.io/Lightning-UI-Components/\",\n        rel: \"nofollow\",\n        children: \"Storybook documentation\"\n      }), \" to learn more about each component and how to leverage them in your application.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In order to facilitate the development process for our theming architecture we have converted this project into a monorepo using Yarn workspaces. This allows engineers to work across multiple packages without the need for \", _jsx(_components.code, {\n        children: \"npm link\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"yarn link\"\n      }), \". This also has some other benefits including easy visibility across different @lightningjs/ui packages, standardization, and better release management.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Three packages are currently maintained and released from this project.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"@lightningjs/ui-components\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"@lightningjs/ui-components-test-utils\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"@lightningjs/ui-components-theme-base\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"local-development\",\n      children: \"Local Development\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To run the repository locally, run:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"yarn install\\nyarn start\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This will launch Storybook at \", _jsx(_components.a, {\n        href: \"http://localhost:8000/\",\n        rel: \"nofollow\",\n        children: \"http://localhost:8000/\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"peer-dependencies\",\n      children: \"Peer Dependencies\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"@lightningjs/ui-components\"\n      }), \" has a peer dependency on \", _jsx(_components.code, {\n        children: \"@lightningjs/core^2.x\"\n      }), \". If you are stuck using the \", _jsx(_components.em, {\n        children: \"old Lightning\"\n      }), \", i.e. \", _jsx(_components.code, {\n        children: \"wpe-lightning^1.x\"\n      }), \", you will need to alias \", _jsx(_components.code, {\n        children: \"@lightningjs/core\"\n      }), \" in your build process. If you are bundling your app using \", _jsx(_components.a, {\n        href: \"https://webpack.js.org/\",\n        rel: \"nofollow\",\n        children: \"Webpack\"\n      }), \", you should add this to your config:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"// in webpack.config.js\\nmodule.exports = {\\n  resolve: {\\n    alias: {\\n      '@lightningjs/core': path.resolve(__dirname, 'node_modules/wpe-lightning')\\n    }\\n  }\\n};\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.strong, {\n          children: \"NOTE:\"\n        }), \" aliasing \", _jsx(_components.code, {\n          children: \"@lightningjs/core\"\n        }), \" to point to \", _jsx(_components.code, {\n          children: \"wpe-lightning\"\n        }), \" is \", _jsx(_components.em, {\n          children: \"not\"\n        }), \" guaranteed to work with everything! Consider updating your Lightning library as soon as possible.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"installation\",\n      children: \"Installation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Install from NPM:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"npm install --save @lightningjs/ui-components\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"@lightningjs/ui-components\"\n      }), \" has a peer dependency on the \", _jsx(_components.a, {\n        href: \"https://www.npmjs.com/package/@lightningjs/core\",\n        rel: \"nofollow\",\n        children: \"Lightning package\"\n      })]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-sh\",\n        children: \"npm install -S @lightningjs/ui @lightningjs/core\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"usage\",\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You should import components using ES6 named imports, like so:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"// App.js\\nimport lng from '@lightningjs/core';\\nimport { Button } from '@lightningjs/ui-components';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You should NOT use path imports like this:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"// Do not use\\nimport Button from '@lightningjs/ui-components/components/Button';\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Since packages are now bundled with rollup this allows proper tree shaking behavior. For more information on tree shaking the \", _jsx(_components.code, {\n        children: \"@material/ui\"\n      }), \" documentation has a great guide on \", _jsx(_components.a, {\n        href: \"https://material-ui.com/guides/minimizing-bundle-size/\",\n        rel: \"nofollow\",\n        children: \"development bundle size\"\n      }), \" (\", _jsx(_components.strong, {\n        children: \"note\"\n      }), \": this is external documentation otherwise unrelated to this project!).\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Use components in your application\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"import { FocusManager } from '@lightningjs/ui-components';\\n\\nclass MyComponent extends lng.Component {\\n  static _template() {\\n    return {\\n      FocusManager: {\\n        type: FocusManager,\\n        direction: 'row',\\n        children: []\\n      }\\n    };\\n  }\\n  _getFocused() {\\n    return this.tag('FocusManager');\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"questions\",\n      children: \"Questions???\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Submit a GitHub Issue or \", _jsx(_components.a, {\n        href: \"https://join.slack.com/t/lightning-community/shared_invite/zt-1q9ggb668-iTvnDyKYLhlM0dnJpoWcWw\",\n        rel: \"nofollow\",\n        children: \"Join us on Slack\"\n      }), \"!\"]\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../node_modules/@storybook/core/dist/components sync recursive\";\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../node_modules/memoizerific sync recursive\";\nmodule.exports = webpackEmptyContext;"],"names":[],"sourceRoot":""}