{"version":3,"file":"5921.f496a033.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AA7BA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwxTA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AA+PA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAGA;AAGA;AAAA;AACA;AAGA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AASA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAGA;AAOA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAMA;AAGA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Knob/Knob.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Knob/Knob.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Slider/Slider.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Slider/Slider.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/docs/utils.js"],"sourcesContent":["/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const base = theme => {\n  const size = theme.spacer.lg;\n  return {\n    width: size,\n    height: size,\n    radius: size / 2\n  };\n};\n\nexport const tone = theme => ({\n  neutral: {\n    circleColor: theme.color.interactiveNeutralFocus,\n    mode: {\n      disabled: {\n        circleColor: theme.color.fillNeutralDisabled\n      }\n    }\n  },\n  inverse: {\n    circleColor: theme.color.interactiveInverseFocus,\n    mode: {\n      disabled: {\n        circleColor: theme.color.fillInverseDisabled\n      }\n    }\n  },\n  brand: {\n    circleColor: theme.color.interactiveBrandFocus,\n    mode: {\n      disabled: {\n        circleColor: theme.color.fillInverseDisabled\n      }\n    }\n  }\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { getMaxRoundRadius } from '../../utils';\nimport Base from '../Base';\nimport * as styles from './Knob.styles';\nimport lng from '@lightningjs/core';\n\nexport default class Knob extends Base {\n  static get __componentName() {\n    return 'Knob';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  static _template() {\n    return {\n      mount: 0.5\n    };\n  }\n\n  _update() {\n    this._updateCircleLayout();\n  }\n\n  _updateCircleLayout() {\n    this.patch({\n      texture: lng.Tools.getRoundRect(\n        this.w,\n        this.h,\n        getMaxRoundRadius(this.style.radius, this.w, this.h),\n        null,\n        null,\n        true,\n        this.style.circleColor\n      )\n    });\n  }\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { getWidthByColumnSpan } from '../../utils';\n\nexport const base = theme => {\n  const size = theme.spacer.lg;\n  return {\n    arrowAlphaValue: theme.alpha.primary,\n    arrowAlphaValueLimit: theme.alpha.secondary,\n    arrowHeight: theme.spacer.xxl,\n    arrowSpacing: theme.spacer.md,\n    arrowWidth: theme.spacer.xxl,\n    arrowColor: theme.color.fillNeutral,\n    containerHeight: theme.spacer.lg + theme.spacer.xs,\n    iconLeftSrc: theme.asset.arrowLeft,\n    iconRightSrc: theme.asset.arrowRight,\n    minWidth: getWidthByColumnSpan(theme, 2),\n    progressBar: {},\n    width: size,\n    height: size,\n    radius: size / 2,\n    showArrows: true,\n    showKnob: true,\n    circleAnimation: {}\n  };\n};\n\nexport const mode = () => ({\n  disabled: {\n    arrowAlphaValue: 0\n  }\n});\n\nexport const tone = theme => ({\n  neutral: {\n    arrowColor: theme.color.fillNeutral,\n    circleColor: theme.color.interactiveNeutralFocus\n  },\n  inverse: {\n    arrowColor: theme.color.fillInverse,\n    circleColor: theme.color.interactiveInverseFocus\n  },\n  brand: {\n    arrowColor: theme.color.fillNeutral,\n    circleColor: theme.color.interactiveNeutralFocus\n  }\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport Base from '../Base';\nimport * as styles from './Slider.styles';\nimport ProgressBar from '../ProgressBar';\nimport Icon from '../Icon';\nimport Knob from '../Knob';\nimport { degreesToRadians } from '../../utils';\n\nexport default class Slider extends Base {\n  static get __componentName() {\n    return 'Slider';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  static _template() {\n    return {\n      Container: {\n        mountY: 0.5,\n        y: h => h / 2,\n        Bar: {\n          mountY: 0.5,\n          SliderBar: {\n            type: ProgressBar,\n            progress: 0.5,\n            mountY: 0.5,\n            announce: ''\n          },\n          Circle: {\n            type: Knob,\n            zIndex: 5 // places circle knob on top of sliderBar\n          }\n        },\n        LeftArrow: {\n          type: Icon,\n          mountY: 0.5,\n          y: h => h / 2\n        },\n        RightArrow: {\n          type: Icon,\n          mountY: 0.5,\n          y: h => h / 2\n        }\n      }\n    };\n  }\n\n  static get properties() {\n    return ['max', 'min', 'step', 'value', 'vertical'];\n  }\n\n  static get tags() {\n    return [\n      'Container',\n      {\n        name: 'Bar',\n        path: 'Container.Bar'\n      },\n      {\n        name: 'SliderBar',\n        path: 'Container.Bar.SliderBar'\n      },\n      {\n        name: 'Circle',\n        path: 'Container.Bar.Circle'\n      },\n      {\n        name: 'LeftArrow',\n        path: 'Container.LeftArrow'\n      },\n      {\n        name: 'RightArrow',\n        path: 'Container.RightArrow'\n      }\n    ];\n  }\n\n  _construct() {\n    super._construct();\n    this._min = 0;\n    this._max = 100;\n    this._step = 1;\n    this._value = 0;\n    this._vertical = false;\n  }\n\n  _update() {\n    this._updateDirection();\n    this._updateSliderLayout();\n    this._updatePositions();\n    this._updateArrowAlpha();\n    this._updateArrows();\n    if (this._valueChanged) {\n      this.signal('onChange', this.value, this);\n      this.fireAncestors('$announce', this.announce);\n      this._valueChanged = false;\n    }\n    this._checkAndSignalSizeChange();\n  }\n\n  _handleLeft() {\n    if (this._isDisabledMode) {\n      return false;\n    }\n    this._decrementValue();\n    if (typeof this.onLeft === 'function') {\n      return this.onLeft(this);\n    }\n    return true;\n  }\n\n  _handleRight() {\n    if (this._isDisabledMode) {\n      return false;\n    }\n    this._incrementValue();\n    if (typeof this.onRight === 'function') {\n      return this.onRight(this);\n    }\n    return true;\n  }\n\n  _updateDirection() {\n    this.patch({\n      pivotX: 0,\n      rotation: this.vertical ? degreesToRadians(90) : 0,\n      mountY: this.vertical ? 0.5 : 0\n    });\n  }\n\n  _updateSliderLayout() {\n    const w = this.w || this.style.minWidth;\n    this._Container.patch({\n      h: this.style.containerHeight,\n      w,\n      Bar: {\n        x: this._calculatedSliderX,\n        SliderBar: {\n          y: this.style.containerHeight / 2,\n          w: this._calculatedSliderWidth,\n          style: {\n            duration: 0,\n            ...this.style.progressBar\n          }\n        }\n      }\n    });\n    this.h = Math.max(this.style.containerHeight, this.style.arrowHeight);\n  }\n\n  _checkAndSignalSizeChange() {\n    if (\n      this.h !== this.prevH ||\n      this._Container.w !== this.prevW ||\n      this.rotation !== this.prevRotation\n    ) {\n      this.signal('onSizeChange', this);\n    }\n    this.prevH = this.h;\n    this.prevW = this._Container.w;\n    this.prevRotation = this.rotation;\n  }\n\n  _updatePositions() {\n    this._updateSliderProgress();\n    this._updateCirclePosition();\n  }\n\n  _updateSliderProgress() {\n    let progress =\n      this.value < this.min ? this.min / this.max : this.value / this.max;\n\n    if (this.value > this.max || this.value - this.step > this.max) {\n      progress = this._calculatedSliderWidth;\n    } else if (this.min < 0 || this.max < 0) {\n      progress = (this.value - this.min) / (this.max - this.min);\n    }\n\n    this._SliderBar.progress = progress;\n  }\n\n  _updateCirclePosition() {\n    let xCirclePosition;\n    if (this.value < this.min || this.value + this.step < this.min) {\n      xCirclePosition = (this.min / this.max) * this._calculatedSliderWidth;\n    } else if (this.value > this.max || this.value - this.step > this.max) {\n      xCirclePosition = this._calculatedSliderWidth;\n    } else {\n      if (this.min < 0 || this.max < 0) {\n        xCirclePosition =\n          ((this.value - this.min) / (this.max - this.min)) *\n          this._calculatedSliderWidth;\n      } else {\n        xCirclePosition = (this.value / this.max) * this._calculatedSliderWidth;\n      }\n    }\n\n    if (this._Circle) {\n      this._Circle.patch({\n        mode: this.mode,\n        style: {\n          radius: this.style.radius,\n          w: this.style.w,\n          h: this.style.h,\n          circleColor: this.style.circleColor\n        },\n        y: this._SliderBar.y + 1,\n        alpha: this._isFocusedMode && this.style.showKnob ? 1 : 0\n      });\n      if (\n        this.style.circleAnimation &&\n        Object.keys(this.style.circleAnimation).length\n      ) {\n        this._Circle.smooth = {\n          x: [xCirclePosition, this.style.circleAnimation]\n        };\n      } else {\n        this._Circle.x = xCirclePosition;\n      }\n    }\n  }\n\n  _updateArrowAlpha() {\n    // fade arrows at min/max\n    let leftAlpha;\n    let rightAlpha;\n\n    // ensure arrows are always rendered, otherwise color changes might not apply right away\n    const offAlpha = 0.001;\n    const alpha = this.style.showArrows ? this.style.arrowAlphaValue : offAlpha;\n    const alphaLimit = this.style.showArrows\n      ? this.style.arrowAlphaValueLimit\n      : offAlpha;\n\n    leftAlpha = rightAlpha = alpha;\n    if (!this._isDisabledMode && this.value <= this.min) {\n      leftAlpha = alphaLimit;\n      rightAlpha = alpha;\n    } else if (!this._isDisabledMode && this.value >= this.max) {\n      leftAlpha = alpha;\n      rightAlpha = alphaLimit;\n    }\n\n    this._LeftArrow.smooth = { alpha: leftAlpha };\n    this._RightArrow.smooth = { alpha: rightAlpha };\n  }\n\n  _updateArrows() {\n    const arrowProps = {\n      w: this.style.arrowWidth,\n      h: this.style.arrowHeight,\n      style: {\n        color: this.style.arrowColor\n      }\n    };\n    this._LeftArrow.patch({\n      ...arrowProps,\n      icon: this.style.iconLeftSrc\n    });\n    this._RightArrow.patch({\n      ...arrowProps,\n      icon: this.style.iconRightSrc\n    });\n\n    this._RightArrow.smooth = {\n      x: this.style.arrowSpacing + this._calculatedSliderWidth + this._Bar.x\n    };\n  }\n\n  _decrementValue() {\n    const value = this.value - this.step;\n    this.value = value >= this.min ? value : this.min;\n    this._updatePositions();\n  }\n\n  _incrementValue() {\n    const value = this.value + this.step;\n    this.value = value <= this.max ? value : this.max;\n    this._updatePositions();\n  }\n\n  _handleUp() {\n    return false;\n  }\n\n  _handleDown() {\n    return false;\n  }\n\n  get _calculatedSliderX() {\n    return this.style.showArrows\n      ? this.style.arrowSpacing + this.style.arrowWidth\n      : 0;\n  }\n\n  get _calculatedSliderWidth() {\n    const totalArrowSize = this.style.showArrows\n      ? this.style.arrowSpacing * 2 + this.style.arrowWidth * 2\n      : 0;\n    return this.w < totalArrowSize + this._circleW\n      ? this.style.minWidth - totalArrowSize\n      : this.w - totalArrowSize;\n  }\n\n  get _circleW() {\n    return this._Circle ? this._Circle.w : 0;\n  }\n\n  _setVertical(vertical) {\n    this._setState(vertical ? 'VerticalSlider' : '');\n    return vertical;\n  }\n\n  _setValue(value) {\n    this._valueChanged = value !== this._value;\n    return value;\n  }\n\n  set announce(announce) {\n    super.announce = announce;\n  }\n\n  get announce() {\n    if (this._announce !== undefined && this._announce !== null) {\n      return this._announce;\n    }\n    return this.value.toString();\n  }\n\n  static _states() {\n    return [\n      class VerticalSlider extends this {\n        _handleLeft() {\n          return false;\n        }\n\n        _handleRight() {\n          return false;\n        }\n\n        _handleUp() {\n          if (this._isDisabledMode) {\n            return false;\n          }\n          this._decrementValue();\n          if (typeof this.onUp === 'function') {\n            return this.onUp(this);\n          }\n          return true;\n        }\n\n        _handleDown() {\n          if (this._isDisabledMode) {\n            return false;\n          }\n          this._incrementValue();\n          if (typeof this.onDown === 'function') {\n            return this.onDown(this);\n          }\n          return true;\n        }\n      }\n    ];\n  }\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport utils from '../utils';\n\n// creates Mode control on stories\nexport const createModeControl = ({ options, summaryValue } = {}) => {\n  return {\n    mode: {\n      control: 'radio',\n      options:\n        options && Array.isArray(options)\n          ? ['unfocused', ...options]\n          : ['unfocused', 'focused', 'disabled'],\n      description: 'Sets the visual mode for the component',\n      table: {\n        defaultValue: { summary: summaryValue }\n      },\n      type: { name: 'string', required: true }\n    }\n  };\n};\n\n/**\n * @param {object} config Parameters for generating nested args: { argsObj, targetProp, include, overrides }\n */\nexport function nestedArgs(config) {\n  const { argsObj, targetProp, include, overrides } = config;\n  return Object.keys(argsObj).reduce((acc, curr) => {\n    if (!include.includes(curr)) return acc;\n    return {\n      ...acc,\n      [targetProp + '_' + curr]:\n        (overrides.args && overrides.args[curr]) || argsObj[curr]\n    };\n  }, {});\n}\n\n/**\n * @param {object} config Parameters for generating nested arg types: { argsObj, targetProp, include, overrides }\n */\nexport function nestedArgTypes(config) {\n  const { argTypesObj, targetProp, include, overrides } = config;\n  return Object.keys(argTypesObj).reduce((acc, curr) => {\n    if (!include.includes(curr)) return acc;\n    return {\n      ...acc,\n      [targetProp + '_' + curr]: {\n        // Namespaced to avoid conflicts\n        name: curr,\n        ...argTypesObj[curr],\n        ...overrides[curr],\n        table: {\n          ...(argTypesObj[curr].table || {}),\n          ...(overrides[curr] && overrides[curr].table),\n          category: targetProp\n        }\n      }\n    };\n  }, {});\n}\n\nexport const prevValues = {};\n\n/**\n * @param {object} config Parameters for generating nested arg actions: { componentName, argsTypeObj, targetProp, include, overrides }\n */\nexport function nestedArgActions(config) {\n  const { componentName, argTypesObj, targetProp, include, overrides } = config;\n  return Object.keys(argTypesObj).reduce((acc, curr) => {\n    if (!include.includes(curr)) return acc;\n    return {\n      ...acc,\n      [targetProp + '_' + curr]: (value, component) => {\n        component.tag(componentName).patch({\n          [targetProp]: {\n            ...prevValues[targetProp],\n            [curr.replace(targetProp + '_', '')]:\n              value === 'none'\n                ? undefined\n                : (overrides && overrides[curr]) || value // There are issues with merging objects here\n          }\n        });\n        // Allow patching to work with nested objects\n        if (!prevValues[targetProp]) {\n          prevValues[targetProp] = {};\n        }\n        prevValues[targetProp][curr.replace(targetProp + '_', '')] =\n          value === 'none'\n            ? undefined\n            : (overrides && overrides[curr]) || value;\n      }\n    };\n  }, {});\n}\n\n/**\n * @param {object} config Parameters for generating story: { componentName, baseStory, subStory, targetProperty, include, options }\n */\nexport function generateSubStory(config) {\n  config.baseStory.args = {\n    ...config.baseStory.args,\n    ...nestedArgs({\n      argsObj: config.subStory.args || {},\n      targetProp: config.targetProperty,\n      include: config.include,\n      overrides: (config.overrides && config.overrides.args) || {}\n    })\n  };\n\n  config.baseStory.argTypes = {\n    ...config.baseStory.argTypes,\n    ...nestedArgTypes({\n      argTypesObj: config.subStory.argTypes || {},\n      targetProp: config.targetProperty,\n      include: config.include,\n      overrides: (config.overrides && config.overrides.argTypes) || {}\n    })\n  };\n\n  if (\n    !(\n      config.baseStory &&\n      config.baseStory.parameters &&\n      config.baseStory.parameters.argActions\n    )\n  ) {\n    config.baseStory.parameters = {\n      argActions: {}\n    };\n  }\n\n  config.baseStory.parameters.argActions = {\n    ...config.baseStory.parameters.argActions,\n    ...nestedArgActions({\n      componentName: config.componentName,\n      argTypesObj: config.subStory.argTypes || {},\n      targetProp: config.targetProperty,\n      include: config.include,\n      overrides: (config.overrides && config.overrides.argActions) || {}\n    })\n  };\n}\n\n// used to create links to Lightning docs given an id\nexport const DocsLink = ({ children, id }) => {\n  const docsmap = {\n    lng: {\n      _base: 'https://rdkcentral.github.io/Lightning/docs',\n      Component: '/components/overview',\n      Text: '/textures/text',\n      Transition: '/transitions/attributes'\n    }\n  };\n  const [source, path] = id.split('.');\n  const href = docsmap[source]._base + docsmap[source][path];\n  return (\n    <a href={href} target=\"_blank\">\n      {children || id}\n    </a>\n  );\n};\n\nexport const Item = ({ children }) => children;\n\n/**\n * Creates formatted object for markdown prop tables\n * see Column and Row stories\n * @param {object} props\n * @param {object} props.type - TS-style generic/utility type\n */\nexport const ObjectFormat = ({ object }) => {\n  return [\n    '{',\n    <br />,\n    '  ',\n    ...utils.flatten(\n      Object.entries(object).map(([k, v]) => [\n        <span>&nbsp;&nbsp;</span>,\n        `${k}: `,\n        v,\n        ',',\n        <br />\n      ])\n    ),\n    '}'\n  ].map((x, i) => <Item key={i}>{x}</Item>);\n};\n\n/**\n * Formats TS-style generic types\n * See Columns and Row stories\n * @param {object} props\n * @param {object} props.children - component children\n * @param {string} props.type - Name of generic type\n */\nexport const GenericType = ({ children, type }) => {\n  return [type, '<', children, '>'].map((x, i) => <Item key={i}>{x}</Item>);\n};\n"],"names":[],"sourceRoot":""}