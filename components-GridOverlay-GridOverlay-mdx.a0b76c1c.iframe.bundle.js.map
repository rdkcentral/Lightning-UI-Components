{"version":3,"file":"components-GridOverlay-GridOverlay-mdx.a0b76c1c.iframe.bundle.js","mappingsfA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AC9KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;AACA","sources":["webpack://lightning-ui-docs/../../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/GridOverlay/GridOverlay.stories.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/GridOverlay/GridOverlay.mdx","webpack://lightning-ui-docs/../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://lightning-ui-docs/../../../node_modules/react/jsx-runtime.js"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"﻿/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport { context } from '../../globals';\\nimport { default as GridOverlayComponent } from '.';\\n\\nexport default {\\n  title: 'Components/GridOverlay'\\n};\\n\\nexport const GridOverlay = args =>\\n  class GridOverlay extends lng.Component {\\n    static _template() {\\n      return {\\n        GridOverlay: {\\n          type: GridOverlayComponent,\\n          x: context.theme.layout.marginX * -1,\\n          y: context.theme.layout.marginY * -1,\\n          showColumns: args.showColumns,\\n          showMargins: args.showMargins,\\n          showSafe: args.showSafe,\\n          showGutters: args.showGutters,\\n          showText: args.showText,\\n          alpha: args.alpha\\n        }\\n      };\\n    }\\n  };\\nGridOverlay.storyName = 'GridOverlay';\\nGridOverlay.args = {\\n  alpha: 1,\\n  showColumns: true,\\n  showMargins: true,\\n  showSafe: true,\\n  showGutters: true,\\n  showText: true\\n};\\nGridOverlay.argTypes = {\\n  alpha: {\\n    control: {\\n      type: 'range',\\n      min: 0,\\n      max: 1,\\n      step: 0.01\\n    },\\n    description:\\n      'Adjusts the opacity, parameter should be a value between 0 and 1',\\n    table: { defaultValue: { summary: 'undefined' } }\\n  },\\n  showColumns: {\\n    control: 'boolean',\\n    description: 'When true, displays the column span rectangles',\\n    table: {\\n      defaultValue: { summary: true }\\n    }\\n  },\\n  showMargins: {\\n    control: 'boolean',\\n    description: 'When true, displays the X and Y margin rulers',\\n    table: {\\n      defaultValue: { summary: true }\\n    }\\n  },\\n  showSafe: {\\n    control: 'boolean',\\n    description:\\n      'When true, displays the X and Y \\\"safe\\\" zone rulers (this is the area that content should not be rendered in to avoid screen clipping on a device)',\\n    table: {\\n      defaultValue: { summary: true }\\n    }\\n  },\\n  showGutters: {\\n    control: 'boolean',\\n    description: 'When true, displays the rulers for spacing between columns',\\n    table: {\\n      defaultValue: { summary: true }\\n    }\\n  },\\n  showText: {\\n    control: 'boolean',\\n    description:\\n      'When true, displays the textbox containing the exact numbers associated with the screen, margin, safe, and gutter sizes',\\n    table: {\\n      defaultValue: { summary: true }\\n    }\\n  }\\n};\\nGridOverlay.parameters = {\\n  argActions: {}\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"GridOverlay\": {\n    \"startLoc\": {\n      \"col\": 27,\n      \"line\": 25\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 41\n    },\n    \"startBody\": {\n      \"col\": 27,\n      \"line\": 25\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 41\n    }\n  }\n};\n    \n/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport { context } from '../../globals';\nimport { default as GridOverlayComponent } from '.';\nexport default {parameters: {\n  \"storySource\": {\n    \"source\": \"/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport { context } from '../../globals';\\nimport { default as GridOverlayComponent } from '.';\\nexport default {\\n  title: 'Components/GridOverlay'\\n};\\nexport const GridOverlay = args => class GridOverlay extends lng.Component {\\n  static _template() {\\n    return {\\n      GridOverlay: {\\n        type: GridOverlayComponent,\\n        x: context.theme.layout.marginX * -1,\\n        y: context.theme.layout.marginY * -1,\\n        showColumns: args.showColumns,\\n        showMargins: args.showMargins,\\n        showSafe: args.showSafe,\\n        showGutters: args.showGutters,\\n        showText: args.showText,\\n        alpha: args.alpha\\n      }\\n    };\\n  }\\n};\\nGridOverlay.storyName = 'GridOverlay';\\nGridOverlay.args = {\\n  alpha: 1,\\n  showColumns: true,\\n  showMargins: true,\\n  showSafe: true,\\n  showGutters: true,\\n  showText: true\\n};\\nGridOverlay.argTypes = {\\n  alpha: {\\n    control: {\\n      type: 'range',\\n      min: 0,\\n      max: 1,\\n      step: 0.01\\n    },\\n    description: 'Adjusts the opacity, parameter should be a value between 0 and 1',\\n    table: {\\n      defaultValue: {\\n        summary: 'undefined'\\n      }\\n    }\\n  },\\n  showColumns: {\\n    control: 'boolean',\\n    description: 'When true, displays the column span rectangles',\\n    table: {\\n      defaultValue: {\\n        summary: true\\n      }\\n    }\\n  },\\n  showMargins: {\\n    control: 'boolean',\\n    description: 'When true, displays the X and Y margin rulers',\\n    table: {\\n      defaultValue: {\\n        summary: true\\n      }\\n    }\\n  },\\n  showSafe: {\\n    control: 'boolean',\\n    description: 'When true, displays the X and Y \\\"safe\\\" zone rulers (this is the area that content should not be rendered in to avoid screen clipping on a device)',\\n    table: {\\n      defaultValue: {\\n        summary: true\\n      }\\n    }\\n  },\\n  showGutters: {\\n    control: 'boolean',\\n    description: 'When true, displays the rulers for spacing between columns',\\n    table: {\\n      defaultValue: {\\n        summary: true\\n      }\\n    }\\n  },\\n  showText: {\\n    control: 'boolean',\\n    description: 'When true, displays the textbox containing the exact numbers associated with the screen, margin, safe, and gutter sizes',\\n    table: {\\n      defaultValue: {\\n        summary: true\\n      }\\n    }\\n  }\\n};\\nGridOverlay.parameters = {\\n  argActions: {}\\n};\\nGridOverlay.parameters = {\\n  ...GridOverlay.parameters,\\n  docs: {\\n    ...GridOverlay.parameters?.docs,\\n    source: {\\n      originalSource: \\\"args => class GridOverlay extends lng.Component {\\\\n  static _template() {\\\\n    return {\\\\n      GridOverlay: {\\\\n        type: GridOverlayComponent,\\\\n        x: context.theme.layout.marginX * -1,\\\\n        y: context.theme.layout.marginY * -1,\\\\n        showColumns: args.showColumns,\\\\n        showMargins: args.showMargins,\\\\n        showSafe: args.showSafe,\\\\n        showGutters: args.showGutters,\\\\n        showText: args.showText,\\\\n        alpha: args.alpha\\\\n      }\\\\n    };\\\\n  }\\\\n}\\\",\\n      ...GridOverlay.parameters?.docs?.source\\n    }\\n  }\\n};\",\n    \"locationsMap\": {\n      \"grid-overlay\": {\n        \"startLoc\": {\n          \"col\": 27,\n          \"line\": 25\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 41\n        },\n        \"startBody\": {\n          \"col\": 27,\n          \"line\": 25\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 41\n        }\n      }\n    }\n  }\n,},\n  title: 'Components/GridOverlay'\n};\nexport const GridOverlay = args => class GridOverlay extends lng.Component {\n  static _template() {\n    return {\n      GridOverlay: {\n        type: GridOverlayComponent,\n        x: context.theme.layout.marginX * -1,\n        y: context.theme.layout.marginY * -1,\n        showColumns: args.showColumns,\n        showMargins: args.showMargins,\n        showSafe: args.showSafe,\n        showGutters: args.showGutters,\n        showText: args.showText,\n        alpha: args.alpha\n      }\n    };\n  }\n};\nGridOverlay.storyName = 'GridOverlay';\nGridOverlay.args = {\n  alpha: 1,\n  showColumns: true,\n  showMargins: true,\n  showSafe: true,\n  showGutters: true,\n  showText: true\n};\nGridOverlay.argTypes = {\n  alpha: {\n    control: {\n      type: 'range',\n      min: 0,\n      max: 1,\n      step: 0.01\n    },\n    description: 'Adjusts the opacity, parameter should be a value between 0 and 1',\n    table: {\n      defaultValue: {\n        summary: 'undefined'\n      }\n    }\n  },\n  showColumns: {\n    control: 'boolean',\n    description: 'When true, displays the column span rectangles',\n    table: {\n      defaultValue: {\n        summary: true\n      }\n    }\n  },\n  showMargins: {\n    control: 'boolean',\n    description: 'When true, displays the X and Y margin rulers',\n    table: {\n      defaultValue: {\n        summary: true\n      }\n    }\n  },\n  showSafe: {\n    control: 'boolean',\n    description: 'When true, displays the X and Y \"safe\" zone rulers (this is the area that content should not be rendered in to avoid screen clipping on a device)',\n    table: {\n      defaultValue: {\n        summary: true\n      }\n    }\n  },\n  showGutters: {\n    control: 'boolean',\n    description: 'When true, displays the rulers for spacing between columns',\n    table: {\n      defaultValue: {\n        summary: true\n      }\n    }\n  },\n  showText: {\n    control: 'boolean',\n    description: 'When true, displays the textbox containing the exact numbers associated with the screen, margin, safe, and gutter sizes',\n    table: {\n      defaultValue: {\n        summary: true\n      }\n    }\n  }\n};\nGridOverlay.parameters = {\n  argActions: {}\n};\nGridOverlay.parameters = {\n  ...GridOverlay.parameters,\n  docs: {\n    ...GridOverlay.parameters?.docs,\n    source: {\n      originalSource: \"args => class GridOverlay extends lng.Component {\\n  static _template() {\\n    return {\\n      GridOverlay: {\\n        type: GridOverlayComponent,\\n        x: context.theme.layout.marginX * -1,\\n        y: context.theme.layout.marginY * -1,\\n        showColumns: args.showColumns,\\n        showMargins: args.showMargins,\\n        showSafe: args.showSafe,\\n        showGutters: args.showGutters,\\n        showText: args.showText,\\n        alpha: args.alpha\\n      }\\n    };\\n  }\\n}\",\n      ...GridOverlay.parameters?.docs?.source\n    }\n  }\n};","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\n/*prettier-ignore*/\n/*\nCopyright 2023 Comcast Cable Communications Management, LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nSPDX-License-Identifier: Apache-2.0\n\\*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/Lightning-UI-Components/Lightning-UI-Components/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Meta, Title} from '@storybook/blocks';\nimport * as GridOverlayStories from './GridOverlay.stories';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    code: \"code\",\n    pre: \"pre\",\n    h3: \"h3\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [\"\\n\", \"\\n\", \"\\n\", _jsx(Meta, {\n      of: GridOverlayStories\n    }), \"\\n\", _jsx(Title, {}), \"\\n\", _jsx(_components.p, {\n      children: \"This component shows the grid layout, including the column spans and guides for margins and gutters.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"source\",\n      children: \"Source\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/@lightningjs/ui-components/src/components/GridOverlay/GridOverlay.js\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/@lightningjs/ui-components/src/components/GridOverlay/GridOverlay.js\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"usage\",\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"GridOverlay\"\n      }), \" just has toggles for showing the columns, margins, gutters, and textbox, which are all visible by default.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"import { GridOverlay } from '@lightningjs/ui-components';\\n\\nclass Basic extends lng.Component {\\n  static _template() {\\n    return {\\n      GridOverlay: {\\n        type: GridOverlay\\n      }\\n    };\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"api\",\n      children: \"API\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"properties\",\n      children: \"Properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"name\"\n          }), _jsx(_components.th, {\n            children: \"type\"\n          }), _jsx(_components.th, {\n            children: \"required\"\n          }), _jsx(_components.th, {\n            children: \"default\"\n          }), _jsx(_components.th, {\n            children: \"description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"showColumns\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"true\"\n          }), _jsx(_components.td, {\n            children: \"when true, displays the column span rectangles\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"showGutters\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"true\"\n          }), _jsx(_components.td, {\n            children: \"when true, displays the rulers for spacing between columns\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"showMargins\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"true\"\n          }), _jsx(_components.td, {\n            children: \"when true, displays the X and Y margin rulers\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"showSafe\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"true\"\n          }), _jsx(_components.td, {\n            children: \"when true, displays the X and Y \\\"safe\\\" zone rulers (this is the area that content should not be rendered in to avoid screen clipping on a device)\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"showText\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"true\"\n          }), _jsx(_components.td, {\n            children: \"when true, displays the textbox containing the exact numbers associated with the screen, margin, safe, and gutter sizes\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"style-properties\",\n      children: \"Style Properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"name\"\n          }), _jsx(_components.th, {\n            children: \"type\"\n          }), _jsx(_components.th, {\n            children: \"description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"propertyTextStyle\"\n          }), _jsx(_components.td, {\n            children: \"string | object\"\n          }), _jsx(_components.td, {\n            children: \"text style to apply to the property text\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"valueTextStyle\"\n          }), _jsx(_components.td, {\n            children: \"string | object\"\n          }), _jsx(_components.td, {\n            children: \"text style to apply to the value text\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":[],"sourceRoot":""}