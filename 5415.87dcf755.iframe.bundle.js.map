{"version":3,"file":"5415.87dcf755.iframe.bundle.js","mappingshYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwCA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAKA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAIA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAKA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AAGA;AAAA;AAAA;AAAA;AAGA;AAGA;AAAA;AAAA;AAAA;AAOA;AAMA;AAAA;AAVA;AACA;AAAA;AAAA;AAAA;AA9LA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AASA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AAgCA;AACA;AAEA;AAEA;AAEA","sources":["webpack://lightning-ui-docs/","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/CardContent/CardContent.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/CardContent/CardContent.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/docs/constants.js"],"sourcesContent":[null,"/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport Card from '../Card';\nimport utils from '../../utils';\nimport Tile from '../Tile';\nimport MetadataCardContent from '../MetadataCardContent';\nimport * as styles from './CardContent.styles';\n\nexport default class CardContent extends Card {\n  static get __componentName() {\n    return 'CardContent';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  static _template() {\n    return {\n      ...super._template(),\n      Tile: { type: Tile }\n    };\n  }\n\n  static get properties() {\n    return [\n      ...super.properties,\n      'tile',\n      'metadata',\n      'orientation',\n      'collapseToMetadata',\n      'shouldCollapse',\n      'src'\n    ];\n  }\n\n  static get tags() {\n    return [...super.tags, 'Metadata', 'Tile'];\n  }\n\n  static get aliasStyles() {\n    return [\n      { prev: 'expandedW', curr: 'expandedWidth' },\n      { prev: 'expandedH', curr: 'expandedHeight' }\n    ];\n  }\n\n  _update() {\n    this._updateSize();\n    this._updateTile();\n    this._updateMetadata();\n    super._update();\n  }\n\n  _updateTitle() {}\n\n  _updateTitlePosition() {}\n\n  _updateTile() {\n    let w = this.style.imageSize.w;\n    let h = this.style.expandedHeight;\n    const radius =\n      Array.isArray(this.style.radius) && this.style.radius.length === 4\n        ? this.style.radius\n        : Array(4).fill(this.style.radius);\n\n    let tileRadius = radius;\n\n    if (!this._collapse) {\n      tileRadius =\n        this._orientation === 'horizontal'\n          ? [radius[0], 0, 0, radius[3]]\n          : [radius[0], radius[1], 0, 0];\n    }\n\n    if (this._orientation !== 'horizontal') {\n      w = this.style.expandedWidth;\n      h = this.style.imageSize.h;\n    }\n\n    // ensure a nested tile artwork src takes precedence over the class's src setter,\n    // but that if src is undefined in both the setter and tile artwork object,\n    // we don't incorrectly pass \"src: undefined\" to the Tile component (and in turn, Artwork)\n    let tile = this.tile;\n    if (this.src) {\n      tile = utils.clone({ src: this.src }, this.tile);\n    }\n\n    this._Tile.patch({\n      w,\n      h,\n      ...tile,\n      style: {\n        ...(tile?.style || {}),\n        radius: tileRadius\n      },\n      persistentMetadata: true,\n      alpha: this._shouldShowTile ? 1 : 0\n    });\n  }\n\n  _updateMetadata() {\n    const metadataPatch = {\n      ...this.metadata,\n      ...this._metadataPosition,\n      ...this._metadataDimensions,\n      mode: this.mode,\n      alpha: this._shouldShowMetadata ? 1 : 0,\n      style: this.style.metadata\n    };\n\n    if (this.style.marqueeOnFocus) {\n      metadataPatch.marquee = this._isFocusedMode;\n    }\n\n    if (!this._Metadata) {\n      metadataPatch.type = MetadataCardContent;\n    }\n\n    this.patch({ Metadata: metadataPatch });\n  }\n\n  _updateSize() {\n    let w = this.style.expandedWidth;\n    let h = this.style.expandedHeight;\n    if (this._collapse) {\n      if (this._orientation === 'horizontal') {\n        w = this._collapseW;\n      } else {\n        h = this._collapseH;\n      }\n    }\n    this.w = w;\n    this.h = h;\n  }\n\n  _getSrc() {\n    return (\n      (this.tile &&\n        ((this.tile.artwork && this.tile.artwork.src) || this.tile.src)) ||\n      this._src\n    );\n  }\n\n  get _metadataDimensions() {\n    const paddingHorizontal = this.style.paddingHorizontal * 2;\n    const paddingVertical = this.style.paddingVertical * 2;\n\n    let w =\n      this.style.expandedWidth - this.style.imageSize.w - paddingHorizontal;\n    let h = this.style.expandedHeight - paddingVertical;\n\n    if (this.orientation !== 'horizontal') {\n      w = this.style.expandedWidth - paddingHorizontal;\n      h = this.style.expandedHeight - this.style.imageSize.h - paddingVertical;\n    }\n    return { w, h };\n  }\n\n  get _metadataPosition() {\n    const paddingHorizontal = this.style.paddingHorizontal;\n    const paddingVertical = this.style.paddingVertical;\n\n    let x = paddingHorizontal + (this._collapse ? 0 : this.style.imageSize.w);\n    let y = paddingVertical;\n\n    if (this.orientation !== 'horizontal') {\n      x = paddingHorizontal;\n      y = paddingVertical + (this._collapse ? 0 : this.style.imageSize.h);\n    }\n\n    return { x, y };\n  }\n\n  get _shouldShowMetadata() {\n    return !this._collapse || this.collapseToMetadata;\n  }\n\n  get _shouldShowTile() {\n    return !this._collapse || (this._collapse && !this.collapseToMetadata);\n  }\n\n  get _collapse() {\n    return this.shouldCollapse && !this._isFocusedMode;\n  }\n\n  get _collapseW() {\n    return this.collapseToMetadata\n      ? this.style.expandedWidth - this.style.imageSize.w\n      : this.style.imageSize.w;\n  }\n\n  get _collapseH() {\n    return this.collapseToMetadata\n      ? this.style.expandedHeight - this.style.imageSize.h\n      : this.style.imageSize.h;\n  }\n\n  set announce(announce) {\n    super.announce = announce;\n  }\n\n  get announce() {\n    return (\n      this._announce || [\n        this._Metadata && this._Metadata.announce,\n        this._Tile && this._Tile.announce\n      ]\n    );\n  }\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport utils from '../../utils';\n\nexport const base = theme => ({\n  expandedWidth: utils.getWidthByUpCount(theme, 2),\n  expandedHeight: utils.getDimensions(theme, {\n    ratioX: 16,\n    ratioY: 9,\n    upCount: 4\n  }).h,\n  imageSize: {\n    width: utils.getDimensions(theme, { ratioX: 16, ratioY: 9, upCount: 4 }).w,\n    height: utils.getDimensions(theme, { ratioX: 16, ratioY: 9, upCount: 4 }).h\n  },\n  metadata: { descriptionTextStyle: { maxLines: 2 } },\n  paddingVertical: theme.spacer.md * 1.5\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const CATEGORIES = {\n  0: 'Docs',\n  2: 'Collections',\n  4: 'Utilities',\n  8: 'Components',\n  16: 'Patterns',\n  32: 'Templates'\n};\n\n/** Storybook config constants should go in this file */\n\nexport const storySortOrder = [\n  CATEGORIES[0],\n  [\n    'Introduction',\n    'Read Me',\n    'Base',\n    'Contributing',\n    'Lightning Resources',\n    'Lightning Community Guide',\n    'Theming',\n    [\n      'Overview',\n      'Component Config',\n      'Tones',\n      'Modes',\n      'Extensions',\n      'Subtheming',\n      'Use in Storybook',\n      'Theme Properties',\n      'Hierarchy',\n      'Tutorial'\n    ],\n    'Unit Testing',\n    ['Overview', 'Test Renderer', 'Test Utils', ['makeCreateComponent', '*']]\n  ],\n  CATEGORIES[2],\n  CATEGORIES[4],\n  CATEGORIES[8],\n  CATEGORIES[16],\n  CATEGORIES[32]\n];\n\nexport const controlDescriptions = {\n  collapseToMetadata:\n    'When in unfocused or disabled mode, if shouldCollapse property is true it will collapse the image to metadata (when focused, it will always be expanded)',\n  shouldCollapse:\n    'When in unfocused or disabled mode, if this flag is true metadata will collapse (when focused, it will always be expanded)',\n  fixed:\n    'Stops the width from being calculated dynamically based on content and will instead use the`w` property'\n};\n"],"names":[],"sourceRoot":""}