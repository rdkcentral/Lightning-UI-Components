{"version":3,"file":"components-Keyboard-KeyboardSearch-stories.be5037d3.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AASA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AArCA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Keyboard/KeyboardSearch.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Keyboard/KeyboardSearch.stories.js"],"sourcesContent":["/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport Keyboard from './Keyboard';\nimport * as styles from './Keyboard.styles.js';\n\nexport default class KeyboardSearch extends Keyboard {\n  static get __componentName() {\n    return 'KeyboardSearch';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  _construct() {\n    super._construct();\n    this.formats = this.searchFormat;\n  }\n\n  get searchFormat() {\n    return {\n      uppercase: [\n        ['A', 'B', 'C', 'D', 'E', 'F'],\n        ['G', 'H', 'I', 'J', 'K', 'L'],\n        ['M', 'N', 'O', 'P', 'Q', 'R'],\n        ['S', 'T', 'U', 'V', 'W', 'X'],\n        ['Y', 'Z', '1', '2', '3', '4'],\n        ['5', '6', '7', '8', '9', '0'],\n        [\n          {\n            title: 'Space',\n            size: 'xl',\n            keyId: 'space',\n            announce: 'space, button'\n          },\n          {\n            title: 'Delete',\n            size: 'md',\n            keyId: 'delete',\n            announce: 'delete, button'\n          }\n        ]\n      ]\n    };\n  }\n}\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"ï»¿/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport { context } from '../../globals';\\nimport utils from '../../utils';\\nimport { default as KeyboardSearchComponent } from './KeyboardSearch';\\nimport { Keyboard } from './Keyboard.stories';\\n\\nexport default {\\n  title: 'Components/Keyboard/KeyboardSearch'\\n};\\n\\nexport const KeyboardSearch = () =>\\n  class KeyboardSearch extends lng.Component {\\n    static _template() {\\n      return {\\n        Keyboard: {\\n          type: KeyboardSearchComponent,\\n          defaultFormat: 'uppercase'\\n        },\\n        w: utils.getWidthByUpCount(context.theme, 3)\\n      };\\n    }\\n  };\\n\\nKeyboardSearch.storyName = 'KeyboardSearch';\\nKeyboardSearch.args = {\\n  centerKeyboard: false,\\n  mode: 'focused'\\n};\\nKeyboardSearch.argTypes = Keyboard.sharedArgTypes;\\nKeyboardSearch.parameters = {};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"KeyboardSearch\": {\n    \"startLoc\": {\n      \"col\": 30,\n      \"line\": 27\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 37\n    },\n    \"startBody\": {\n      \"col\": 30,\n      \"line\": 27\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 37\n    }\n  }\n};\n    \n/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport { context } from '../../globals';\nimport utils from '../../utils';\nimport { default as KeyboardSearchComponent } from './KeyboardSearch';\nimport { Keyboard } from './Keyboard.stories';\nexport default {parameters: {\n  \"storySource\": {\n    \"source\": \"/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport { context } from '../../globals';\\nimport utils from '../../utils';\\nimport { default as KeyboardSearchComponent } from './KeyboardSearch';\\nimport { Keyboard } from './Keyboard.stories';\\nexport default {\\n  title: 'Components/Keyboard/KeyboardSearch'\\n};\\nexport const KeyboardSearch = () => class KeyboardSearch extends lng.Component {\\n  static _template() {\\n    return {\\n      Keyboard: {\\n        type: KeyboardSearchComponent,\\n        defaultFormat: 'uppercase'\\n      },\\n      w: utils.getWidthByUpCount(context.theme, 3)\\n    };\\n  }\\n};\\nKeyboardSearch.storyName = 'KeyboardSearch';\\nKeyboardSearch.args = {\\n  centerKeyboard: false,\\n  mode: 'focused'\\n};\\nKeyboardSearch.argTypes = Keyboard.sharedArgTypes;\\nKeyboardSearch.parameters = {};\\nKeyboardSearch.parameters = {\\n  ...KeyboardSearch.parameters,\\n  docs: {\\n    ...KeyboardSearch.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => class KeyboardSearch extends lng.Component {\\\\n  static _template() {\\\\n    return {\\\\n      Keyboard: {\\\\n        type: KeyboardSearchComponent,\\\\n        defaultFormat: 'uppercase'\\\\n      },\\\\n      w: utils.getWidthByUpCount(context.theme, 3)\\\\n    };\\\\n  }\\\\n}\\\",\\n      ...KeyboardSearch.parameters?.docs?.source\\n    }\\n  }\\n};\",\n    \"locationsMap\": {\n      \"keyboard-search\": {\n        \"startLoc\": {\n          \"col\": 30,\n          \"line\": 27\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 37\n        },\n        \"startBody\": {\n          \"col\": 30,\n          \"line\": 27\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 37\n        }\n      }\n    }\n  }\n,},\n  title: 'Components/Keyboard/KeyboardSearch'\n};\nexport const KeyboardSearch = () => class KeyboardSearch extends lng.Component {\n  static _template() {\n    return {\n      Keyboard: {\n        type: KeyboardSearchComponent,\n        defaultFormat: 'uppercase'\n      },\n      w: utils.getWidthByUpCount(context.theme, 3)\n    };\n  }\n};\nKeyboardSearch.storyName = 'KeyboardSearch';\nKeyboardSearch.args = {\n  centerKeyboard: false,\n  mode: 'focused'\n};\nKeyboardSearch.argTypes = Keyboard.sharedArgTypes;\nKeyboardSearch.parameters = {};\nKeyboardSearch.parameters = {\n  ...KeyboardSearch.parameters,\n  docs: {\n    ...KeyboardSearch.parameters?.docs,\n    source: {\n      originalSource: \"() => class KeyboardSearch extends lng.Component {\\n  static _template() {\\n    return {\\n      Keyboard: {\\n        type: KeyboardSearchComponent,\\n        defaultFormat: 'uppercase'\\n      },\\n      w: utils.getWidthByUpCount(context.theme, 3)\\n    };\\n  }\\n}\",\n      ...KeyboardSearch.parameters?.docs?.source\n    }\n  }\n};"],"names":[],"sourceRoot":""}