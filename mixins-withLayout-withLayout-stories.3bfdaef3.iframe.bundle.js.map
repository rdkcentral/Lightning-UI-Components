{"version":3,"file":"mixins-withLayout-withLayout-stories.3bfdaef3.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACrKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAGA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAtDA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/mixins/withLayout/withLayout.stories.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Surface/Surface.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Surface/Surface.js"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"ï»¿/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport { Tile } from '../../components';\\n\\nexport default {\\n  title: 'Utilities/withLayout'\\n};\\n\\nexport const withLayout = () => {\\n  return class withLayout extends lng.Component {\\n    static _template() {\\n      return {\\n        Item: {\\n          type: Tile,\\n          artwork: {\\n            src: 'https://image.tmdb.org/t/p/w500/frwl2zBNAl5ZbFDJGoJv0mYo0rF.jpg',\\n            mode: 'contain'\\n          }\\n        }\\n      };\\n    }\\n  };\\n};\\n\\nwithLayout.storyName = 'withLayout';\\n\\nwithLayout.args = {\\n  ratioX: 16,\\n  ratioY: 9,\\n  upCount: 3,\\n  circle: false\\n};\\n\\nwithLayout.argTypes = {\\n  ratioX: {\\n    control: { type: 'number', min: 0 },\\n    description: 'The units of x resolution relative to the screen height',\\n    table: { defaultValue: { summary: 0 } }\\n  },\\n  ratioY: {\\n    control: { type: 'number', min: 0 },\\n    description: 'The units of y resolution relative to the screen width',\\n    table: { defaultValue: { summary: 0 } }\\n  },\\n  upCount: {\\n    control: { type: 'number', min: 0 },\\n    description:\\n      'The number of items that should be displayed within screen bounds',\\n    table: { defaultValue: { summary: 0 } }\\n  },\\n  circle: {\\n    control: 'boolean',\\n    description: 'Boolean changing format to circle if true',\\n    table: { defaultValue: { summary: false } }\\n  }\\n};\\n\\nwithLayout.parameters = {\\n  argActions: Object.keys(withLayout.args).reduce((acc, curr) => {\\n    return {\\n      ...acc,\\n      [curr]: (val, component) => {\\n        component.tag('Item').itemLayout = {\\n          ...component.tag('Item').itemLayout,\\n          [curr]: val\\n        };\\n      }\\n    };\\n  }, {})\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"withLayout\": {\n    \"startLoc\": {\n      \"col\": 26,\n      \"line\": 24\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 38\n    },\n    \"startBody\": {\n      \"col\": 26,\n      \"line\": 24\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 38\n    }\n  }\n};\n    \n/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport { Tile } from '../../components';\nexport default {parameters: {\n  \"storySource\": {\n    \"source\": \"/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport { Tile } from '../../components';\\nexport default {\\n  title: 'Utilities/withLayout'\\n};\\nexport const withLayout = () => {\\n  return class withLayout extends lng.Component {\\n    static _template() {\\n      return {\\n        Item: {\\n          type: Tile,\\n          artwork: {\\n            src: 'https://image.tmdb.org/t/p/w500/frwl2zBNAl5ZbFDJGoJv0mYo0rF.jpg',\\n            mode: 'contain'\\n          }\\n        }\\n      };\\n    }\\n  };\\n};\\nwithLayout.storyName = 'withLayout';\\nwithLayout.args = {\\n  ratioX: 16,\\n  ratioY: 9,\\n  upCount: 3,\\n  circle: false\\n};\\nwithLayout.argTypes = {\\n  ratioX: {\\n    control: {\\n      type: 'number',\\n      min: 0\\n    },\\n    description: 'The units of x resolution relative to the screen height',\\n    table: {\\n      defaultValue: {\\n        summary: 0\\n      }\\n    }\\n  },\\n  ratioY: {\\n    control: {\\n      type: 'number',\\n      min: 0\\n    },\\n    description: 'The units of y resolution relative to the screen width',\\n    table: {\\n      defaultValue: {\\n        summary: 0\\n      }\\n    }\\n  },\\n  upCount: {\\n    control: {\\n      type: 'number',\\n      min: 0\\n    },\\n    description: 'The number of items that should be displayed within screen bounds',\\n    table: {\\n      defaultValue: {\\n        summary: 0\\n      }\\n    }\\n  },\\n  circle: {\\n    control: 'boolean',\\n    description: 'Boolean changing format to circle if true',\\n    table: {\\n      defaultValue: {\\n        summary: false\\n      }\\n    }\\n  }\\n};\\nwithLayout.parameters = {\\n  argActions: Object.keys(withLayout.args).reduce((acc, curr) => {\\n    return {\\n      ...acc,\\n      [curr]: (val, component) => {\\n        component.tag('Item').itemLayout = {\\n          ...component.tag('Item').itemLayout,\\n          [curr]: val\\n        };\\n      }\\n    };\\n  }, {})\\n};\\nwithLayout.parameters = {\\n  ...withLayout.parameters,\\n  docs: {\\n    ...withLayout.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => {\\\\n  return class withLayout extends lng.Component {\\\\n    static _template() {\\\\n      return {\\\\n        Item: {\\\\n          type: Tile,\\\\n          artwork: {\\\\n            src: 'https://image.tmdb.org/t/p/w500/frwl2zBNAl5ZbFDJGoJv0mYo0rF.jpg',\\\\n            mode: 'contain'\\\\n          }\\\\n        }\\\\n      };\\\\n    }\\\\n  };\\\\n}\\\",\\n      ...withLayout.parameters?.docs?.source\\n    }\\n  }\\n};\",\n    \"locationsMap\": {\n      \"with-layout\": {\n        \"startLoc\": {\n          \"col\": 26,\n          \"line\": 24\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 38\n        },\n        \"startBody\": {\n          \"col\": 26,\n          \"line\": 24\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 38\n        }\n      }\n    }\n  }\n,},\n  title: 'Utilities/withLayout'\n};\nexport const withLayout = () => {\n  return class withLayout extends lng.Component {\n    static _template() {\n      return {\n        Item: {\n          type: Tile,\n          artwork: {\n            src: 'https://image.tmdb.org/t/p/w500/frwl2zBNAl5ZbFDJGoJv0mYo0rF.jpg',\n            mode: 'contain'\n          }\n        }\n      };\n    }\n  };\n};\nwithLayout.storyName = 'withLayout';\nwithLayout.args = {\n  ratioX: 16,\n  ratioY: 9,\n  upCount: 3,\n  circle: false\n};\nwithLayout.argTypes = {\n  ratioX: {\n    control: {\n      type: 'number',\n      min: 0\n    },\n    description: 'The units of x resolution relative to the screen height',\n    table: {\n      defaultValue: {\n        summary: 0\n      }\n    }\n  },\n  ratioY: {\n    control: {\n      type: 'number',\n      min: 0\n    },\n    description: 'The units of y resolution relative to the screen width',\n    table: {\n      defaultValue: {\n        summary: 0\n      }\n    }\n  },\n  upCount: {\n    control: {\n      type: 'number',\n      min: 0\n    },\n    description: 'The number of items that should be displayed within screen bounds',\n    table: {\n      defaultValue: {\n        summary: 0\n      }\n    }\n  },\n  circle: {\n    control: 'boolean',\n    description: 'Boolean changing format to circle if true',\n    table: {\n      defaultValue: {\n        summary: false\n      }\n    }\n  }\n};\nwithLayout.parameters = {\n  argActions: Object.keys(withLayout.args).reduce((acc, curr) => {\n    return {\n      ...acc,\n      [curr]: (val, component) => {\n        component.tag('Item').itemLayout = {\n          ...component.tag('Item').itemLayout,\n          [curr]: val\n        };\n      }\n    };\n  }, {})\n};\nwithLayout.parameters = {\n  ...withLayout.parameters,\n  docs: {\n    ...withLayout.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return class withLayout extends lng.Component {\\n    static _template() {\\n      return {\\n        Item: {\\n          type: Tile,\\n          artwork: {\\n            src: 'https://image.tmdb.org/t/p/w500/frwl2zBNAl5ZbFDJGoJv0mYo0rF.jpg',\\n            mode: 'contain'\\n          }\\n        }\\n      };\\n    }\\n  };\\n}\",\n      ...withLayout.parameters?.docs?.source\n    }\n  }\n};","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const base = theme => ({\n  backgroundColor: theme.color.interactiveNeutral,\n  radius: theme.radius.md,\n  animation: {}\n});\n\nexport const tone = theme => ({\n  inverse: {\n    backgroundColor: theme.color.interactiveInverse\n  }\n});\n\nexport const mode = theme => ({\n  focused: {\n    backgroundColor: theme.color.interactiveNeutralFocus,\n    tone: {\n      inverse: {\n        backgroundColor: theme.color.interactiveInverseFocus\n      }\n    }\n  },\n  disabled: {\n    backgroundColor: theme.color.fillNeutralDisabled\n  }\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport Base from '../Base';\nimport * as styles from './Surface.styles.js';\nimport lng from '@lightningjs/core';\n\nexport default class Surface extends Base {\n  static _template() {\n    return {\n      Background: {}\n    };\n  }\n\n  static get __componentName() {\n    return 'Surface';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  static get properties() {\n    return [];\n  }\n\n  static get tags() {\n    return ['Background'];\n  }\n\n  get innerH() {\n    return this.h;\n  }\n\n  get innerW() {\n    return this.w;\n  }\n\n  _update() {\n    this._updateLayout();\n    this._updateScale();\n  }\n\n  _updateLayout() {\n    this._Background.patch({\n      texture: lng.Tools.getRoundRect(\n        this.innerW - 2, // Reference the underscored values here in cause the h or w getters need to be overwritten for alignment - see Tile\n        this.innerH - 2,\n        this.style.radius,\n        0,\n        null,\n        true,\n        this.style.backgroundColor\n      )\n    });\n  }\n\n  _updateScale() {\n    const scale = this._isFocusedMode\n      ? this.getFocusScale(this.w, this.h)\n      : this.getUnfocusScale(this.w, this.h);\n\n    this.applySmooth(this, { scale }, { scale: [scale, this.style.animation] });\n  }\n}\n"],"names":[],"sourceRoot":""}