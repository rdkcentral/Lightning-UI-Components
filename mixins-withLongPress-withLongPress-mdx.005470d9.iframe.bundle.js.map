{"version":3,"file":"mixins-withLongPress-withLongPress-mdx.005470d9.iframe.bundle.js","mappingsrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAGA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAtDA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AALA;AACA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAjEA;AACA;AAAA;AAAA;AAkEA;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/mixins/withLongPress/withLongPress.mdx","webpack://lightning-ui-docs/../../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Surface/Surface.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Surface/Surface.js","webpack://lightning-ui-docs/../../../node_modules/@storybook/core/dist/components/ sync","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/mixins/withLongPress/index.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/mixins/withLongPress/withLongPress.stories.js","webpack://lightning-ui-docs/../../../node_modules/memoizerific/ sync"],"sourcesContent":["\nimport React from 'react';\n\n/*prettier-ignore*/\n/*\nCopyright 2023 Comcast Cable Communications Management, LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nSPDX-License-Identifier: Apache-2.0\n\\*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/Lightning-UI-Components/Lightning-UI-Components/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.mjs\";\nimport {Meta} from '@storybook/blocks';\nimport * as withLongPressStories from './withLongPress.stories';\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    p: \"p\",\n    pre: \"pre\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [\"\\n\", \"\\n\", \"\\n\", _jsx(Meta, {\n      of: withLongPressStories\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"withlongpress\",\n      children: \"withLongPress\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"withLongPress\"\n      }), \" mixin can be wrapped around a parent component to handle key events with a long press to trigger additional behaviors as desired.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"source\",\n      children: \"Source\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/@lightningjs/ui-components/src/mixins/withLongPress/index.js\",\n        rel: \"nofollow\",\n        children: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/@lightningjs/ui-components/src/mixins/withLongPress/index.js\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"usage\",\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A consumer of this mixin must also supply a threshold property value in milliseconds to the element being wrapped to overwrite the default time of 2000ms.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The threshold property dictates how much time will pass in milliseconds before a secondary behavior gets triggered.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"class Example extends lng.Component {\\n  static _template() {\\n    return {\\n      MyTile: {\\n        type: withLongPress(Tile),\\n        threshold: 4000\\n      }\\n    };\\n  }\\n\\n  $longPressHit(keyValue) {\\n    console.log(`long press detected on key ${keyValue}`);\\n  }\\n\\n  $longPressEnd(keyValue) {\\n    console.log(`long press ended on key ${keyValue}`);\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Take a look at the preview above. Tile component is using the withLongPress mixin.\\nIf you press any key and hold for the threshold time (2 seconds) on the tile, you should see a text notification that longpress was detected on the given key and a notification when it ends.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"properties\",\n      children: \"Properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"name\"\n          }), _jsx(_components.th, {\n            children: \"type\"\n          }), _jsx(_components.th, {\n            children: \"required\"\n          }), _jsx(_components.th, {\n            children: \"default\"\n          }), _jsx(_components.th, {\n            children: \"description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"continuousExecution\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"true\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"Will allow continuous execution of long press signal, on interval of threshold value, while keypress is held\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"threshold\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"2000\"\n          }), _jsx(_components.td, {\n            children: \"Number in milliseconds to indicate how much time should pass during key down to trigger a long press signal\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"fireancestors\",\n      children: \"FireAncestors\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"longpresshit\",\n      children: \"$longPressHit\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Fired when a keydown event lasts longer than the threshold value provided (default 2000ms), it supplies the key value of the peypress event as an argument.\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"longpressend\",\n      children: \"$longPressEnd\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Fired from a keyup event occurs after a long press.\"\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const base = theme => ({\n  backgroundColor: theme.color.interactiveNeutral,\n  radius: theme.radius.md,\n  animation: {}\n});\n\nexport const tone = theme => ({\n  inverse: {\n    backgroundColor: theme.color.interactiveInverse\n  }\n});\n\nexport const mode = theme => ({\n  focused: {\n    backgroundColor: theme.color.interactiveNeutralFocus,\n    tone: {\n      inverse: {\n        backgroundColor: theme.color.interactiveInverseFocus\n      }\n    }\n  },\n  disabled: {\n    backgroundColor: theme.color.fillNeutralDisabled\n  }\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { getMaxRoundRadius } from '../../utils';\nimport Base from '../Base';\nimport * as styles from './Surface.styles';\nimport lng from '@lightningjs/core';\n\nexport default class Surface extends Base {\n  static _template() {\n    return {\n      Background: {}\n    };\n  }\n\n  static get __componentName() {\n    return 'Surface';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  static get properties() {\n    return [];\n  }\n\n  static get tags() {\n    return ['Background'];\n  }\n\n  get innerH() {\n    return this.h;\n  }\n\n  get innerW() {\n    return this.w;\n  }\n\n  _update() {\n    this._updateLayout();\n    this._updateScale();\n  }\n\n  _updateLayout() {\n    this._Background.patch({\n      texture: lng.Tools.getRoundRect(\n        this.innerW - 2, // Reference the underscored values here in cause the h or w getters need to be overwritten for alignment - see Tile\n        this.innerH - 2,\n        getMaxRoundRadius(this.style.radius, this.w, this.h),\n        0,\n        null,\n        true,\n        this.style.backgroundColor\n      )\n    });\n  }\n\n  _updateScale() {\n    const scale = this._isFocusedMode\n      ? this.getFocusScale(this.w, this.h)\n      : this.getUnfocusScale(this.w, this.h);\n\n    this.applySmooth(this, { scale }, { scale: [scale, this.style.animation] });\n  }\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../node_modules/@storybook/core/dist/components sync recursive\";\nmodule.exports = webpackEmptyContext;","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport default function withLongPress(Base) {\n  return class extends Base {\n    static get name() {\n      return Base.name;\n    }\n\n    set threshold(value) {\n      this._threshold = value;\n    }\n\n    get threshold() {\n      return this._threshold;\n    }\n\n    set continuousExecution(val) {\n      this._continuousExecution = val;\n    }\n\n    _construct() {\n      this._pressedTimeStart = null;\n      this._hasExecuted = false;\n      this._threshold = 2000;\n      super._construct();\n    }\n\n    /**\n     * this will handle only key down events\n     * it will grab a reference start time stamp and compare it to any subsequent key down events' timestamp values\n     * when we meet the set threshold time in seconds, we will execute a supplied callback method\n     * */\n    _handleKey(keyEvent) {\n      // capture the key event time stamp the first time through to use as a reference.\n      if (!this._firstPressed) {\n        this._firstPressed = this._pressedTimeStart = keyEvent.timeStamp;\n        super._handleKey(keyEvent);\n      }\n      // check latest keyEvent time stamp against the start time stamp and see if the difference\n      // is greater than the threshold\n      if (\n        // eslint-disable-next-line no-constant-condition\n        this._pressedTimeStart &&\n        keyEvent.timeStamp - this._pressedTimeStart >= this.threshold\n      ) {\n        // short circuit here if we only want to execute once before a key up event\n        if (!this._continuousExecution && this._hasExecuted) {\n          return;\n        }\n        this.fireAncestors('$longPressHit', keyEvent.key);\n        if (this._continuousExecution) {\n          this._pressedTimeStart += this.threshold;\n        } else {\n          this._hasExecuted = true;\n          this._pressedTimeStart = null;\n        }\n      }\n    }\n\n    /**\n     * this will handle only key up events\n     * */\n    _handleKeyRelease(keyEvent) {\n      if (keyEvent.timeStamp - this._firstPressed >= this.threshold) {\n        this.fireAncestors('$longPressEnd', keyEvent.key);\n      }\n      this._firstPressed = null;\n      this._pressedTimeStart = null;\n      this._hasExecuted = false;\n      super._handleKeyRelease(keyEvent);\n    }\n  };\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport Tile from '../../components/Tile/Tile';\nimport withLongPressMixin from '.';\nimport TextBox from '../../components/TextBox';\n\nexport default {\n  title: 'Utilities/withLongPress'\n};\n\nexport const withLongPress = args => {\n  class withLongPress extends lng.Component {\n    static _template() {\n      return {\n        Tile: {\n          type: withLongPressMixin(Tile),\n          src: 'https://image.tmdb.org/t/p/w500/zHdQ6yaqDf3OQO5uhr0auAgwK6O.jpg',\n          w: 320,\n          h: 180,\n          threshold: args.threshold,\n          continuousExecution: args.continuousExecution\n        },\n        Notification: {\n          y: 220,\n          type: TextBox,\n          style: { textStyle: { maxLines: 3 } },\n          alpha: 0\n        }\n      };\n    }\n    _init() {\n      super._init();\n    }\n\n    get _continuousExecution() {\n      return this.tag('Tile')._continuousExecution;\n    }\n\n    $longPressHit(data) {\n      this.tag('Notification').patch({\n        content: `Long Press detected on ${data}`\n      });\n      this.tag('Notification').setSmooth('alpha', 1);\n\n      !this._continuousExecution &&\n        setTimeout(() => {\n          this.tag('Notification').setSmooth('alpha', 0);\n        }, 2000);\n    }\n\n    $longPressEnd() {\n      this.tag('Notification').setSmooth('alpha', 0);\n    }\n\n    _getFocused() {\n      return this.tag('Tile');\n    }\n  }\n\n  return withLongPressMixin(withLongPress);\n};\n\nwithLongPress.storyName = 'withLongPress';\n\nwithLongPress.args = {\n  threshold: 2000,\n  continuousExecution: false\n};\n\nwithLongPress.argTypes = {\n  threshold: {\n    control: { type: 'number', min: 1000 },\n    description: 'Time in ms to trigger long press',\n    table: { defaultValue: { summary: 2000 } }\n  },\n  continuousExecution: {\n    control: { type: 'boolean' },\n    description:\n      'execute long press action continuously when threshold is met again',\n    table: { defaultValue: { summary: false } }\n  }\n};\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../node_modules/memoizerific sync recursive\";\nmodule.exports = webpackEmptyContext;"],"names":[],"sourceRoot":""}