{"version":3,"file":"components-TabBar-TabBar-stories.798ab902.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AARA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAxGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAtNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AAQA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Button/ButtonSmall.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Button/ButtonSmall.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/TabBar/ContentSwitcher.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/TabBar/TabBar.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/TabBar/TabBar.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/TabBar/TabBar.stories.js"],"sourcesContent":["/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { getWidthByColumnSpan } from '../../utils';\n\nexport const base = theme => ({\n  minWidth: getWidthByColumnSpan(theme, 1),\n  paddingX: theme.spacer.xxl,\n  paddingXNoTitle: theme.spacer.lg,\n  paddingY: theme.spacer.lg,\n  textStyle: theme.typography.button2\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport Button from './Button';\nimport * as styles from './ButtonSmall.styles';\n\nexport default class ButtonSmall extends Button {\n  static get __componentName() {\n    return 'ButtonSmall';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport Base from '../Base';\nimport { stringifyCompare } from '../../utils';\n\nexport default class ContentSwitcher extends Base {\n  static get __componentName() {\n    return 'ContentSwitcher';\n  }\n\n  static get properties() {\n    return ['selectedIndex'];\n  }\n\n  _construct() {\n    super._construct();\n    this._selectedIndex = 0;\n    this._contentItems = [];\n  }\n\n  _update() {\n    super._update();\n    this._updateSelected();\n  }\n\n  _updateSelected() {\n    if (this._preveSelectedIndex !== this.selectedIndex) {\n      if (this._preveSelectedIndex !== undefined) {\n        const prevContent = this.tag(`Content${this._preveSelectedIndex}`);\n        prevContent.smooth = { alpha: 0 };\n        if (this._hasContent) {\n          prevContent._getTransition('alpha').once('finish', () => {\n            this._fadeInContent();\n          });\n        } else if (this.selectedIndex !== undefined) {\n          this._fadeInContent();\n        }\n      } else if (this._hasContent) {\n        this._fadeInContent();\n      }\n      this._preveSelectedIndex = this.selectedIndex;\n    }\n  }\n\n  _fadeInContent() {\n    this._selectedContent.smooth = { alpha: 1 };\n    this._selectedContent._getTransition('alpha').once('finish', () => {\n      this.h = this._selectedContent.h;\n      this.signal('contentHeightChange', this.h);\n    });\n  }\n\n  _updateContent() {\n    const allContent = this.contentItems.reduce((acc, item, idx) => {\n      let component;\n      const tagName = `Content${idx}`;\n\n      if (typeof item === 'function') {\n        const componentLoader = item();\n        if (componentLoader.then) {\n          // update template async after component has loaded\n          this._loadAsyncComponent(componentLoader, idx);\n        } else {\n          component = componentLoader;\n        }\n      } else {\n        component = item;\n      }\n\n      if (component) {\n        acc[tagName] = {\n          ...component,\n          alpha: 0\n        };\n      }\n\n      return acc;\n    }, {});\n    this.patch(allContent);\n  }\n\n  _loadAsyncComponent(componentLoader, idx) {\n    componentLoader.then(component => {\n      const tagName = `Content${idx}`;\n      this.patch({ [tagName]: { ...component, alpha: 0 } });\n    });\n  }\n\n  set contentItems(contentItems) {\n    if (!stringifyCompare(contentItems, this._contentItems)) {\n      this._contentItems = contentItems;\n      this._updateContent();\n    }\n  }\n\n  get contentItems() {\n    return this._contentItems;\n  }\n\n  get _hasContent() {\n    return this._selectedContent && this._selectedContent.children.length > 0;\n  }\n\n  get _selectedContent() {\n    return this.tag(`Content${this.selectedIndex}`);\n  }\n\n  _getFocused() {\n    if (this._hasContent) {\n      return this._selectedContent;\n    }\n  }\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const base = theme => ({\n  tabSpacing: theme.spacer.lg,\n  tabsMarginBottom: theme.spacer.xxl\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport Base from '../Base';\nimport Row from '../Row';\nimport ContentSwitcher from './ContentSwitcher';\nimport * as styles from './TabBar.styles';\n\nexport default class TabBar extends Base {\n  static _template() {\n    return {\n      Tabs: {\n        type: Row,\n        autoResizeHeight: true,\n        signals: {\n          selectedChange: '_selectedTabChange'\n        }\n      },\n      TabContent: {\n        type: ContentSwitcher,\n        signals: {\n          contentHeightChange: '_updateTabBarHeight'\n        }\n      }\n    };\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  static get __componentName() {\n    return 'TabBar';\n  }\n\n  static get properties() {\n    return [\n      'alphaSelectedTab',\n      'collapse',\n      'reset',\n      'tabs',\n      'retainSelection',\n      ...Row.properties\n    ];\n  }\n\n  static get tags() {\n    return ['Tabs', 'TabContent'];\n  }\n\n  _construct() {\n    super._construct();\n    this._tabContent = [];\n    this._isTabsFocused = true;\n  }\n\n  _selectedTabChange(selected, prevSelected) {\n    this.fireAncestors('$tabChanged', selected, prevSelected, this);\n    if (\n      typeof this._tabContent === 'object' &&\n      typeof this._tabContent.then === 'function'\n    ) {\n      return this._tabContent.then(this.queueRequestUpdate);\n    }\n    return this.queueRequestUpdate();\n  }\n\n  _update() {\n    this._updateTabsLayout();\n    this._updateTabs();\n    this._updateTabContent();\n    this._updateTabBarHeight();\n  }\n\n  _updateTabsLayout() {\n    const defaultLayout = {\n      style: {\n        itemSpacing: this.style.tabSpacing\n      }\n    };\n    const tabsRowPatch = Row.properties.reduce((patchObj, prop) => {\n      if (this[prop] != undefined) {\n        patchObj[prop] = this[prop];\n      }\n      return patchObj;\n    }, defaultLayout);\n\n    this._Tabs.patch(tabsRowPatch);\n  }\n\n  _updateTabs() {\n    this._Tabs.wrapSelected = this.wrapSelected;\n    this._Tabs.items.forEach(tab => {\n      const isSelectedTab = tab === this._Tabs.selected;\n      if (this._isUnfocusedMode) {\n        tab.mode =\n          isSelectedTab && this.retainSelection ? 'selected' : 'unfocused';\n      } else if (this._isFocusedMode) {\n        if (this._isTabsFocused) {\n          tab.mode = isSelectedTab ? 'focused' : 'unfocused';\n        } else {\n          tab.mode = isSelectedTab ? 'selected' : 'unfocused';\n        }\n      }\n    });\n    if (this.alphaSelectedTab) {\n      this._updateTabAlphas();\n    }\n  }\n\n  _updateTabAlphas() {\n    if (this._isTabsFocused) {\n      this._Tabs.items.forEach(tab => {\n        tab.patch({ alpha: 1 });\n      });\n    } else {\n      this._Tabs.items.forEach(tab => {\n        tab.patch({ alpha: tab === this._Tabs.selected ? 1 : 0.3 });\n      });\n    }\n  }\n\n  _updateTabContent() {\n    const margin = this.style.tabsMarginBottom;\n    this._TabContent.patch({\n      y: this._Tabs.h + margin,\n      contentItems: this._tabContent,\n      selectedIndex: this._isFocusedMode ? this._Tabs.selectedIndex : undefined\n    });\n  }\n\n  $itemChanged() {\n    // triggered when the Tabs Row resizes\n    // update the height of TabBar using the latest h value from Tabs\n    this._updateTabBarHeight();\n    this._updateTabContent();\n  }\n\n  _updateTabBarHeight() {\n    let h;\n    if (this.collapse) {\n      h =\n        this._isFocusedMode &&\n        this._tabContent.filter(content => Object.keys(content).length).length\n          ? this._expandedHeight\n          : this._collapsedHeight;\n    } else {\n      h = this._expandedHeight;\n    }\n    this._TabContent.smooth = {\n      alpha: !this.collapse || this._isFocusedMode ? 1 : 0.001\n    };\n    if (this.h !== h) {\n      this.h = h;\n      this.fireAncestors('$itemChanged');\n    }\n  }\n\n  selectTabs() {\n    if (!this._isTabsFocused) {\n      this._isTabsFocused = true;\n      this._updateTabs();\n      this._updateTabBarHeight();\n    }\n  }\n\n  resetTabs() {\n    this._Tabs.selectedIndex = 0;\n  }\n\n  _handleDown() {\n    if (this._isTabsFocused && this._TabContent._hasContent) {\n      this._isTabsFocused = false;\n      this._updateTabs();\n      this._updateTabBarHeight();\n    }\n    return false;\n  }\n\n  _handleUp() {\n    this.selectTabs();\n    return false;\n  }\n\n  _setTabs(tabs) {\n    this._tabContent = [];\n    this._tabContent = tabs.map(tab => tab.tabContent || {});\n    this._Tabs.items = tabs;\n    return tabs;\n  }\n\n  _getTabs() {\n    return this._Tabs.items;\n  }\n\n  get selected() {\n    return this._Tabs.selected;\n  }\n\n  get selectedIndex() {\n    return this._Tabs.selectedIndex;\n  }\n\n  set selectedIndex(index) {\n    this._Tabs.selectedIndex = index;\n  }\n\n  get _collapsedHeight() {\n    return this._Tabs.h;\n  }\n\n  get _expandedHeight() {\n    return this._Tabs.h + this.style.tabsMarginBottom + this._TabContent.h;\n  }\n\n  _getFocused() {\n    return this._isTabsFocused ? this._Tabs : this._TabContent;\n  }\n\n  _unfocus() {\n    super._unfocus();\n    if (this.reset) {\n      this.resetTabs();\n    }\n  }\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport Base from '../Base';\nimport Tile from '../Tile';\nimport Button from '../Button';\nimport ButtonSmall from '../Button/ButtonSmall';\nimport Icon from '../Icon';\nimport viewAllIcon from '../../assets/images/view_all.png';\nimport { createModeControl } from '../../docs/utils';\nimport lightningIcon from '../../assets/images/ic_lightning_white_32.png';\nimport Row from '../Row';\nimport Column from '../Column';\nimport context from '../../globals/context/index';\nimport Tab from './Tab';\nimport TabBarComponent from '.';\n\nexport default {\n  title: 'Components/TabBar',\n  args: {\n    collapse: false,\n    alphaSelectedTab: false,\n    wrapSelected: false,\n    mode: 'focused'\n  },\n  argTypes: {\n    ...createModeControl({ summaryValue: 'focused' }),\n    alphaSelectedTab: {\n      control: 'boolean',\n      description:\n        'When true, a lower alpha will be applied to unselected tabs when focus is delegated to the tab content',\n      table: { defaultValue: { summary: false } }\n    },\n    collapse: {\n      control: 'boolean',\n      description:\n        'When true, the height of the TabBar will only reflect the height of the Tabs when unfocused or no tab content is available',\n      table: { defaultValue: { summary: false } }\n    },\n    wrapSelected: {\n      control: 'boolean',\n      description:\n        'Enables wrapping behavior, so selectNext selects the first item if the current item is the last on the list and vice versa',\n      table: { defaultValue: { summary: false } }\n    }\n  }\n};\n\nclass CustomButton extends ButtonSmall {\n  _focus() {\n    super._focus();\n    this.patch({\n      w: 175,\n      title: 'View All'\n    });\n    this.fireAncestors('$itemChanged');\n  }\n  _unfocus() {\n    super._unfocus();\n    this.patch({\n      w: 72,\n      title: ''\n    });\n    this.fireAncestors('$itemChanged');\n  }\n}\n\nconst createTiles = imgSrcs => {\n  return imgSrcs.map(src => ({\n    type: Tile,\n    w: 410,\n    h: 230,\n    artwork: { src }\n  }));\n};\nconst tilesA = createTiles([\n  'https://image.tmdb.org/t/p/w500/zHdQ6yaqDf3OQO5uhr0auAgwK6O.jpg',\n  'https://image.tmdb.org/t/p/w500/frwl2zBNAl5ZbFDJGoJv0mYo0rF.jpg',\n  'https://image.tmdb.org/t/p/w500/jauI01vUIkPA0xVsamGj0Gs1nNL.jpg',\n  'https://image.tmdb.org/t/p/w500/sQBS8MYXN9CZWV3gEDcL95G1KpA.jpg',\n  'https://image.tmdb.org/t/p/w500/m0iEEib19yHzyD8hLh09qkIWbwz.jpg'\n]);\nconst tilesB = tilesA.slice().reverse();\n\nconst createColumn = titles => {\n  return {\n    type: Column,\n    h: 300,\n    w: 410,\n    style: { itemSpacing: 16 },\n    neverScroll: true,\n    items: titles.map(title => ({\n      w: 410,\n      type: Button,\n      title\n    }))\n  };\n};\nconst col1 = createColumn(['Item 1', 'Item 2', 'Item 3']);\nconst col2 = createColumn(['Async Item 1', 'Async Item 2', 'Async Item 3']);\n\nconst rowFunction = () => ({\n  type: Row,\n  items: tilesB,\n  autoResizeHeight: true,\n  alwaysScroll: true\n});\n\nconst colPromise = () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(col2);\n    }, 2000);\n  });\n};\n\nexport const Basic = () =>\n  class Basic extends lng.Component {\n    static _template() {\n      return {\n        TabBar: {\n          type: TabBarComponent,\n          w: 1920 - 160,\n          tabs: [\n            {\n              type: Tab,\n              title: 'No Content Tab'\n            },\n            {\n              type: Tab,\n              title: 'Tab 1',\n              tabContent: {\n                type: Row,\n                items: tilesA,\n                autoResizeHeight: true,\n                lazyScroll: true\n              }\n            },\n            {\n              type: Tab,\n              title: 'Tab 2',\n              tabContent: col1\n            },\n            {\n              type: Tab,\n              title: 'Tab 3',\n              tabContent: rowFunction\n            },\n            {\n              type: Tab,\n              title: 'Tab 4',\n              tabContent: colPromise\n            }\n          ]\n        }\n      };\n    }\n  };\n\nclass CustomTile extends Tile {\n  static _template() {\n    return {\n      ...super._template(),\n      SoftFocus: {}\n    };\n  }\n  _update() {\n    super._update();\n    this._updateSoftFocus();\n  }\n\n  _updateSoftFocus() {\n    const { color, spacer } = context.theme;\n    if (this.mode === 'selected') {\n      this.tag('SoftFocus').patch({\n        rect: true,\n        color: color.interactiveNeutralFocus,\n        h: spacer.xs,\n        w: spacer.xxxl + spacer.xxl + spacer.xs,\n        mountX: 0.5,\n        mountY: 1,\n        y: this.h + spacer.lg + spacer.xs,\n        x: this.w / 2\n      });\n    } else {\n      this.tag('SoftFocus').patch({ h: 0, w: 0 });\n    }\n  }\n}\n\nconst tileProps = {\n  w: 100,\n  h: 100,\n  radius: 50,\n  imgRadius: 50,\n  artwork: { icon: lightningIcon }\n};\n\nexport const CustomTabs = () =>\n  class CustomTabs extends lng.Component {\n    static _template() {\n      return {\n        TabBar: {\n          type: TabBarComponent,\n          w: 1920 - 160,\n          tabs: [\n            {\n              type: CustomButton,\n              fixed: true,\n              prefix: [{ type: Icon, icon: viewAllIcon, w: 20, h: 20 }],\n              centerInParent: true,\n              backgroundType: 'fill'\n            },\n            {\n              type: CustomTile,\n              ...tileProps,\n              tabContent: {\n                type: Row,\n                items: tilesA,\n                autoResizeHeight: true,\n                lazyScroll: true\n              }\n            },\n            {\n              type: CustomTile,\n              ...tileProps,\n              tabContent: col1\n            },\n            {\n              type: CustomTile,\n              ...tileProps,\n              tabContent: rowFunction\n            },\n            {\n              type: CustomTile,\n              ...tileProps,\n              tabContent: colPromise\n            }\n          ]\n        }\n      };\n    }\n  };\nCustomTabs.args = {\n  alphaSelectedTab: false\n};\nCustomTabs.argTypes = {};\n\nclass ColumnContainer extends Base {\n  static get __componentName() {\n    return 'ColumnContainer';\n  }\n  static get tags() {\n    return [\n      'ClippingOffsetContainer',\n      { name: 'Column', path: 'ClippingOffsetContainer.Column' }\n    ];\n  }\n  static _template() {\n    return {\n      ClippingOffsetContainer: {\n        w: 1920 - 160,\n        h: 600,\n        clipping: true,\n        y: context.theme.layout.gutterY * -1,\n        x: 40 * -1,\n        Column: {\n          type: Column,\n          y: context.theme.layout.gutterY,\n          x: 40,\n          items: [\n            {\n              type: Row,\n              items: tilesA,\n              autoResizeHeight: true\n            },\n            {\n              type: Row,\n\n              items: tilesA,\n              autoResizeHeight: true\n            },\n            {\n              type: Row,\n\n              items: tilesA,\n              autoResizeHeight: true\n            },\n            {\n              type: Row,\n\n              items: tilesA,\n              autoResizeHeight: true\n            }\n          ]\n        }\n      }\n    };\n  }\n  _getFocused() {\n    return this._Column;\n  }\n}\n\nexport const MultipleRows = () =>\n  class MultipleRows extends lng.Component {\n    static _template() {\n      return {\n        TabBar: {\n          type: TabBarComponent,\n          autoResizeWidth: true,\n          tabs: [\n            {\n              type: Tab,\n              title: 'No Content Tab'\n            },\n            {\n              type: Tab,\n              title: 'Multiple Rows',\n              tabContent: {\n                type: ColumnContainer\n              }\n            },\n            {\n              type: Tab,\n              title: 'Tab 2',\n              tabContent: col1\n            }\n          ]\n        }\n      };\n    }\n  };\n\nMultipleRows.args = {};\nMultipleRows.parameters = {\n  storyDetails:\n    'This is an example of adding multiple rows in the tab content column. A ColumnContainer was created to allow for clipping needed for scrolling'\n};\nMultipleRows.argTypes = {};\n"],"names":[],"sourceRoot":""}