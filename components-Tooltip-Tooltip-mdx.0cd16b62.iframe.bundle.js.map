{"version":3,"file":"components-Tooltip-Tooltip-mdx.0cd16b62.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC9OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAGA;AAGA;AAAA;AACA;AAGA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AASA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAGA;AAOA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAMA;AAGA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;ACvNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AANA;AACA;AACA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AANA;AACA;AACA;AAAA;AAAA;AAAA;AAgBA;AACA;AAAA;AAVA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AANA;AACA;AACA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AANA;AACA;AACA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AANA;AACA;AACA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AANA;AACA;AACA;AAAA;AAAA;AAAA;AAeA;AARA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA;AACA;;AAEA;AACA;;AAQA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAQA;AACA;;AAEA;AACA;;AAQA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;AC5MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0CA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AALA;AACA;AAAA;AAAA;AAAA;AArKA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AC/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Tooltip/Tooltip.mdx","webpack://lightning-ui-docs/../../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/docs/utils.js","webpack://lightning-ui-docs/../../../node_modules/@storybook/core/dist/components/ sync","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/textures/Bubble.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Tooltip/Tooltip.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Tooltip/Tooltip.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Tooltip/Tooltip.stories.js","webpack://lightning-ui-docs/../../../node_modules/memoizerific/ sync"],"sourcesContent":["\nimport React from 'react';\n\n/*prettier-ignore*/\n/*\nCopyright 2023 Comcast Cable Communications Management, LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nSPDX-License-Identifier: Apache-2.0\n\\*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/Lightning-UI-Components/Lightning-UI-Components/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.mjs\";\nimport {Meta, Title} from '@storybook/blocks';\nimport * as TooltipStories from './Tooltip.stories';\nimport {DocsLink} from '../../docs/utils';\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    pre: \"pre\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [\"\\n\", \"\\n\", \"\\n\", _jsx(Meta, {\n      of: TooltipStories\n    }), \"\\n\", _jsx(Title, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Component to provide hint information to other components like buttons and action items.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"source\",\n      children: \"Source\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/@lightningjs/ui-components/src/components/Tooltip/Tooltip.js\",\n        rel: \"nofollow\",\n        children: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/@lightningjs/ui-components/src/components/Tooltip/Tooltip.js\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"usage\",\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Tooltip\"\n      }), \" can display a \", _jsx(_components.code, {\n        children: \"title\"\n      }), \" and is added as a child to any component that needs hint text. It is positioned above the parent component using the property 'bottomMargin' and centered horizontally based on the parent's width:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"import { Tooltip } from '@lightningjs/ui-components';\\nimport Button from '../Button';\\n\\nclass Example extends lng.Component {\\n  static _template() {\\n    return {\\n      Button: {\\n        type: Button,\\n        x: 200,\\n        y: 100,\\n        w: 410,\\n        title: '+',\\n        background: 'stroke',\\n        Tooltip: {\\n          type: Tooltip,\\n          title: 'Add to My List!',\\n          bottomMargin: 24\\n        }\\n      }\\n    };\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"sizing\",\n      children: \"Sizing\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The size of the tooltip is based on the length of it's 'title'. If the 'title' exceeds 400px the text wraps, and the background resizes to accomodate.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"focus\",\n      children: \"Focus\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Tooltip is only visible on focus of the parent.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"api\",\n      children: \"API\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"properties\",\n      children: \"Properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"name\"\n          }), _jsx(_components.th, {\n            children: \"type\"\n          }), _jsx(_components.th, {\n            children: \"default\"\n          }), _jsx(_components.th, {\n            children: \"description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"delayVisible\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"undefined\"\n          }), _jsx(_components.td, {\n            children: \"the amount of time, in milliseconds, before the tooltip is displayed after being focused\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"timeVisible\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"undefined\"\n          }), _jsx(_components.td, {\n            children: \"the amount of time, in milliseconds, the tooltip is displayed before transitioning out of the display\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"title\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"undefined\"\n          }), _jsx(_components.td, {\n            children: \"text of tooltip content\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"style-properties\",\n      children: \"Style Properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"name\"\n          }), _jsx(_components.th, {\n            children: \"type\"\n          }), _jsx(_components.th, {\n            children: \"description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"backgroundColor\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"background color of tooltip\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"marginBottom\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"space below tooltip\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"paddingX\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"space on left and right sides of tooltip text\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"paddingY\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"space above and below tooltip text\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"pointerWidth\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"width of point beneath rounded rectangle of tooltip\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"pointerHeight\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"height of point beneath rounded rectangle of tooltip\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"radius\"\n          }), _jsx(_components.td, {\n            children: \"number | array\"\n          }), _jsx(_components.td, {\n            children: \"radius of tooltip corners\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"textStyle\"\n          }), _jsx(_components.td, {\n            children: \"string | object\"\n          }), _jsx(_components.td, {\n            children: \"text styles used for Tooltip's text\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"transition\"\n          }), _jsx(_components.td, {\n            children: _jsx(DocsLink, {\n              id: \"lng.Transition\"\n            })\n          }), _jsx(_components.td, {\n            children: \"transition to apply to text\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport utils from '../utils';\n\n// creates Mode control on stories\nexport const createModeControl = ({ options, summaryValue } = {}) => {\n  return {\n    mode: {\n      control: 'radio',\n      options:\n        options && Array.isArray(options)\n          ? ['unfocused', ...options]\n          : ['unfocused', 'focused', 'disabled'],\n      description: 'Sets the visual mode for the component',\n      table: {\n        defaultValue: { summary: summaryValue }\n      },\n      type: { name: 'string', required: true }\n    }\n  };\n};\n\n/**\n * @param {object} config Parameters for generating nested args: { argsObj, targetProp, include, overrides }\n */\nexport function nestedArgs(config) {\n  const { argsObj, targetProp, include, overrides } = config;\n  return Object.keys(argsObj).reduce((acc, curr) => {\n    if (!include.includes(curr)) return acc;\n    return {\n      ...acc,\n      [targetProp + '_' + curr]:\n        (overrides.args && overrides.args[curr]) || argsObj[curr]\n    };\n  }, {});\n}\n\n/**\n * @param {object} config Parameters for generating nested arg types: { argsObj, targetProp, include, overrides }\n */\nexport function nestedArgTypes(config) {\n  const { argTypesObj, targetProp, include, overrides } = config;\n  return Object.keys(argTypesObj).reduce((acc, curr) => {\n    if (!include.includes(curr)) return acc;\n    return {\n      ...acc,\n      [targetProp + '_' + curr]: {\n        // Namespaced to avoid conflicts\n        name: curr,\n        ...argTypesObj[curr],\n        ...overrides[curr],\n        table: {\n          ...(argTypesObj[curr].table || {}),\n          ...(overrides[curr] && overrides[curr].table),\n          category: targetProp\n        }\n      }\n    };\n  }, {});\n}\n\nexport const prevValues = {};\n\n/**\n * @param {object} config Parameters for generating nested arg actions: { componentName, argsTypeObj, targetProp, include, overrides }\n */\nexport function nestedArgActions(config) {\n  const { componentName, argTypesObj, targetProp, include, overrides } = config;\n  return Object.keys(argTypesObj).reduce((acc, curr) => {\n    if (!include.includes(curr)) return acc;\n    return {\n      ...acc,\n      [targetProp + '_' + curr]: (value, component) => {\n        component.tag(componentName).patch({\n          [targetProp]: {\n            ...prevValues[targetProp],\n            [curr.replace(targetProp + '_', '')]:\n              value === 'none'\n                ? undefined\n                : (overrides && overrides[curr]) || value // There are issues with merging objects here\n          }\n        });\n        // Allow patching to work with nested objects\n        if (!prevValues[targetProp]) {\n          prevValues[targetProp] = {};\n        }\n        prevValues[targetProp][curr.replace(targetProp + '_', '')] =\n          value === 'none'\n            ? undefined\n            : (overrides && overrides[curr]) || value;\n      }\n    };\n  }, {});\n}\n\n/**\n * @param {object} config Parameters for generating story: { componentName, baseStory, subStory, targetProperty, include, options }\n */\nexport function generateSubStory(config) {\n  config.baseStory.args = {\n    ...config.baseStory.args,\n    ...nestedArgs({\n      argsObj: config.subStory.args || {},\n      targetProp: config.targetProperty,\n      include: config.include,\n      overrides: (config.overrides && config.overrides.args) || {}\n    })\n  };\n\n  config.baseStory.argTypes = {\n    ...config.baseStory.argTypes,\n    ...nestedArgTypes({\n      argTypesObj: config.subStory.argTypes || {},\n      targetProp: config.targetProperty,\n      include: config.include,\n      overrides: (config.overrides && config.overrides.argTypes) || {}\n    })\n  };\n\n  if (\n    !(\n      config.baseStory &&\n      config.baseStory.parameters &&\n      config.baseStory.parameters.argActions\n    )\n  ) {\n    config.baseStory.parameters = {\n      argActions: {}\n    };\n  }\n\n  config.baseStory.parameters.argActions = {\n    ...config.baseStory.parameters.argActions,\n    ...nestedArgActions({\n      componentName: config.componentName,\n      argTypesObj: config.subStory.argTypes || {},\n      targetProp: config.targetProperty,\n      include: config.include,\n      overrides: (config.overrides && config.overrides.argActions) || {}\n    })\n  };\n}\n\n// used to create links to Lightning docs given an id\nexport const DocsLink = ({ children, id }) => {\n  const docsmap = {\n    lng: {\n      _base: 'https://rdkcentral.github.io/Lightning/docs',\n      Component: '/components/overview',\n      Text: '/textures/text',\n      Transition: '/transitions/attributes'\n    }\n  };\n  const [source, path] = id.split('.');\n  const href = docsmap[source]._base + docsmap[source][path];\n  return (\n    <a href={href} target=\"_blank\">\n      {children || id}\n    </a>\n  );\n};\n\nexport const Item = ({ children }) => children;\n\n/**\n * Creates formatted object for markdown prop tables\n * see Column and Row stories\n * @param {object} props\n * @param {object} props.type - TS-style generic/utility type\n */\nexport const ObjectFormat = ({ object }) => {\n  return [\n    '{',\n    <br />,\n    '  ',\n    ...utils.flatten(\n      Object.entries(object).map(([k, v]) => [\n        <span>&nbsp;&nbsp;</span>,\n        `${k}: `,\n        v,\n        ',',\n        <br />\n      ])\n    ),\n    '}'\n  ].map((x, i) => <Item key={i}>{x}</Item>);\n};\n\n/**\n * Formats TS-style generic types\n * See Columns and Row stories\n * @param {object} props\n * @param {object} props.children - component children\n * @param {string} props.type - Name of generic type\n */\nexport const GenericType = ({ children, type }) => {\n  return [type, '<', children, '>'].map((x, i) => <Item key={i}>{x}</Item>);\n};\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../node_modules/@storybook/core/dist/components sync recursive\";\nmodule.exports = webpackEmptyContext;","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\n\nexport default class Bubble extends lng.Texture {\n  constructor(stage) {\n    super(stage);\n    this._w = 0;\n    this._h = 0;\n    this._radius = 0;\n    this._pointerWidth = 0;\n    this._pointerHeight = 0;\n    this._strokeWidth = 0;\n    this._color = 'white';\n  }\n\n  set w(w) {\n    this._w = w;\n    this._changed();\n  }\n\n  get w() {\n    return this._w;\n  }\n\n  set h(h) {\n    this._h = h;\n    this._changed();\n  }\n\n  get h() {\n    return this._h;\n  }\n\n  set radius(radius) {\n    if (Array.isArray(radius)) {\n      this._radius = new Array(4).fill().map((_, index) => radius[index] || 0);\n    } else {\n      this._radius = radius;\n    }\n    this._changed();\n  }\n\n  get radius() {\n    return this._radius;\n  }\n\n  set pointerWidth(pointerWidth) {\n    this._pointerWidth = pointerWidth;\n    this._changed();\n  }\n\n  get pointerWidth() {\n    return this._pointerWidth;\n  }\n\n  set pointerHeight(pointerHeight) {\n    this._pointerHeight = pointerHeight;\n    this._changed();\n  }\n\n  get pointerHeight() {\n    return this._pointerHeight;\n  }\n\n  set strokeWidth(strokeWidth) {\n    this._strokeWidth = strokeWidth;\n    this._changed();\n  }\n\n  get strokeWidth() {\n    return this._strokeWidth;\n  }\n\n  set color(color) {\n    this._color = lng.StageUtils.getRgbaString(color);\n    this._changed();\n  }\n\n  get color() {\n    return this._color;\n  }\n\n  createBubble({\n    stage,\n    w = 0,\n    h = 0,\n    radius = 0,\n    pointerWidth = 0,\n    pointerHeight = 0,\n    strokeWidth = 1,\n    color = 'white'\n  }) {\n    const canvas = stage.platform.getDrawingCanvas();\n    const ctx = canvas.getContext('2d');\n\n    canvas.width = w + strokeWidth + 4;\n    canvas.height = h + strokeWidth + 4;\n\n    ctx.imageSmoothingEnabled = true;\n    ctx.fillStyle = color;\n    ctx.strokeStyle = color;\n    ctx.lineWidth = strokeWidth;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n\n    const initialCoord = 0.5 * strokeWidth + 1;\n    const leftX = initialCoord;\n    const rightX = leftX + w;\n    const topY = initialCoord;\n    const bottomY = topY + h;\n    const bottomBubbleY = bottomY - pointerHeight;\n    const isRadiusAnArray = Array.isArray(radius);\n    // start: top left\n    ctx.beginPath();\n    ctx.moveTo(leftX + (isRadiusAnArray ? radius[0] : radius), topY);\n    // top side\n    ctx.lineTo(rightX - (isRadiusAnArray ? radius[0] : radius), topY);\n    // top right corner\n    ctx.arcTo(\n      rightX,\n      topY,\n      rightX,\n      topY + (isRadiusAnArray ? radius[1] : radius),\n      isRadiusAnArray ? radius[1] : radius\n    );\n\n    // right side\n    ctx.lineTo(rightX, bottomBubbleY - (isRadiusAnArray ? radius[2] : radius));\n\n    // bottom right corner\n    ctx.arcTo(\n      rightX,\n      bottomBubbleY,\n      rightX - (isRadiusAnArray ? radius[2] : radius),\n      bottomBubbleY,\n      isRadiusAnArray ? radius[2] : radius\n    );\n\n    // bottom side, right of point\n    ctx.lineTo(w / 2 + pointerWidth / 2, bottomBubbleY);\n\n    // point\n    ctx.arcTo(w / 2, bottomY, w / 2 - pointerWidth / 2, bottomBubbleY, 2);\n    ctx.lineTo(w / 2 - pointerWidth / 2, bottomBubbleY);\n\n    // bottom side, left of point\n    ctx.lineTo(leftX + (isRadiusAnArray ? radius[3] : radius), bottomBubbleY);\n\n    // bottom left corner\n    ctx.arcTo(\n      leftX,\n      bottomBubbleY,\n      leftX,\n      bottomBubbleY - (isRadiusAnArray ? radius[3] : radius),\n      isRadiusAnArray ? radius[3] : radius\n    );\n\n    // left side\n    ctx.lineTo(leftX, topY + (isRadiusAnArray ? radius[0] : radius));\n\n    // top left corner\n    ctx.arcTo(\n      leftX,\n      topY,\n      leftX + (isRadiusAnArray ? radius[0] : radius),\n      topY,\n      isRadiusAnArray ? radius[0] : radius\n    );\n\n    // draw shape and fill with color\n    ctx.stroke();\n    ctx.fill();\n\n    return canvas;\n  }\n\n  _getLookupId() {\n    const { w, h, radius, pointerWidth, pointerHeight, color } = this;\n    return `__bubble_${w}x${h}_radius-${radius}_pointer-${pointerWidth}x${pointerHeight}_fill-${color}`;\n  }\n\n  _getSourceLoader() {\n    return cb => {\n      cb(null, {\n        source: this.createBubble(this)\n      });\n    };\n  }\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const base = theme => ({\n  marginBottom: theme.spacer.xl,\n  paddingX: theme.spacer.lg,\n  paddingY: theme.spacer.md,\n  pointerWidth: theme.spacer.xxl,\n  pointerHeight: theme.spacer.lg,\n  radius: theme.radius.sm,\n  textStyle: {\n    ...theme.typography.body3,\n    textColor: theme.color.textInverse\n  },\n  transition: theme.animation.utility // TODO: should delay and duration be xfast?\n});\n\nexport const tone = theme => ({\n  neutral: {\n    backgroundColor: theme.color.fillNeutral,\n    textStyle: { textColor: theme.color.textInverse }\n  },\n  inverse: {\n    backgroundColor: theme.color.fillInverse,\n    textStyle: { textColor: theme.color.textNeutral }\n  },\n  brand: {\n    backgroundColor: theme.color.fillBrand,\n    textStyle: { textColor: theme.color.textNeutral }\n  }\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport Bubble from '../../textures/Bubble';\nimport TextBox from '../TextBox';\nimport Base from '../Base';\nimport * as styles from './Tooltip.styles';\nimport { getMaxRoundRadius } from '../../utils';\n\nexport default class Tooltip extends Base {\n  static get __componentName() {\n    return 'Tooltip';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  static _template() {\n    return {\n      alpha: 0,\n      scale: 0.5,\n      mountX: 0.5,\n      x: w => w / 2,\n      Background: {\n        Text: {\n          type: TextBox,\n          signals: {\n            textBoxChanged: '_textLoaded'\n          }\n        }\n      }\n    };\n  }\n\n  static get properties() {\n    return ['title', 'delayVisible', 'timeVisible'];\n  }\n\n  static get tags() {\n    return ['Background', { name: 'Text', path: 'Background.Text' }];\n  }\n\n  static get aliasStyles() {\n    return [\n      { prev: 'pointerH', curr: 'pointerHeight' },\n      { prev: 'pointerW', curr: 'pointerWidth' }\n    ];\n  }\n\n  _update() {\n    this._updateText();\n    this._updateBackground();\n  }\n\n  _updateText() {\n    if (this._Text) {\n      this._Text.patch({\n        content: this.title,\n        style: { textStyle: this.style.textStyle }\n      });\n    }\n  }\n\n  _textLoaded() {\n    this._updateBackgroundHeight();\n    this._updateTextPosition();\n  }\n\n  /**\n   * patches Background prop updates\n   */\n  _updateBackground() {\n    this.patch({\n      Background: {\n        texture: {\n          type: Bubble,\n          w: this._Background.w,\n          h: this._Background.h,\n          radius: getMaxRoundRadius(\n            this.style.radius,\n            this._Background.w - this.style.pointerHeight,\n            this._Background.h - this.style.pointerHeight\n          ),\n          pointerWidth: this.style.pointerWidth,\n          pointerHeight: this.style.pointerHeight,\n          color: this.style.backgroundColor\n        }\n      }\n    });\n  }\n\n  /**\n   * updates height of background when text height or width is changed\n   */\n  _updateBackgroundHeight() {\n    const backgroundH =\n      this._Text.finalH + this.style.paddingY * 2 + this.style.pointerHeight;\n    const backgroundW = this._Text.finalW + this.style.paddingX * 2;\n    this.patch({\n      w: backgroundW,\n      h: backgroundH,\n      mountY: 1,\n      y: -this.style.marginBottom,\n      Background: {\n        w: backgroundW,\n        h: backgroundH,\n        texture: {\n          type: Bubble,\n          w: backgroundW,\n          h: backgroundH\n        }\n      }\n    });\n  }\n\n  _updateTextPosition() {\n    if (this._Text) {\n      this._Text.patch({\n        mount: 0.5,\n        x: this._Background.w / 2,\n        y: (this._Background.h - this.style.pointerHeight) / 2\n      });\n    }\n  }\n\n  _clearTimers() {\n    clearTimeout(this._hideTimer);\n    clearTimeout(this._showTimer);\n  }\n\n  _transitionIn() {\n    const smooth = {\n      smooth: {\n        alpha: [1, this.style.transition],\n        scale: [1, this.style.transition]\n      }\n    };\n\n    if (this.delayVisible) {\n      this._showTimer = setTimeout(() => {\n        this.patch({ smooth });\n      }, this.delayVisible);\n    } else {\n      this._showTimer = undefined;\n      this.patch({ smooth });\n    }\n\n    this._hideTimer = this.timeVisible\n      ? setTimeout(() => {\n          this._unfocus();\n        }, this.timeVisible + (this.delayVisible || 0))\n      : undefined;\n  }\n\n  _transitionOut() {\n    this.patch({\n      smooth: {\n        alpha: [0, this.style.transition],\n        scale: [0.5, this.style.transition]\n      }\n    });\n  }\n\n  _focus() {\n    this._clearTimers();\n    this._transitionIn();\n  }\n\n  _unfocus() {\n    this._clearTimers();\n    this._transitionOut();\n  }\n\n  set announce(announce) {\n    super.announce = announce;\n  }\n\n  get announce() {\n    return this._announce || (this._Text && this._Text.announce);\n  }\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport Button from '../Button';\nimport { createModeControl } from '../../docs/utils';\nimport { default as TooltipComponent } from '.';\n\nexport default {\n  title: 'Components/Tooltip',\n  args: {\n    title: 'Tooltip',\n    delayVisible: 0,\n    timeVisible: 0,\n    mode: 'focused'\n  },\n  argTypes: {\n    ...createModeControl({ options: ['focused'], summaryValue: 'focused' }),\n    title: {\n      control: 'text',\n      description: 'Text content of tooltip',\n      table: { defaultValue: { summary: 'undefined' } }\n    },\n    delayVisible: {\n      control: 'number',\n      description:\n        'Start with unfocused mode and set the delay value in milliseconds, now change the mode to focused to see the required changes',\n      table: { defaultValue: { summary: 'undefined' } }\n    },\n    timeVisible: {\n      control: 'number',\n      description:\n        'Start with unfocused mode and set the time value in milliseconds, now change the mode to focused to see the required changes',\n      table: { defaultValue: { summary: 'undefined' } }\n    }\n  }\n};\n\nconst sharedArgActions = {\n  argActions: {\n    delayVisible: (delayVisible, component) => {\n      component.tag('Tooltip').delayVisible = delayVisible;\n    },\n    timeVisible: (timeVisible, component) => {\n      component.tag('Tooltip').timeVisible = timeVisible;\n    }\n  }\n};\n\nexport const Basic = args =>\n  class Basic extends lng.Component {\n    static _template() {\n      return {\n        Tooltip: {\n          type: TooltipComponent,\n          x: 1280 / 2,\n          delayVisible: args.delayVisible,\n          timeVisible: args.timeVisible\n        }\n      };\n    }\n  };\n\nBasic.parameters = { ...sharedArgActions };\n\nexport const LongTitle = Basic.bind({});\nLongTitle.args = {\n  title:\n    'This is a long message. Text will remain on a single line and does not have a maximum width'\n};\n\nLongTitle.parameters = { ...sharedArgActions };\n\nexport const WithButton = args =>\n  class WithButton extends lng.Component {\n    static _template() {\n      return {\n        Button: {\n          type: class extends Button {\n            _getFocused() {\n              return this.childList.getByRef('Tooltip');\n            }\n          },\n          x: 200,\n          y: 100,\n          title: 'Button',\n          backgroundType: 'stroke',\n          Tooltip: {\n            type: TooltipComponent,\n            title: args.title,\n            delayVisible: args.delayVisible,\n            timeVisible: args.timeVisible\n          }\n        }\n      };\n    }\n  };\n\nWithButton.args = {};\n\nWithButton.parameters = {\n  argActions: {\n    title: (title, component) => {\n      component.tag('Button.Tooltip').title = title;\n    },\n    delayVisible: (delayVisible, component) => {\n      component.tag('Button.Tooltip').delayVisible = delayVisible;\n    },\n    timeVisible: (timeVisible, component) => {\n      component.tag('Button.Tooltip').timeVisible = timeVisible;\n    }\n  }\n};\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../node_modules/memoizerific sync recursive\";\nmodule.exports = webpackEmptyContext;"],"names":[],"sourceRoot":""}