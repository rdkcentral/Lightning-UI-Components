{"version":3,"file":"8230.0213ce12.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AARA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AARA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Badge/Badge.stories.js"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"ï»¿/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport Badge from '.';\\nimport lightning from '../../assets/images/ic_lightning_white_32.png';\\nimport circle from '../../assets/images/circle.svg';\\n\\nexport default {\\n  title: 'Components/Badge'\\n};\\n\\nexport const Text = args =>\\n  class Basic extends lng.Component {\\n    static _template() {\\n      return {\\n        Badge: {\\n          type: Badge,\\n          title: args.title\\n        }\\n      };\\n    }\\n  };\\nText.args = {\\n  title: 'HD'\\n};\\nText.argTypes = {\\n  title: {\\n    description: 'Badge text',\\n    control: 'text',\\n    table: {\\n      defaultValue: { summary: 'undefined' }\\n    }\\n  }\\n};\\n\\nexport const IconSVG = () =>\\n  class Basic extends lng.Component {\\n    static _template() {\\n      return {\\n        Badge: {\\n          type: Badge,\\n          icon: circle,\\n          iconWidth: 24,\\n          title: 'HD'\\n        }\\n      };\\n    }\\n  };\\nIconSVG.args = {\\n  iconAlign: 'left'\\n};\\n\\nIconSVG.argTypes = {\\n  iconAlign: {\\n    control: 'select',\\n    options: ['left', 'right'],\\n    description: 'Side of the text the icon will appear on',\\n    table: {\\n      defaultValue: { summary: 'undefined' }\\n    }\\n  }\\n};\\nexport const IconPNG = () =>\\n  class Basic extends lng.Component {\\n    static _template() {\\n      return {\\n        Badge: {\\n          type: Badge,\\n          icon: lightning\\n        }\\n      };\\n    }\\n  };\\n\\nexport const TextWithIcon = () =>\\n  class Basic extends lng.Component {\\n    static _template() {\\n      return {\\n        Badge: {\\n          type: Badge,\\n          icon: lightning\\n        }\\n      };\\n    }\\n  };\\n\\nTextWithIcon.args = {\\n  title: 'HD',\\n  iconAlign: 'left'\\n};\\n\\nTextWithIcon.argTypes = {\\n  iconAlign: {\\n    control: 'select',\\n    options: ['left', 'right'],\\n    description: 'Side of the text the icon will appear on',\\n    table: {\\n      defaultValue: { summary: 'undefined' }\\n    }\\n  },\\n  title: {\\n    control: 'text',\\n    description: 'Badge text',\\n    table: {\\n      defaultValue: { summary: 'undefined' }\\n    }\\n  }\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"Text\": {\n    \"startLoc\": {\n      \"col\": 20,\n      \"line\": 26\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 35\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 26\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 35\n    }\n  },\n  \"IconSVG\": {\n    \"startLoc\": {\n      \"col\": 23,\n      \"line\": 50\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 61\n    },\n    \"startBody\": {\n      \"col\": 23,\n      \"line\": 50\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 61\n    }\n  },\n  \"IconPNG\": {\n    \"startLoc\": {\n      \"col\": 23,\n      \"line\": 77\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 86\n    },\n    \"startBody\": {\n      \"col\": 23,\n      \"line\": 77\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 86\n    }\n  },\n  \"TextWithIcon\": {\n    \"startLoc\": {\n      \"col\": 28,\n      \"line\": 87\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 96\n    },\n    \"startBody\": {\n      \"col\": 28,\n      \"line\": 87\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 96\n    }\n  }\n};\n    \n/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport Badge from '.';\nimport lightning from '../../assets/images/ic_lightning_white_32.png';\nimport circle from '../../assets/images/circle.svg';\nexport default {parameters: {\n  \"storySource\": {\n    \"source\": \"/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport Badge from '.';\\nimport lightning from '../../assets/images/ic_lightning_white_32.png';\\nimport circle from '../../assets/images/circle.svg';\\nexport default {\\n  title: 'Components/Badge'\\n};\\nexport const Text = args => class Basic extends lng.Component {\\n  static _template() {\\n    return {\\n      Badge: {\\n        type: Badge,\\n        title: args.title\\n      }\\n    };\\n  }\\n};\\nText.args = {\\n  title: 'HD'\\n};\\nText.argTypes = {\\n  title: {\\n    description: 'Badge text',\\n    control: 'text',\\n    table: {\\n      defaultValue: {\\n        summary: 'undefined'\\n      }\\n    }\\n  }\\n};\\nexport const IconSVG = () => class Basic extends lng.Component {\\n  static _template() {\\n    return {\\n      Badge: {\\n        type: Badge,\\n        icon: circle,\\n        iconWidth: 24,\\n        title: 'HD'\\n      }\\n    };\\n  }\\n};\\nIconSVG.args = {\\n  iconAlign: 'left'\\n};\\nIconSVG.argTypes = {\\n  iconAlign: {\\n    control: 'select',\\n    options: ['left', 'right'],\\n    description: 'Side of the text the icon will appear on',\\n    table: {\\n      defaultValue: {\\n        summary: 'undefined'\\n      }\\n    }\\n  }\\n};\\nexport const IconPNG = () => class Basic extends lng.Component {\\n  static _template() {\\n    return {\\n      Badge: {\\n        type: Badge,\\n        icon: lightning\\n      }\\n    };\\n  }\\n};\\nexport const TextWithIcon = () => class Basic extends lng.Component {\\n  static _template() {\\n    return {\\n      Badge: {\\n        type: Badge,\\n        icon: lightning\\n      }\\n    };\\n  }\\n};\\nTextWithIcon.args = {\\n  title: 'HD',\\n  iconAlign: 'left'\\n};\\nTextWithIcon.argTypes = {\\n  iconAlign: {\\n    control: 'select',\\n    options: ['left', 'right'],\\n    description: 'Side of the text the icon will appear on',\\n    table: {\\n      defaultValue: {\\n        summary: 'undefined'\\n      }\\n    }\\n  },\\n  title: {\\n    control: 'text',\\n    description: 'Badge text',\\n    table: {\\n      defaultValue: {\\n        summary: 'undefined'\\n      }\\n    }\\n  }\\n};\\nText.parameters = {\\n  ...Text.parameters,\\n  docs: {\\n    ...Text.parameters?.docs,\\n    source: {\\n      originalSource: \\\"args => class Basic extends lng.Component {\\\\n  static _template() {\\\\n    return {\\\\n      Badge: {\\\\n        type: Badge,\\\\n        title: args.title\\\\n      }\\\\n    };\\\\n  }\\\\n}\\\",\\n      ...Text.parameters?.docs?.source\\n    }\\n  }\\n};\\nIconSVG.parameters = {\\n  ...IconSVG.parameters,\\n  docs: {\\n    ...IconSVG.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => class Basic extends lng.Component {\\\\n  static _template() {\\\\n    return {\\\\n      Badge: {\\\\n        type: Badge,\\\\n        icon: circle,\\\\n        iconWidth: 24,\\\\n        title: 'HD'\\\\n      }\\\\n    };\\\\n  }\\\\n}\\\",\\n      ...IconSVG.parameters?.docs?.source\\n    }\\n  }\\n};\\nIconPNG.parameters = {\\n  ...IconPNG.parameters,\\n  docs: {\\n    ...IconPNG.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => class Basic extends lng.Component {\\\\n  static _template() {\\\\n    return {\\\\n      Badge: {\\\\n        type: Badge,\\\\n        icon: lightning\\\\n      }\\\\n    };\\\\n  }\\\\n}\\\",\\n      ...IconPNG.parameters?.docs?.source\\n    }\\n  }\\n};\\nTextWithIcon.parameters = {\\n  ...TextWithIcon.parameters,\\n  docs: {\\n    ...TextWithIcon.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => class Basic extends lng.Component {\\\\n  static _template() {\\\\n    return {\\\\n      Badge: {\\\\n        type: Badge,\\\\n        icon: lightning\\\\n      }\\\\n    };\\\\n  }\\\\n}\\\",\\n      ...TextWithIcon.parameters?.docs?.source\\n    }\\n  }\\n};\",\n    \"locationsMap\": {\n      \"text\": {\n        \"startLoc\": {\n          \"col\": 20,\n          \"line\": 26\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 35\n        },\n        \"startBody\": {\n          \"col\": 20,\n          \"line\": 26\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 35\n        }\n      },\n      \"icon-svg\": {\n        \"startLoc\": {\n          \"col\": 23,\n          \"line\": 50\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 61\n        },\n        \"startBody\": {\n          \"col\": 23,\n          \"line\": 50\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 61\n        }\n      },\n      \"icon-png\": {\n        \"startLoc\": {\n          \"col\": 23,\n          \"line\": 77\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 86\n        },\n        \"startBody\": {\n          \"col\": 23,\n          \"line\": 77\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 86\n        }\n      },\n      \"text-with-icon\": {\n        \"startLoc\": {\n          \"col\": 28,\n          \"line\": 87\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 96\n        },\n        \"startBody\": {\n          \"col\": 28,\n          \"line\": 87\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 96\n        }\n      }\n    }\n  }\n,},\n  title: 'Components/Badge'\n};\nexport const Text = args => class Basic extends lng.Component {\n  static _template() {\n    return {\n      Badge: {\n        type: Badge,\n        title: args.title\n      }\n    };\n  }\n};;\nText.args = {\n  title: 'HD'\n};\nText.argTypes = {\n  title: {\n    description: 'Badge text',\n    control: 'text',\n    table: {\n      defaultValue: {\n        summary: 'undefined'\n      }\n    }\n  }\n};\nexport const IconSVG = () => class Basic extends lng.Component {\n  static _template() {\n    return {\n      Badge: {\n        type: Badge,\n        icon: circle,\n        iconWidth: 24,\n        title: 'HD'\n      }\n    };\n  }\n};;\nIconSVG.args = {\n  iconAlign: 'left'\n};\nIconSVG.argTypes = {\n  iconAlign: {\n    control: 'select',\n    options: ['left', 'right'],\n    description: 'Side of the text the icon will appear on',\n    table: {\n      defaultValue: {\n        summary: 'undefined'\n      }\n    }\n  }\n};\nexport const IconPNG = () => class Basic extends lng.Component {\n  static _template() {\n    return {\n      Badge: {\n        type: Badge,\n        icon: lightning\n      }\n    };\n  }\n};;\nexport const TextWithIcon = () => class Basic extends lng.Component {\n  static _template() {\n    return {\n      Badge: {\n        type: Badge,\n        icon: lightning\n      }\n    };\n  }\n};\nTextWithIcon.args = {\n  title: 'HD',\n  iconAlign: 'left'\n};\nTextWithIcon.argTypes = {\n  iconAlign: {\n    control: 'select',\n    options: ['left', 'right'],\n    description: 'Side of the text the icon will appear on',\n    table: {\n      defaultValue: {\n        summary: 'undefined'\n      }\n    }\n  },\n  title: {\n    control: 'text',\n    description: 'Badge text',\n    table: {\n      defaultValue: {\n        summary: 'undefined'\n      }\n    }\n  }\n};\nText.parameters = {\n  ...Text.parameters,\n  docs: {\n    ...Text.parameters?.docs,\n    source: {\n      originalSource: \"args => class Basic extends lng.Component {\\n  static _template() {\\n    return {\\n      Badge: {\\n        type: Badge,\\n        title: args.title\\n      }\\n    };\\n  }\\n}\",\n      ...Text.parameters?.docs?.source\n    }\n  }\n};\nIconSVG.parameters = {\n  ...IconSVG.parameters,\n  docs: {\n    ...IconSVG.parameters?.docs,\n    source: {\n      originalSource: \"() => class Basic extends lng.Component {\\n  static _template() {\\n    return {\\n      Badge: {\\n        type: Badge,\\n        icon: circle,\\n        iconWidth: 24,\\n        title: 'HD'\\n      }\\n    };\\n  }\\n}\",\n      ...IconSVG.parameters?.docs?.source\n    }\n  }\n};\nIconPNG.parameters = {\n  ...IconPNG.parameters,\n  docs: {\n    ...IconPNG.parameters?.docs,\n    source: {\n      originalSource: \"() => class Basic extends lng.Component {\\n  static _template() {\\n    return {\\n      Badge: {\\n        type: Badge,\\n        icon: lightning\\n      }\\n    };\\n  }\\n}\",\n      ...IconPNG.parameters?.docs?.source\n    }\n  }\n};\nTextWithIcon.parameters = {\n  ...TextWithIcon.parameters,\n  docs: {\n    ...TextWithIcon.parameters?.docs,\n    source: {\n      originalSource: \"() => class Basic extends lng.Component {\\n  static _template() {\\n    return {\\n      Badge: {\\n        type: Badge,\\n        icon: lightning\\n      }\\n    };\\n  }\\n}\",\n      ...TextWithIcon.parameters?.docs?.source\n    }\n  }\n};"],"names":[],"sourceRoot":""}