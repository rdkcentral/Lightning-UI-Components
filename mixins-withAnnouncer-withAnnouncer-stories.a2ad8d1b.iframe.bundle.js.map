{"version":3,"file":"mixins-withAnnouncer-withAnnouncer-stories.a2ad8d1b.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AAGA;AAAA;AAAA;AAAA;AApBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAjBA;AAuBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAGA;AAAA;AAAA;AAAA;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/mixins/withAnnouncer/withAnnouncer.stories.js"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"ï»¿/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport withAnnouncer, { defaultAbbrevConfig } from '.';\\nimport { Column, Row, Button } from '../../components';\\n\\nexport default {\\n  title: 'Utilities/withAnnouncer',\\n  component: withAnnouncer\\n};\\n\\nconst rows = [\\n  {\\n    type: Row,\\n    w: 1920 - 160, // x offset from preview.js * 2,\\n    h: 100,\\n    itemSpacing: 30,\\n    items: [\\n      {\\n        type: Button,\\n        title: 'Button 1',\\n        announceContext: '1 of 3'\\n      },\\n      {\\n        type: Button,\\n        title: 'Button 2',\\n        announceContext: '2 of 3'\\n      },\\n      { type: Button, title: 'Button 3', announceContext: '3 of 3' }\\n    ]\\n  },\\n  {\\n    type: Row,\\n    w: 1920 - 160, // x offset from preview.js * 2,\\n    h: 100,\\n    itemSpacing: 30,\\n    items: [\\n      {\\n        type: Button,\\n        title: 'Button 1',\\n        announceContext: '1 of 3'\\n      },\\n      {\\n        type: Button,\\n        title: 'Button 2',\\n        announceContext: '2 of 3'\\n      },\\n      { type: Button, title: 'Button 3', announceContext: '3 of 3' }\\n    ]\\n  },\\n  {\\n    type: Row,\\n    w: 1920 - 160, // x offset from preview.js * 2,\\n    h: 100,\\n    itemSpacing: 30,\\n    items: [\\n      {\\n        type: Button,\\n        title: 'Button 1',\\n        announceContext: '1 of 3'\\n      },\\n      {\\n        type: Button,\\n        title: 'Button 2',\\n        announceContext: '2 of 3'\\n      },\\n      { type: Button, title: 'Button 3', announceContext: '3 of 3' }\\n    ]\\n  }\\n];\\n\\nexport const Basic = () =>\\n  class Basic extends lng.Component {\\n    static _template() {\\n      return {\\n        debug: true,\\n        announcerEnabled: true,\\n        announcerTimeout: 15 * 1000,\\n        Column: {\\n          type: Column,\\n          w: 1920 - 160, // x offset from preview.js * 2,\\n          h: 400,\\n          style: {\\n            itemSpacing: 20\\n          },\\n          items: rows\\n        }\\n      };\\n    }\\n\\n    get announceContext() {\\n      return [\\n        'PAUSE-2.2',\\n        `Press LEFT or RIGHT to review items,\\n              press UP or DOWN to review categories,\\n              press CENTER to select`\\n      ];\\n    }\\n  };\\n\\nconst createRow = items => ({\\n  type: Row,\\n  w: 900,\\n  h: 100,\\n  itemSpacing: 30,\\n  items\\n});\\nconst createButton = (title, announceContext) => ({\\n  type: Button,\\n  title,\\n  announceContext\\n});\\n\\nconst abbrevRows = [\\n  createRow([\\n    createButton('TV-14', '1 of 9'),\\n    createButton('(CC)', '2 of 9'),\\n    createButton('HD', '3 of 9')\\n  ]),\\n  createRow([\\n    createButton('ENG', '4 of 9'),\\n    createButton('ENG+ES', '5 of 9'),\\n    createButton('AD', '6 of 9')\\n  ]),\\n  createRow([\\n    createButton('RT 95%', '7 of 9'),\\n    createButton('S3E12', '8 of 9'),\\n    createButton('S12E1, TV-14, CC, HD, ENG+ES, AD, RT 95%', '9 of 9')\\n  ])\\n];\\n\\nexport const WithDefaultAbbreviations = () => {\\n  class WithAbbreviations extends lng.Component {\\n    static _template() {\\n      return {\\n        debug: true,\\n        announcerEnabled: true,\\n        announcerTimeout: 15 * 1000,\\n        Column: {\\n          type: Column,\\n          w: 900,\\n          h: 400,\\n          style: {\\n            itemSpacing: 20\\n          },\\n          items: abbrevRows\\n        }\\n      };\\n    }\\n\\n    get announceContext() {\\n      return [\\n        'PAUSE-2.2',\\n        `Press LEFT or RIGHT to review items,\\n              press UP or DOWN to review categories,\\n              press CENTER to select`\\n      ];\\n    }\\n  }\\n  return WithAbbreviations;\\n};\\nWithDefaultAbbreviations.parameters = {\\n  announcerOptions: {\\n    abbreviations: defaultAbbrevConfig\\n  }\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"Basic\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 84\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 107\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 84\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 107\n    }\n  },\n  \"WithDefaultAbbreviations\": {\n    \"startLoc\": {\n      \"col\": 40,\n      \"line\": 121\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 146\n    },\n    \"startBody\": {\n      \"col\": 40,\n      \"line\": 121\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 146\n    }\n  }\n};\n    \n/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport withAnnouncer, { defaultAbbrevConfig } from '.';\nimport { Column, Row, Button } from '../../components';\nexport default {parameters: {\n  \"storySource\": {\n    \"source\": \"/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport withAnnouncer, { defaultAbbrevConfig } from '.';\\nimport { Column, Row, Button } from '../../components';\\nexport default {\\n  title: 'Utilities/withAnnouncer',\\n  component: withAnnouncer\\n};\\nconst rows = [{\\n  type: Row,\\n  w: 1920 - 160,\\n  // x offset from preview.js * 2,\\n  h: 100,\\n  itemSpacing: 30,\\n  items: [{\\n    type: Button,\\n    title: 'Button 1',\\n    announceContext: '1 of 3'\\n  }, {\\n    type: Button,\\n    title: 'Button 2',\\n    announceContext: '2 of 3'\\n  }, {\\n    type: Button,\\n    title: 'Button 3',\\n    announceContext: '3 of 3'\\n  }]\\n}, {\\n  type: Row,\\n  w: 1920 - 160,\\n  // x offset from preview.js * 2,\\n  h: 100,\\n  itemSpacing: 30,\\n  items: [{\\n    type: Button,\\n    title: 'Button 1',\\n    announceContext: '1 of 3'\\n  }, {\\n    type: Button,\\n    title: 'Button 2',\\n    announceContext: '2 of 3'\\n  }, {\\n    type: Button,\\n    title: 'Button 3',\\n    announceContext: '3 of 3'\\n  }]\\n}, {\\n  type: Row,\\n  w: 1920 - 160,\\n  // x offset from preview.js * 2,\\n  h: 100,\\n  itemSpacing: 30,\\n  items: [{\\n    type: Button,\\n    title: 'Button 1',\\n    announceContext: '1 of 3'\\n  }, {\\n    type: Button,\\n    title: 'Button 2',\\n    announceContext: '2 of 3'\\n  }, {\\n    type: Button,\\n    title: 'Button 3',\\n    announceContext: '3 of 3'\\n  }]\\n}];\\nexport const Basic = () => class Basic extends lng.Component {\\n  static _template() {\\n    return {\\n      debug: true,\\n      announcerEnabled: true,\\n      announcerTimeout: 15 * 1000,\\n      Column: {\\n        type: Column,\\n        w: 1920 - 160,\\n        // x offset from preview.js * 2,\\n        h: 400,\\n        style: {\\n          itemSpacing: 20\\n        },\\n        items: rows\\n      }\\n    };\\n  }\\n  get announceContext() {\\n    return ['PAUSE-2.2', `Press LEFT or RIGHT to review items,\\n              press UP or DOWN to review categories,\\n              press CENTER to select`];\\n  }\\n};\\nconst createRow = items => ({\\n  type: Row,\\n  w: 900,\\n  h: 100,\\n  itemSpacing: 30,\\n  items\\n});\\nconst createButton = (title, announceContext) => ({\\n  type: Button,\\n  title,\\n  announceContext\\n});\\nconst abbrevRows = [createRow([createButton('TV-14', '1 of 9'), createButton('(CC)', '2 of 9'), createButton('HD', '3 of 9')]), createRow([createButton('ENG', '4 of 9'), createButton('ENG+ES', '5 of 9'), createButton('AD', '6 of 9')]), createRow([createButton('RT 95%', '7 of 9'), createButton('S3E12', '8 of 9'), createButton('S12E1, TV-14, CC, HD, ENG+ES, AD, RT 95%', '9 of 9')])];\\nexport const WithDefaultAbbreviations = () => {\\n  class WithAbbreviations extends lng.Component {\\n    static _template() {\\n      return {\\n        debug: true,\\n        announcerEnabled: true,\\n        announcerTimeout: 15 * 1000,\\n        Column: {\\n          type: Column,\\n          w: 900,\\n          h: 400,\\n          style: {\\n            itemSpacing: 20\\n          },\\n          items: abbrevRows\\n        }\\n      };\\n    }\\n    get announceContext() {\\n      return ['PAUSE-2.2', `Press LEFT or RIGHT to review items,\\n              press UP or DOWN to review categories,\\n              press CENTER to select`];\\n    }\\n  }\\n  return WithAbbreviations;\\n};\\nWithDefaultAbbreviations.parameters = {\\n  announcerOptions: {\\n    abbreviations: defaultAbbrevConfig\\n  }\\n};\\nBasic.parameters = {\\n  ...Basic.parameters,\\n  docs: {\\n    ...Basic.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => class Basic extends lng.Component {\\\\n  static _template() {\\\\n    return {\\\\n      debug: true,\\\\n      announcerEnabled: true,\\\\n      announcerTimeout: 15 * 1000,\\\\n      Column: {\\\\n        type: Column,\\\\n        w: 1920 - 160,\\\\n        // x offset from preview.js * 2,\\\\n        h: 400,\\\\n        style: {\\\\n          itemSpacing: 20\\\\n        },\\\\n        items: rows\\\\n      }\\\\n    };\\\\n  }\\\\n  get announceContext() {\\\\n    return ['PAUSE-2.2', `Press LEFT or RIGHT to review items,\\\\n              press UP or DOWN to review categories,\\\\n              press CENTER to select`];\\\\n  }\\\\n}\\\",\\n      ...Basic.parameters?.docs?.source\\n    }\\n  }\\n};\\nWithDefaultAbbreviations.parameters = {\\n  ...WithDefaultAbbreviations.parameters,\\n  docs: {\\n    ...WithDefaultAbbreviations.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => {\\\\n  class WithAbbreviations extends lng.Component {\\\\n    static _template() {\\\\n      return {\\\\n        debug: true,\\\\n        announcerEnabled: true,\\\\n        announcerTimeout: 15 * 1000,\\\\n        Column: {\\\\n          type: Column,\\\\n          w: 900,\\\\n          h: 400,\\\\n          style: {\\\\n            itemSpacing: 20\\\\n          },\\\\n          items: abbrevRows\\\\n        }\\\\n      };\\\\n    }\\\\n    get announceContext() {\\\\n      return ['PAUSE-2.2', `Press LEFT or RIGHT to review items,\\\\n              press UP or DOWN to review categories,\\\\n              press CENTER to select`];\\\\n    }\\\\n  }\\\\n  return WithAbbreviations;\\\\n}\\\",\\n      ...WithDefaultAbbreviations.parameters?.docs?.source\\n    }\\n  }\\n};\",\n    \"locationsMap\": {\n      \"basic\": {\n        \"startLoc\": {\n          \"col\": 21,\n          \"line\": 84\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 107\n        },\n        \"startBody\": {\n          \"col\": 21,\n          \"line\": 84\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 107\n        }\n      },\n      \"with-default-abbreviations\": {\n        \"startLoc\": {\n          \"col\": 40,\n          \"line\": 121\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 146\n        },\n        \"startBody\": {\n          \"col\": 40,\n          \"line\": 121\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 146\n        }\n      }\n    }\n  }\n,},\n  title: 'Utilities/withAnnouncer',\n  component: withAnnouncer\n};\nconst rows = [{\n  type: Row,\n  w: 1920 - 160,\n  // x offset from preview.js * 2,\n  h: 100,\n  itemSpacing: 30,\n  items: [{\n    type: Button,\n    title: 'Button 1',\n    announceContext: '1 of 3'\n  }, {\n    type: Button,\n    title: 'Button 2',\n    announceContext: '2 of 3'\n  }, {\n    type: Button,\n    title: 'Button 3',\n    announceContext: '3 of 3'\n  }]\n}, {\n  type: Row,\n  w: 1920 - 160,\n  // x offset from preview.js * 2,\n  h: 100,\n  itemSpacing: 30,\n  items: [{\n    type: Button,\n    title: 'Button 1',\n    announceContext: '1 of 3'\n  }, {\n    type: Button,\n    title: 'Button 2',\n    announceContext: '2 of 3'\n  }, {\n    type: Button,\n    title: 'Button 3',\n    announceContext: '3 of 3'\n  }]\n}, {\n  type: Row,\n  w: 1920 - 160,\n  // x offset from preview.js * 2,\n  h: 100,\n  itemSpacing: 30,\n  items: [{\n    type: Button,\n    title: 'Button 1',\n    announceContext: '1 of 3'\n  }, {\n    type: Button,\n    title: 'Button 2',\n    announceContext: '2 of 3'\n  }, {\n    type: Button,\n    title: 'Button 3',\n    announceContext: '3 of 3'\n  }]\n}];\nexport const Basic = () => class Basic extends lng.Component {\n  static _template() {\n    return {\n      debug: true,\n      announcerEnabled: true,\n      announcerTimeout: 15 * 1000,\n      Column: {\n        type: Column,\n        w: 1920 - 160,\n        // x offset from preview.js * 2,\n        h: 400,\n        style: {\n          itemSpacing: 20\n        },\n        items: rows\n      }\n    };\n  }\n  get announceContext() {\n    return ['PAUSE-2.2', `Press LEFT or RIGHT to review items,\n              press UP or DOWN to review categories,\n              press CENTER to select`];\n  }\n};;\nconst createRow = items => ({\n  type: Row,\n  w: 900,\n  h: 100,\n  itemSpacing: 30,\n  items\n});\nconst createButton = (title, announceContext) => ({\n  type: Button,\n  title,\n  announceContext\n});\nconst abbrevRows = [createRow([createButton('TV-14', '1 of 9'), createButton('(CC)', '2 of 9'), createButton('HD', '3 of 9')]), createRow([createButton('ENG', '4 of 9'), createButton('ENG+ES', '5 of 9'), createButton('AD', '6 of 9')]), createRow([createButton('RT 95%', '7 of 9'), createButton('S3E12', '8 of 9'), createButton('S12E1, TV-14, CC, HD, ENG+ES, AD, RT 95%', '9 of 9')])];\nexport const WithDefaultAbbreviations = () => {\n  class WithAbbreviations extends lng.Component {\n    static _template() {\n      return {\n        debug: true,\n        announcerEnabled: true,\n        announcerTimeout: 15 * 1000,\n        Column: {\n          type: Column,\n          w: 900,\n          h: 400,\n          style: {\n            itemSpacing: 20\n          },\n          items: abbrevRows\n        }\n      };\n    }\n    get announceContext() {\n      return ['PAUSE-2.2', `Press LEFT or RIGHT to review items,\n              press UP or DOWN to review categories,\n              press CENTER to select`];\n    }\n  }\n  return WithAbbreviations;\n};\nWithDefaultAbbreviations.parameters = {\n  announcerOptions: {\n    abbreviations: defaultAbbrevConfig\n  }\n};\nBasic.parameters = {\n  ...Basic.parameters,\n  docs: {\n    ...Basic.parameters?.docs,\n    source: {\n      originalSource: \"() => class Basic extends lng.Component {\\n  static _template() {\\n    return {\\n      debug: true,\\n      announcerEnabled: true,\\n      announcerTimeout: 15 * 1000,\\n      Column: {\\n        type: Column,\\n        w: 1920 - 160,\\n        // x offset from preview.js * 2,\\n        h: 400,\\n        style: {\\n          itemSpacing: 20\\n        },\\n        items: rows\\n      }\\n    };\\n  }\\n  get announceContext() {\\n    return ['PAUSE-2.2', `Press LEFT or RIGHT to review items,\\n              press UP or DOWN to review categories,\\n              press CENTER to select`];\\n  }\\n}\",\n      ...Basic.parameters?.docs?.source\n    }\n  }\n};\nWithDefaultAbbreviations.parameters = {\n  ...WithDefaultAbbreviations.parameters,\n  docs: {\n    ...WithDefaultAbbreviations.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  class WithAbbreviations extends lng.Component {\\n    static _template() {\\n      return {\\n        debug: true,\\n        announcerEnabled: true,\\n        announcerTimeout: 15 * 1000,\\n        Column: {\\n          type: Column,\\n          w: 900,\\n          h: 400,\\n          style: {\\n            itemSpacing: 20\\n          },\\n          items: abbrevRows\\n        }\\n      };\\n    }\\n    get announceContext() {\\n      return ['PAUSE-2.2', `Press LEFT or RIGHT to review items,\\n              press UP or DOWN to review categories,\\n              press CENTER to select`];\\n    }\\n  }\\n  return WithAbbreviations;\\n}\",\n      ...WithDefaultAbbreviations.parameters?.docs?.source\n    }\n  }\n};"],"names":[],"sourceRoot":""}