{"version":3,"file":"5534.ab573575.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAPA;AASA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnfA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Checkbox/Checkbox.stories.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Label/Label.stories.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/ProgressBar/ProgressBar.stories.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Tile/Tile.stories.js"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"﻿/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport { default as CheckboxComponent } from '.';\\nimport { createModeControl } from '../../docs/utils';\\n\\nexport default {\\n  title: 'Components/Checkboxes/Checkbox'\\n};\\n\\nexport const Checkbox = () =>\\n  class Checkbox extends lng.Component {\\n    static _template() {\\n      return {\\n        Checkbox: {\\n          type: CheckboxComponent\\n        }\\n      };\\n    }\\n  };\\n\\nCheckbox.args = {\\n  checked: false,\\n  mode: 'focused'\\n};\\n\\nCheckbox.argTypes = {\\n  ...createModeControl({ summaryValue: 'focused' }),\\n  checked: {\\n    control: 'boolean',\\n    description: 'Toggles checked between on and off',\\n    table: {\\n      defaultValue: { summary: false }\\n    }\\n  }\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"Checkbox\": {\n    \"startLoc\": {\n      \"col\": 24,\n      \"line\": 25\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 33\n    },\n    \"startBody\": {\n      \"col\": 24,\n      \"line\": 25\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 33\n    }\n  }\n};\n    \n/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport { default as CheckboxComponent } from '.';\nimport { createModeControl } from '../../docs/utils';\nexport default {parameters: {\n  \"storySource\": {\n    \"source\": \"/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport { default as CheckboxComponent } from '.';\\nimport { createModeControl } from '../../docs/utils';\\nexport default {\\n  title: 'Components/Checkboxes/Checkbox'\\n};\\nexport const Checkbox = () => class Checkbox extends lng.Component {\\n  static _template() {\\n    return {\\n      Checkbox: {\\n        type: CheckboxComponent\\n      }\\n    };\\n  }\\n};\\nCheckbox.args = {\\n  checked: false,\\n  mode: 'focused'\\n};\\nCheckbox.argTypes = {\\n  ...createModeControl({\\n    summaryValue: 'focused'\\n  }),\\n  checked: {\\n    control: 'boolean',\\n    description: 'Toggles checked between on and off',\\n    table: {\\n      defaultValue: {\\n        summary: false\\n      }\\n    }\\n  }\\n};\\nCheckbox.parameters = {\\n  ...Checkbox.parameters,\\n  docs: {\\n    ...Checkbox.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => class Checkbox extends lng.Component {\\\\n  static _template() {\\\\n    return {\\\\n      Checkbox: {\\\\n        type: CheckboxComponent\\\\n      }\\\\n    };\\\\n  }\\\\n}\\\",\\n      ...Checkbox.parameters?.docs?.source\\n    }\\n  }\\n};\",\n    \"locationsMap\": {\n      \"checkbox\": {\n        \"startLoc\": {\n          \"col\": 24,\n          \"line\": 25\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 33\n        },\n        \"startBody\": {\n          \"col\": 24,\n          \"line\": 25\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 33\n        }\n      }\n    }\n  }\n,},\n  title: 'Components/Checkboxes/Checkbox'\n};\nexport const Checkbox = () => class Checkbox extends lng.Component {\n  static _template() {\n    return {\n      Checkbox: {\n        type: CheckboxComponent\n      }\n    };\n  }\n};\nCheckbox.args = {\n  checked: false,\n  mode: 'focused'\n};\nCheckbox.argTypes = {\n  ...createModeControl({\n    summaryValue: 'focused'\n  }),\n  checked: {\n    control: 'boolean',\n    description: 'Toggles checked between on and off',\n    table: {\n      defaultValue: {\n        summary: false\n      }\n    }\n  }\n};\nCheckbox.parameters = {\n  ...Checkbox.parameters,\n  docs: {\n    ...Checkbox.parameters?.docs,\n    source: {\n      originalSource: \"() => class Checkbox extends lng.Component {\\n  static _template() {\\n    return {\\n      Checkbox: {\\n        type: CheckboxComponent\\n      }\\n    };\\n  }\\n}\",\n      ...Checkbox.parameters?.docs?.source\n    }\n  }\n};","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"﻿/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport { default as LabelComponent } from '.';\\n\\nexport default {\\n  title: 'Components/Label'\\n};\\n\\nexport const Label = () =>\\n  class Label extends lng.Component {\\n    static _template() {\\n      return {\\n        Label: {\\n          type: LabelComponent\\n        }\\n      };\\n    }\\n  };\\nLabel.args = {\\n  title: 'Label'\\n};\\nLabel.argTypes = {\\n  title: {\\n    control: 'text',\\n    description: 'Text to display in the foreground of the label',\\n    table: {\\n      defaultValue: { summary: 'undefined' }\\n    }\\n  }\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"Label\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 24\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 32\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 24\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 32\n    }\n  }\n};\n    \n/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport { default as LabelComponent } from '.';\nexport default {parameters: {\n  \"storySource\": {\n    \"source\": \"/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport { default as LabelComponent } from '.';\\nexport default {\\n  title: 'Components/Label'\\n};\\nexport const Label = () => class Label extends lng.Component {\\n  static _template() {\\n    return {\\n      Label: {\\n        type: LabelComponent\\n      }\\n    };\\n  }\\n};\\nLabel.args = {\\n  title: 'Label'\\n};\\nLabel.argTypes = {\\n  title: {\\n    control: 'text',\\n    description: 'Text to display in the foreground of the label',\\n    table: {\\n      defaultValue: {\\n        summary: 'undefined'\\n      }\\n    }\\n  }\\n};\\nLabel.parameters = {\\n  ...Label.parameters,\\n  docs: {\\n    ...Label.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => class Label extends lng.Component {\\\\n  static _template() {\\\\n    return {\\\\n      Label: {\\\\n        type: LabelComponent\\\\n      }\\\\n    };\\\\n  }\\\\n}\\\",\\n      ...Label.parameters?.docs?.source\\n    }\\n  }\\n};\",\n    \"locationsMap\": {\n      \"label\": {\n        \"startLoc\": {\n          \"col\": 21,\n          \"line\": 24\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 32\n        },\n        \"startBody\": {\n          \"col\": 21,\n          \"line\": 24\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 32\n        }\n      }\n    }\n  }\n,},\n  title: 'Components/Label'\n};\nexport const Label = () => class Label extends lng.Component {\n  static _template() {\n    return {\n      Label: {\n        type: LabelComponent\n      }\n    };\n  }\n};\nLabel.args = {\n  title: 'Label'\n};\nLabel.argTypes = {\n  title: {\n    control: 'text',\n    description: 'Text to display in the foreground of the label',\n    table: {\n      defaultValue: {\n        summary: 'undefined'\n      }\n    }\n  }\n};\nLabel.parameters = {\n  ...Label.parameters,\n  docs: {\n    ...Label.parameters?.docs,\n    source: {\n      originalSource: \"() => class Label extends lng.Component {\\n  static _template() {\\n    return {\\n      Label: {\\n        type: LabelComponent\\n      }\\n    };\\n  }\\n}\",\n      ...Label.parameters?.docs?.source\n    }\n  }\n};","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"﻿/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport { default as ProgressBarComponent } from '.';\\n\\nexport default {\\n  title: 'Components/ProgressBar',\\n  parameters: {\\n    tag: 'ProgressBar',\\n    actions: {\\n      handles: ['mouseover', 'click .btn']\\n    }\\n  }\\n};\\n\\nexport const ProgressBar = () =>\\n  class ProgressBar extends lng.Component {\\n    static _template() {\\n      return {\\n        ProgressBar: {\\n          type: ProgressBarComponent\\n        }\\n      };\\n    }\\n  };\\nProgressBar.storyName = 'ProgressBar';\\nProgressBar.args = {\\n  progress: 0.5,\\n  w: 410\\n};\\nProgressBar.argTypes = {\\n  progress: {\\n    control: {\\n      type: 'range',\\n      min: 0,\\n      max: 1,\\n      step: 0.01\\n    },\\n    description: 'Percentage of the current progress from 0 to 1',\\n    table: { defaultValue: { summary: 0 } }\\n  },\\n  w: {\\n    control: {\\n      type: 'range',\\n      min: 0,\\n      max: 600,\\n      step: 0.01\\n    },\\n    description: 'width of the entire bar',\\n    table: { defaultValue: { summary: 0 } }\\n  }\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"ProgressBar\": {\n    \"startLoc\": {\n      \"col\": 27,\n      \"line\": 30\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 38\n    },\n    \"startBody\": {\n      \"col\": 27,\n      \"line\": 30\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 38\n    }\n  }\n};\n    \n/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport { default as ProgressBarComponent } from '.';\nexport default {\n  title: 'Components/ProgressBar',\n  parameters: {\n  \"storySource\": {\n    \"source\": \"/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport { default as ProgressBarComponent } from '.';\\nexport default {\\n  title: 'Components/ProgressBar',\\n  parameters: {\\n    tag: 'ProgressBar',\\n    actions: {\\n      handles: ['mouseover', 'click .btn']\\n    }\\n  }\\n};\\nexport const ProgressBar = () => class ProgressBar extends lng.Component {\\n  static _template() {\\n    return {\\n      ProgressBar: {\\n        type: ProgressBarComponent\\n      }\\n    };\\n  }\\n};\\nProgressBar.storyName = 'ProgressBar';\\nProgressBar.args = {\\n  progress: 0.5,\\n  w: 410\\n};\\nProgressBar.argTypes = {\\n  progress: {\\n    control: {\\n      type: 'range',\\n      min: 0,\\n      max: 1,\\n      step: 0.01\\n    },\\n    description: 'Percentage of the current progress from 0 to 1',\\n    table: {\\n      defaultValue: {\\n        summary: 0\\n      }\\n    }\\n  },\\n  w: {\\n    control: {\\n      type: 'range',\\n      min: 0,\\n      max: 600,\\n      step: 0.01\\n    },\\n    description: 'width of the entire bar',\\n    table: {\\n      defaultValue: {\\n        summary: 0\\n      }\\n    }\\n  }\\n};\\nProgressBar.parameters = {\\n  ...ProgressBar.parameters,\\n  docs: {\\n    ...ProgressBar.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => class ProgressBar extends lng.Component {\\\\n  static _template() {\\\\n    return {\\\\n      ProgressBar: {\\\\n        type: ProgressBarComponent\\\\n      }\\\\n    };\\\\n  }\\\\n}\\\",\\n      ...ProgressBar.parameters?.docs?.source\\n    }\\n  }\\n};\",\n    \"locationsMap\": {\n      \"progress-bar\": {\n        \"startLoc\": {\n          \"col\": 27,\n          \"line\": 30\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 38\n        },\n        \"startBody\": {\n          \"col\": 27,\n          \"line\": 30\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 38\n        }\n      }\n    }\n  }\n,\n    tag: 'ProgressBar',\n    actions: {\n      handles: ['mouseover', 'click .btn']\n    }\n  },};\nexport const ProgressBar = () => class ProgressBar extends lng.Component {\n  static _template() {\n    return {\n      ProgressBar: {\n        type: ProgressBarComponent\n      }\n    };\n  }\n};\nProgressBar.storyName = 'ProgressBar';\nProgressBar.args = {\n  progress: 0.5,\n  w: 410\n};\nProgressBar.argTypes = {\n  progress: {\n    control: {\n      type: 'range',\n      min: 0,\n      max: 1,\n      step: 0.01\n    },\n    description: 'Percentage of the current progress from 0 to 1',\n    table: {\n      defaultValue: {\n        summary: 0\n      }\n    }\n  },\n  w: {\n    control: {\n      type: 'range',\n      min: 0,\n      max: 600,\n      step: 0.01\n    },\n    description: 'width of the entire bar',\n    table: {\n      defaultValue: {\n        summary: 0\n      }\n    }\n  }\n};\nProgressBar.parameters = {\n  ...ProgressBar.parameters,\n  docs: {\n    ...ProgressBar.parameters?.docs,\n    source: {\n      originalSource: \"() => class ProgressBar extends lng.Component {\\n  static _template() {\\n    return {\\n      ProgressBar: {\\n        type: ProgressBarComponent\\n      }\\n    };\\n  }\\n}\",\n      ...ProgressBar.parameters?.docs?.source\n    }\n  }\n};","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"﻿/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport { default as TileComponent } from '.';\\nimport { createModeControl, generateSubStory } from '../../docs/utils';\\nimport { Artwork as ArtworkStory } from '../Artwork/Artwork.stories.js';\\nimport { Checkbox as CheckboxStory } from '../Checkbox/Checkbox.stories.js';\\nimport { MetadataTile as MetadataTileStory } from '../MetadataTile/MetadataTile.stories';\\nimport { withLayout as ItemLayoutStory } from '../../mixins/withLayout/withLayout.stories.js';\\nimport { Label as LabelStory } from '../Label/Label.stories.js';\\nimport { ProgressBar as ProgressBarStory } from '../ProgressBar/ProgressBar.stories';\\nimport { Text as BadgeStory } from '../Badge/Badge.stories.js';\\nimport xfinityLogo from '../../assets/images/Xfinity-Provider-Logo-2x1.png';\\n\\nexport default {\\n  title: 'Components/Tile'\\n};\\n\\nexport const Tile = () =>\\n  class Tile extends lng.Component {\\n    static _template() {\\n      return {\\n        Tile: {\\n          type: TileComponent,\\n          itemLayout: {\\n            ratioX: 16,\\n            ratioY: 9,\\n            upCount: 3\\n          },\\n          artwork: {\\n            src: 'https://image.tmdb.org/t/p/w500/zHdQ6yaqDf3OQO5uhr0auAgwK6O.jpg'\\n          }\\n        }\\n      };\\n    }\\n  };\\n\\nTile.args = {\\n  metadataLocation: 'standard',\\n  logo: xfinityLogo,\\n  persistentMetadata: false,\\n  mode: 'focused'\\n};\\n\\nTile.argTypes = {\\n  ...createModeControl({ summaryValue: Tile.args.mode }),\\n  persistentMetadata: {\\n    control: 'boolean',\\n    description: 'Show metadata if exists regardless of focusState',\\n    table: {\\n      defaultValue: { summary: false }\\n    }\\n  },\\n  metadataLocation: {\\n    control: 'radio',\\n    options: ['standard', 'inset'],\\n    description:\\n      'Controls where metadata is positioned in relationship to the Tile',\\n    table: {\\n      defaultValue: { summary: 'standard' }\\n    }\\n  },\\n  logo: {\\n    control: 'select',\\n    options: [xfinityLogo, 'null'],\\n    description: 'Icon source',\\n    table: {\\n      defaultValue: { summary: 'undefined' }\\n    }\\n  }\\n};\\n\\ngenerateSubStory({\\n  componentName: 'Tile',\\n  baseStory: Tile,\\n  subStory: MetadataTileStory,\\n  targetProperty: 'metadata',\\n  include: ['title', 'description']\\n});\\ngenerateSubStory({\\n  componentName: 'Tile',\\n  baseStory: Tile,\\n  subStory: ItemLayoutStory,\\n  targetProperty: 'itemLayout',\\n  include: ['ratioX', 'ratioY', 'upCount', 'circle']\\n});\\ngenerateSubStory({\\n  componentName: 'Tile',\\n  baseStory: Tile,\\n  subStory: BadgeStory,\\n  targetProperty: 'badge',\\n  include: ['title']\\n});\\ngenerateSubStory({\\n  componentName: 'Tile',\\n  baseStory: Tile,\\n  subStory: LabelStory,\\n  targetProperty: 'label',\\n  include: ['title']\\n});\\ngenerateSubStory({\\n  componentName: 'Tile',\\n  baseStory: Tile,\\n  subStory: ArtworkStory,\\n  targetProperty: 'artwork',\\n  include: ['blur', 'foregroundSrc', 'format', 'fill']\\n});\\ngenerateSubStory({\\n  componentName: 'Tile',\\n  baseStory: Tile,\\n  subStory: ProgressBarStory,\\n  targetProperty: 'progressBar',\\n  include: ['progress']\\n});\\ngenerateSubStory({\\n  componentName: 'Tile',\\n  baseStory: Tile,\\n  subStory: CheckboxStory,\\n  targetProperty: 'checkbox',\\n  include: ['checked']\\n});\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"Tile\": {\n    \"startLoc\": {\n      \"col\": 20,\n      \"line\": 33\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 49\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 33\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 49\n    }\n  }\n};\n    \n/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport { default as TileComponent } from '.';\nimport { createModeControl, generateSubStory } from '../../docs/utils';\nimport { Artwork as ArtworkStory } from '../Artwork/Artwork.stories.js';\nimport { Checkbox as CheckboxStory } from '../Checkbox/Checkbox.stories.js';\nimport { MetadataTile as MetadataTileStory } from '../MetadataTile/MetadataTile.stories';\nimport { withLayout as ItemLayoutStory } from '../../mixins/withLayout/withLayout.stories.js';\nimport { Label as LabelStory } from '../Label/Label.stories.js';\nimport { ProgressBar as ProgressBarStory } from '../ProgressBar/ProgressBar.stories';\nimport { Text as BadgeStory } from '../Badge/Badge.stories.js';\nimport xfinityLogo from '../../assets/images/Xfinity-Provider-Logo-2x1.png';\nexport default {parameters: {\n  \"storySource\": {\n    \"source\": \"/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport { default as TileComponent } from '.';\\nimport { createModeControl, generateSubStory } from '../../docs/utils';\\nimport { Artwork as ArtworkStory } from '../Artwork/Artwork.stories.js';\\nimport { Checkbox as CheckboxStory } from '../Checkbox/Checkbox.stories.js';\\nimport { MetadataTile as MetadataTileStory } from '../MetadataTile/MetadataTile.stories';\\nimport { withLayout as ItemLayoutStory } from '../../mixins/withLayout/withLayout.stories.js';\\nimport { Label as LabelStory } from '../Label/Label.stories.js';\\nimport { ProgressBar as ProgressBarStory } from '../ProgressBar/ProgressBar.stories';\\nimport { Text as BadgeStory } from '../Badge/Badge.stories.js';\\nimport xfinityLogo from '../../assets/images/Xfinity-Provider-Logo-2x1.png';\\nexport default {\\n  title: 'Components/Tile'\\n};\\nexport const Tile = () => class Tile extends lng.Component {\\n  static _template() {\\n    return {\\n      Tile: {\\n        type: TileComponent,\\n        itemLayout: {\\n          ratioX: 16,\\n          ratioY: 9,\\n          upCount: 3\\n        },\\n        artwork: {\\n          src: 'https://image.tmdb.org/t/p/w500/zHdQ6yaqDf3OQO5uhr0auAgwK6O.jpg'\\n        }\\n      }\\n    };\\n  }\\n};\\nTile.args = {\\n  metadataLocation: 'standard',\\n  logo: xfinityLogo,\\n  persistentMetadata: false,\\n  mode: 'focused'\\n};\\nTile.argTypes = {\\n  ...createModeControl({\\n    summaryValue: Tile.args.mode\\n  }),\\n  persistentMetadata: {\\n    control: 'boolean',\\n    description: 'Show metadata if exists regardless of focusState',\\n    table: {\\n      defaultValue: {\\n        summary: false\\n      }\\n    }\\n  },\\n  metadataLocation: {\\n    control: 'radio',\\n    options: ['standard', 'inset'],\\n    description: 'Controls where metadata is positioned in relationship to the Tile',\\n    table: {\\n      defaultValue: {\\n        summary: 'standard'\\n      }\\n    }\\n  },\\n  logo: {\\n    control: 'select',\\n    options: [xfinityLogo, 'null'],\\n    description: 'Icon source',\\n    table: {\\n      defaultValue: {\\n        summary: 'undefined'\\n      }\\n    }\\n  }\\n};\\ngenerateSubStory({\\n  componentName: 'Tile',\\n  baseStory: Tile,\\n  subStory: MetadataTileStory,\\n  targetProperty: 'metadata',\\n  include: ['title', 'description']\\n});\\ngenerateSubStory({\\n  componentName: 'Tile',\\n  baseStory: Tile,\\n  subStory: ItemLayoutStory,\\n  targetProperty: 'itemLayout',\\n  include: ['ratioX', 'ratioY', 'upCount', 'circle']\\n});\\ngenerateSubStory({\\n  componentName: 'Tile',\\n  baseStory: Tile,\\n  subStory: BadgeStory,\\n  targetProperty: 'badge',\\n  include: ['title']\\n});\\ngenerateSubStory({\\n  componentName: 'Tile',\\n  baseStory: Tile,\\n  subStory: LabelStory,\\n  targetProperty: 'label',\\n  include: ['title']\\n});\\ngenerateSubStory({\\n  componentName: 'Tile',\\n  baseStory: Tile,\\n  subStory: ArtworkStory,\\n  targetProperty: 'artwork',\\n  include: ['blur', 'foregroundSrc', 'format', 'fill']\\n});\\ngenerateSubStory({\\n  componentName: 'Tile',\\n  baseStory: Tile,\\n  subStory: ProgressBarStory,\\n  targetProperty: 'progressBar',\\n  include: ['progress']\\n});\\ngenerateSubStory({\\n  componentName: 'Tile',\\n  baseStory: Tile,\\n  subStory: CheckboxStory,\\n  targetProperty: 'checkbox',\\n  include: ['checked']\\n});\\nTile.parameters = {\\n  ...Tile.parameters,\\n  docs: {\\n    ...Tile.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => class Tile extends lng.Component {\\\\n  static _template() {\\\\n    return {\\\\n      Tile: {\\\\n        type: TileComponent,\\\\n        itemLayout: {\\\\n          ratioX: 16,\\\\n          ratioY: 9,\\\\n          upCount: 3\\\\n        },\\\\n        artwork: {\\\\n          src: 'https://image.tmdb.org/t/p/w500/zHdQ6yaqDf3OQO5uhr0auAgwK6O.jpg'\\\\n        }\\\\n      }\\\\n    };\\\\n  }\\\\n}\\\",\\n      ...Tile.parameters?.docs?.source\\n    }\\n  }\\n};\",\n    \"locationsMap\": {\n      \"tile\": {\n        \"startLoc\": {\n          \"col\": 20,\n          \"line\": 33\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 49\n        },\n        \"startBody\": {\n          \"col\": 20,\n          \"line\": 33\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 49\n        }\n      }\n    }\n  }\n,},\n  title: 'Components/Tile'\n};\nexport const Tile = () => class Tile extends lng.Component {\n  static _template() {\n    return {\n      Tile: {\n        type: TileComponent,\n        itemLayout: {\n          ratioX: 16,\n          ratioY: 9,\n          upCount: 3\n        },\n        artwork: {\n          src: 'https://image.tmdb.org/t/p/w500/zHdQ6yaqDf3OQO5uhr0auAgwK6O.jpg'\n        }\n      }\n    };\n  }\n};\nTile.args = {\n  metadataLocation: 'standard',\n  logo: xfinityLogo,\n  persistentMetadata: false,\n  mode: 'focused'\n};\nTile.argTypes = {\n  ...createModeControl({\n    summaryValue: Tile.args.mode\n  }),\n  persistentMetadata: {\n    control: 'boolean',\n    description: 'Show metadata if exists regardless of focusState',\n    table: {\n      defaultValue: {\n        summary: false\n      }\n    }\n  },\n  metadataLocation: {\n    control: 'radio',\n    options: ['standard', 'inset'],\n    description: 'Controls where metadata is positioned in relationship to the Tile',\n    table: {\n      defaultValue: {\n        summary: 'standard'\n      }\n    }\n  },\n  logo: {\n    control: 'select',\n    options: [xfinityLogo, 'null'],\n    description: 'Icon source',\n    table: {\n      defaultValue: {\n        summary: 'undefined'\n      }\n    }\n  }\n};\ngenerateSubStory({\n  componentName: 'Tile',\n  baseStory: Tile,\n  subStory: MetadataTileStory,\n  targetProperty: 'metadata',\n  include: ['title', 'description']\n});\ngenerateSubStory({\n  componentName: 'Tile',\n  baseStory: Tile,\n  subStory: ItemLayoutStory,\n  targetProperty: 'itemLayout',\n  include: ['ratioX', 'ratioY', 'upCount', 'circle']\n});\ngenerateSubStory({\n  componentName: 'Tile',\n  baseStory: Tile,\n  subStory: BadgeStory,\n  targetProperty: 'badge',\n  include: ['title']\n});\ngenerateSubStory({\n  componentName: 'Tile',\n  baseStory: Tile,\n  subStory: LabelStory,\n  targetProperty: 'label',\n  include: ['title']\n});\ngenerateSubStory({\n  componentName: 'Tile',\n  baseStory: Tile,\n  subStory: ArtworkStory,\n  targetProperty: 'artwork',\n  include: ['blur', 'foregroundSrc', 'format', 'fill']\n});\ngenerateSubStory({\n  componentName: 'Tile',\n  baseStory: Tile,\n  subStory: ProgressBarStory,\n  targetProperty: 'progressBar',\n  include: ['progress']\n});\ngenerateSubStory({\n  componentName: 'Tile',\n  baseStory: Tile,\n  subStory: CheckboxStory,\n  targetProperty: 'checkbox',\n  include: ['checked']\n});\nTile.parameters = {\n  ...Tile.parameters,\n  docs: {\n    ...Tile.parameters?.docs,\n    source: {\n      originalSource: \"() => class Tile extends lng.Component {\\n  static _template() {\\n    return {\\n      Tile: {\\n        type: TileComponent,\\n        itemLayout: {\\n          ratioX: 16,\\n          ratioY: 9,\\n          upCount: 3\\n        },\\n        artwork: {\\n          src: 'https://image.tmdb.org/t/p/w500/zHdQ6yaqDf3OQO5uhr0auAgwK6O.jpg'\\n        }\\n      }\\n    };\\n  }\\n}\",\n      ...Tile.parameters?.docs?.source\n    }\n  }\n};"],"names":[],"sourceRoot":""}