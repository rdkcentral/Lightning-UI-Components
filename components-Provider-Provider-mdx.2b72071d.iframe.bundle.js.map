{"version":3,"file":"components-Provider-Provider-mdx.2b72071d.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AChPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAOA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAOA;AAIA;AAAA;AAEA;AAAA;AAVA;AACA;AAAA;AAAA;AAAA;AArKA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Provider/Provider.mdx","webpack://lightning-ui-docs/../../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Provider/Provider.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Provider/Provider.js","webpack://lightning-ui-docs/../../../node_modules/@storybook/core/dist/components/ sync","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Provider/Provider.stories.js","webpack://lightning-ui-docs/../../../node_modules/memoizerific/ sync"],"sourcesContent":["\nimport React from 'react';\n\n/*prettier-ignore*/\n/*\nCopyright 2023 Comcast Cable Communications Management, LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nSPDX-License-Identifier: Apache-2.0\n\\*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/Lightning-UI-Components/Lightning-UI-Components/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.mjs\";\nimport {Meta, Title} from '@storybook/blocks';\nimport xfinityProviderLogo from '../../assets/images/Xfinity-Provider-Logo-Square.png';\nimport * as ProviderStories from './Provider.stories';\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    pre: \"pre\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [\"\\n\", \"\\n\", \"\\n\", _jsx(Meta, {\n      of: ProviderStories\n    }), \"\\n\", _jsx(Title, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Provider\"\n      }), \" serves to condense a list of providers to show only the number you specify, and add a counter to represent any that remain.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"source\",\n      children: \"Source\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/%40lightningjs/ui-components/src/components/Provider/Provider.js\",\n        rel: \"nofollow\",\n        children: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/%40lightningjs/ui-components/src/components/Provider/Provider.js\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"usage\",\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Provider\"\n      }), \" component only needs an array of image paths to populate the list of providers. However, you can supply an \", _jsx(_components.code, {\n        children: \"Icon\"\n      }), \" component, and the \", _jsx(_components.code, {\n        children: \"Provider\"\n      }), \" will resize it to fit. This is useful, for example, if you want to include a 2:1 provider logo amongst a series of 1:1s.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"import { Provider } from '@lightningjs/ui-components';\\n\\nclass Basic extends lng.Component {\\n  static _template() {\\n    return {\\n      Provider: {\\n        type: Provider,\\n        visibleCount: args.visibleCount,\\n        providers: [\\n          xfinityProviderLogoSquare,\\n          {\\n            type: Icon,\\n            w: 96,\\n            h: 48,\\n            icon: xfinityLogo\\n          },\\n          ...Array.apply(null, { length: 10 }).map(\\n            () => xfinityProviderLogoSquare\\n          )\\n        ],\\n        counterText: '...',\\n        disableRadius: true\\n      }\\n    };\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"api\",\n      children: \"API\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"properties\",\n      children: \"Properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"name\"\n          }), _jsx(_components.th, {\n            children: \"type\"\n          }), _jsx(_components.th, {\n            children: \"required\"\n          }), _jsx(_components.th, {\n            children: \"default\"\n          }), _jsx(_components.th, {\n            children: \"description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"disableRadius\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"if true, disables the radius style property to Icon providers\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"counterText\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"undefined\"\n          }), _jsx(_components.td, {\n            children: \"text to override counter's default '+Number' functionality\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"providers\"\n          }), _jsx(_components.td, {\n            children: \"array\"\n          }), _jsx(_components.td, {\n            children: \"true\"\n          }), _jsx(_components.td, {\n            children: \"undefined\"\n          }), _jsx(_components.td, {\n            children: \"list of provider images\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"providersHidden\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"readonly\"\n          }), _jsx(_components.td, {\n            children: \"undefined\"\n          }), _jsx(_components.td, {\n            children: \"the number of providers that will be hidden by the counter\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"visibleCount\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"true\"\n          }), _jsx(_components.td, {\n            children: \"undefined\"\n          }), _jsx(_components.td, {\n            children: \"the number of providers to show before adding a counter\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"style-properties\",\n      children: \"Style Properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"name\"\n          }), _jsx(_components.th, {\n            children: \"type\"\n          }), _jsx(_components.th, {\n            children: \"description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"alpha\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"transparency level of a provider\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"counterBackgroundColor\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"background color of counter\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"counterTextStyle\"\n          }), _jsx(_components.td, {\n            children: \"string | object\"\n          }), _jsx(_components.td, {\n            children: \"text style for counter\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"itemSize\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"height and width to apply to icons and counter\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"itemSpacing\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"space between providers\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"radius\"\n          }), _jsx(_components.td, {\n            children: \"number | array\"\n          }), _jsxs(_components.td, {\n            children: [\"radius of counter (and Icons if \", _jsx(_components.code, {\n              children: \"applyRadius\"\n            }), \" property is true)\"]\n          })]\n        })]\n      })]\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport function base(theme) {\n  return {\n    alpha: theme.alpha.primary,\n    counterTextStyle: theme.typography.headline3,\n    itemSize: theme.layout.gutterX * 2,\n    itemSpacing: theme.spacer.md,\n    radius: theme.radius.sm\n  };\n}\n\nexport const mode = theme => ({\n  disabled: {\n    alpha: theme.alpha.inactive\n  }\n});\n\nexport const tone = theme => ({\n  neutral: {\n    counterBackgroundColor: theme.color.fillInverseSecondary\n  },\n  inverse: {\n    counterBackgroundColor: theme.color.fillNeutralSecondary\n  },\n  brand: {\n    counterBackgroundColor: theme.color.fillInverseSecondary\n  }\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport Base from '../Base';\nimport Row from '../Row';\nimport Icon from '../Icon';\nimport TextBox from '../TextBox';\nimport * as styles from './Provider.styles';\nimport { getMaxRoundRadius } from '../../utils';\n\nexport default class Provider extends Base {\n  static get __componentName() {\n    return 'Provider';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  static _template() {\n    return {\n      Row: {\n        type: Row,\n        autoResizeWidth: true\n      }\n    };\n  }\n\n  static get properties() {\n    return ['disableRadius', 'counterText', 'providers', 'visibleCount'];\n  }\n\n  static get tags() {\n    return ['Row'];\n  }\n\n  get providersHidden() {\n    return this.providers.length - this._visibleCount;\n  }\n\n  _construct() {\n    this._providers = [];\n    super._construct();\n  }\n\n  _update() {\n    this._updateProviders();\n    this._updateCounter();\n  }\n\n  _updateProviders() {\n    const providerList = [];\n    this.providers.slice(0, this.visibleCount).forEach(provider => {\n      // Create a starting point for each provider icon.\n\n      let patch = {\n        centerInParent: true,\n        radius: this.disableRadius\n          ? 0\n          : getMaxRoundRadius(\n              this.style.radius,\n              this.style.itemSize,\n              this.style.itemSize\n            ),\n        alpha: this.style.alpha,\n        style: provider.style || {}\n      };\n\n      if (\n        // If the provider is a pre-configured Icon, allow it to override the default behavior.\n        provider.type === Icon &&\n        provider.icon &&\n        provider.w &&\n        provider.h\n      ) {\n        // Maintain the ratio of the source icon while enforcing the height specified in the styles.\n        const ratio = provider.w / provider.h;\n        patch = {\n          type: Icon,\n          icon: provider.icon,\n          ...provider,\n          w: this.style.itemSize * ratio,\n          h: this.style.itemSize,\n          ...patch\n        };\n      } else {\n        // If the provider is just a string, create the rest of the Icon.\n        patch = {\n          type: Icon,\n          w: this.style.itemSize,\n          h: this.style.itemSize,\n          ...patch\n        };\n        if (typeof provider === 'object') {\n          patch = { ...patch, ...provider };\n        } else {\n          patch.icon = provider;\n        }\n      }\n      providerList.push(patch);\n    });\n    this._Row.patch({\n      style: {\n        itemSpacing: this.style.itemSpacing\n      },\n      items: providerList,\n      h: this.style.itemSize\n    });\n  }\n\n  _updateCounter() {\n    if (this.providers.length > this.visibleCount) {\n      const remaining = this.providersHidden;\n      const counter = {\n        announce: `+${remaining}`,\n        alpha: this.style.alpha,\n        w: this.style.itemSize,\n        h: this.style.itemSize,\n        centerInParent: true,\n        Background: {\n          w: this.style.itemSize,\n          h: this.style.itemSize,\n          texture: lng.Tools.getRoundRect(\n            this.style.itemSize,\n            this.style.itemSize,\n            getMaxRoundRadius(\n              this.style.radius,\n              this.style.itemSize,\n              this.style.itemSize\n            ),\n            0,\n            null,\n            true,\n            this.style.counterBackgroundColor\n          )\n        },\n        Text: {\n          type: TextBox,\n          mountX: 0.5,\n          mountY: 0.5,\n          x: this.style.itemSize / 2,\n          y: this.style.itemSize / 2,\n          content: this.counterText || `+${remaining}`,\n          style: { textStyle: this.style.counterTextStyle }\n        }\n      };\n      this._Row.appendItems([counter]);\n    }\n  }\n\n  $itemChanged() {\n    this.signal('providerChanged');\n  }\n\n  _getVisibleCount() {\n    const min = 1;\n    const max = this.providers.length;\n    const visibleCount = Math.min(Math.max(min, this._visibleCount), max);\n    if (this._visibleCount < min) {\n      console.warn(\n        `Warning: The specified visible count (${this._visibleCount}) is less than the minimum value (${min}). Setting it to ${min}.`\n      );\n    }\n    if (this._visibleCount > max) {\n      console.warn(\n        `Warning: The specified visible count (${this._visibleCount}) is greater than the maximum value (${max}). Setting it to ${max}.`\n      );\n    }\n    return visibleCount;\n  }\n\n  get w() {\n    return this._Row.w;\n  }\n\n  set announce(announce) {\n    super.announce = announce;\n  }\n\n  get announce() {\n    return (\n      this._announce ||\n      (this._Row.items &&\n        this._Row.items.length &&\n        this._Row.items.map(item => item.announce))\n    );\n  }\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../node_modules/@storybook/core/dist/components sync recursive\";\nmodule.exports = webpackEmptyContext;","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport ProviderComponent from '.';\nimport { default as Icon } from '../Icon';\nimport xfinityLogo from '../../assets/images/XfinityLogo16x9.png';\nimport xfinity from '../../assets/images/Xfinity-Provider-Logo-Square.png';\n\nexport default {\n  title: 'Components/Provider'\n};\n\nconst sharedArgs = {\n  counterText: null,\n  disableRadius: false,\n  visibleCount: 3\n};\nconst sharedArgTypes = {\n  visibleCount: {\n    control: { type: 'range', min: 1, max: 10, step: 1 },\n    description: 'Number of visible providers',\n    table: {\n      defaultValue: { summary: 'undefined' }\n    }\n  },\n  counterText: {\n    control: 'select',\n    options: [null, '...'],\n    description: 'Text to display in counter (overrides default behavior)',\n    table: {\n      defaultValue: { summary: 'undefined' }\n    }\n  },\n  disableRadius: {\n    control: 'boolean',\n    description: 'Disable applying radius to icons',\n    table: {\n      defaultValue: { summary: false }\n    }\n  }\n};\n\nexport const Provider = () =>\n  class Provider extends lng.Component {\n    static _template() {\n      return {\n        Provider: {\n          type: ProviderComponent,\n          providers: Array(10).fill({\n            icon: xfinity,\n            announce: 'xfinity'\n          })\n        }\n      };\n    }\n  };\n\nProvider.args = sharedArgs;\nProvider.argTypes = sharedArgTypes;\n\nexport const WithCustomIconSize = () =>\n  class WithCustomIconSize extends lng.Component {\n    static _template() {\n      return {\n        Provider: {\n          type: ProviderComponent,\n          providers: [\n            {\n              icon: xfinity,\n              announce: 'xfinity'\n            },\n            {\n              type: Icon,\n              w: 85,\n              h: 48,\n              // Xfinity icon is from the Xfinity Brand Press Materials from https://corporate.comcast.com/press/kit\n              icon: xfinityLogo,\n              announce: 'XFinity Logo Wide'\n            },\n            ...Array.apply(null, { length: 8 }).map(() => ({\n              icon: xfinity,\n              announce: 'xfinity'\n            }))\n          ],\n          visibleCount: 3\n        }\n      };\n    }\n  };\n\nWithCustomIconSize.args = sharedArgs;\nWithCustomIconSize.argTypes = sharedArgTypes;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../node_modules/memoizerific sync recursive\";\nmodule.exports = webpackEmptyContext;"],"names":[],"sourceRoot":""}