{"version":3,"file":"components-CardContent-CardContent-stories.64fb23e0.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAYA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwCA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAIA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAIA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAKA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AAGA;AAAA;AAAA;AAAA;AAGA;AAGA;AAAA;AAAA;AAAA;AAOA;AAMA;AAAA;AAVA;AACA;AAAA;AAAA;AAAA;AAzLA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AASA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AA+BA;AACA;AAEA;AAEA;AAEA;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzBA;AACA;AACA;AACA;AACA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/CardContent/CardContent.stories.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/CardContent/CardContent.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/CardContent/CardContent.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/docs/constants.js","webpack://lightning-ui-docs/../../../node_modules/react/cjs/react.production.min.js","webpack://lightning-ui-docs/../../../node_modules/react/index.js"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"ï»¿/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport tileImage from '../../assets/images/tile-image.png';\\nimport CardContentComponent from '.';\\nimport { MetadataCardContent as MetadataStory } from '../MetadataCardContent/MetadataCardContent.stories';\\nimport { createModeControl, generateSubStory } from '../../docs/utils';\\nimport { controlDescriptions } from '../../docs/constants';\\n\\nexport default {\\n  title: 'Components/CardContent/CardContent'\\n};\\n\\nexport const CardContent = args =>\\n  class CardContent extends lng.Component {\\n    static _template() {\\n      return {\\n        CardContent: {\\n          type: CardContentComponent,\\n          src: tileImage,\\n          shouldCollapse: args.shouldCollapse,\\n          orientation: 'horizontal'\\n        }\\n      };\\n    }\\n  };\\n\\nconst tileCategory = 'Tile';\\nCardContent.tileProps = {\\n  argActions: tagName => ({\\n    badge: (badgeTitle, component) => {\\n      component.tag(tagName).tile = {\\n        ...component.tag(tagName).tile,\\n        badge: { title: badgeTitle }\\n      };\\n    },\\n    label: (labelTitle, component) => {\\n      component.tag(tagName).tile = {\\n        ...component.tag(tagName).tile,\\n        label: {\\n          title: labelTitle,\\n          table: { defaultValue: { summary: 'undefined' } }\\n        }\\n      };\\n    },\\n    progress: (progress, component) => {\\n      component.tag(tagName).tile = {\\n        ...component.tag(tagName).tile,\\n        progressBar: { progress }\\n      };\\n    }\\n  })\\n};\\nCardContent.storyName = 'CardContent';\\n\\nCardContent.args = {\\n  shouldCollapse: false,\\n  badge: 'HD',\\n  label: 'Live',\\n  progress: 0.5,\\n  mode: 'focused'\\n};\\n\\nCardContent.argTypes = {\\n  ...createModeControl({ summaryValue: CardContent.args.mode }),\\n  shouldCollapse: {\\n    control: 'boolean',\\n    description: controlDescriptions.shouldCollapse,\\n    table: {\\n      defaultValue: { summary: false }\\n    }\\n  },\\n  badge: {\\n    name: 'title',\\n    control: 'text',\\n    description: 'Badge text',\\n    table: {\\n      category: tileCategory,\\n      subcategory: 'Badge',\\n      defaultValue: { summary: 'undefined' }\\n    }\\n  },\\n  label: {\\n    name: 'title',\\n    control: 'text',\\n    description: 'Text to display in the foreground of the label',\\n    table: {\\n      category: tileCategory,\\n      subcategory: 'Label',\\n      defaultValue: { summary: 'undefined' }\\n    }\\n  },\\n  progress: {\\n    control: {\\n      type: 'range',\\n      min: 0,\\n      max: 1,\\n      step: 0.01\\n    },\\n    description: 'percentage of the current progress from 0 to 1',\\n    table: {\\n      category: tileCategory,\\n      subcategory: 'ProgressBar',\\n      defaultValue: { summary: 0 }\\n    }\\n  }\\n};\\n\\nCardContent.parameters = {\\n  argActions: CardContent.tileProps.argActions('CardContent')\\n};\\ngenerateSubStory({\\n  componentName: 'CardContent',\\n  baseStory: CardContent,\\n  subStory: MetadataStory,\\n  targetProperty: 'metadata',\\n  include: ['title', 'description', 'details', 'visible']\\n});\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"CardContent\": {\n    \"startLoc\": {\n      \"col\": 27,\n      \"line\": 28\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 39\n    },\n    \"startBody\": {\n      \"col\": 27,\n      \"line\": 28\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 39\n    }\n  }\n};\n    \n/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport tileImage from '../../assets/images/tile-image.png';\nimport CardContentComponent from '.';\nimport { MetadataCardContent as MetadataStory } from '../MetadataCardContent/MetadataCardContent.stories';\nimport { createModeControl, generateSubStory } from '../../docs/utils';\nimport { controlDescriptions } from '../../docs/constants';\nexport default {parameters: {\n  \"storySource\": {\n    \"source\": \"/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport tileImage from '../../assets/images/tile-image.png';\\nimport CardContentComponent from '.';\\nimport { MetadataCardContent as MetadataStory } from '../MetadataCardContent/MetadataCardContent.stories';\\nimport { createModeControl, generateSubStory } from '../../docs/utils';\\nimport { controlDescriptions } from '../../docs/constants';\\nexport default {\\n  title: 'Components/CardContent/CardContent'\\n};\\nexport const CardContent = args => class CardContent extends lng.Component {\\n  static _template() {\\n    return {\\n      CardContent: {\\n        type: CardContentComponent,\\n        src: tileImage,\\n        shouldCollapse: args.shouldCollapse,\\n        orientation: 'horizontal'\\n      }\\n    };\\n  }\\n};\\nconst tileCategory = 'Tile';\\nCardContent.tileProps = {\\n  argActions: tagName => ({\\n    badge: (badgeTitle, component) => {\\n      component.tag(tagName).tile = {\\n        ...component.tag(tagName).tile,\\n        badge: {\\n          title: badgeTitle\\n        }\\n      };\\n    },\\n    label: (labelTitle, component) => {\\n      component.tag(tagName).tile = {\\n        ...component.tag(tagName).tile,\\n        label: {\\n          title: labelTitle,\\n          table: {\\n            defaultValue: {\\n              summary: 'undefined'\\n            }\\n          }\\n        }\\n      };\\n    },\\n    progress: (progress, component) => {\\n      component.tag(tagName).tile = {\\n        ...component.tag(tagName).tile,\\n        progressBar: {\\n          progress\\n        }\\n      };\\n    }\\n  })\\n};\\nCardContent.storyName = 'CardContent';\\nCardContent.args = {\\n  shouldCollapse: false,\\n  badge: 'HD',\\n  label: 'Live',\\n  progress: 0.5,\\n  mode: 'focused'\\n};\\nCardContent.argTypes = {\\n  ...createModeControl({\\n    summaryValue: CardContent.args.mode\\n  }),\\n  shouldCollapse: {\\n    control: 'boolean',\\n    description: controlDescriptions.shouldCollapse,\\n    table: {\\n      defaultValue: {\\n        summary: false\\n      }\\n    }\\n  },\\n  badge: {\\n    name: 'title',\\n    control: 'text',\\n    description: 'Badge text',\\n    table: {\\n      category: tileCategory,\\n      subcategory: 'Badge',\\n      defaultValue: {\\n        summary: 'undefined'\\n      }\\n    }\\n  },\\n  label: {\\n    name: 'title',\\n    control: 'text',\\n    description: 'Text to display in the foreground of the label',\\n    table: {\\n      category: tileCategory,\\n      subcategory: 'Label',\\n      defaultValue: {\\n        summary: 'undefined'\\n      }\\n    }\\n  },\\n  progress: {\\n    control: {\\n      type: 'range',\\n      min: 0,\\n      max: 1,\\n      step: 0.01\\n    },\\n    description: 'percentage of the current progress from 0 to 1',\\n    table: {\\n      category: tileCategory,\\n      subcategory: 'ProgressBar',\\n      defaultValue: {\\n        summary: 0\\n      }\\n    }\\n  }\\n};\\nCardContent.parameters = {\\n  argActions: CardContent.tileProps.argActions('CardContent')\\n};\\ngenerateSubStory({\\n  componentName: 'CardContent',\\n  baseStory: CardContent,\\n  subStory: MetadataStory,\\n  targetProperty: 'metadata',\\n  include: ['title', 'description', 'details', 'visible']\\n});\\nCardContent.parameters = {\\n  ...CardContent.parameters,\\n  docs: {\\n    ...CardContent.parameters?.docs,\\n    source: {\\n      originalSource: \\\"args => class CardContent extends lng.Component {\\\\n  static _template() {\\\\n    return {\\\\n      CardContent: {\\\\n        type: CardContentComponent,\\\\n        src: tileImage,\\\\n        shouldCollapse: args.shouldCollapse,\\\\n        orientation: 'horizontal'\\\\n      }\\\\n    };\\\\n  }\\\\n}\\\",\\n      ...CardContent.parameters?.docs?.source\\n    }\\n  }\\n};\",\n    \"locationsMap\": {\n      \"card-content\": {\n        \"startLoc\": {\n          \"col\": 27,\n          \"line\": 28\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 39\n        },\n        \"startBody\": {\n          \"col\": 27,\n          \"line\": 28\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 39\n        }\n      }\n    }\n  }\n,},\n  title: 'Components/CardContent/CardContent'\n};\nexport const CardContent = args => class CardContent extends lng.Component {\n  static _template() {\n    return {\n      CardContent: {\n        type: CardContentComponent,\n        src: tileImage,\n        shouldCollapse: args.shouldCollapse,\n        orientation: 'horizontal'\n      }\n    };\n  }\n};\nconst tileCategory = 'Tile';\nCardContent.tileProps = {\n  argActions: tagName => ({\n    badge: (badgeTitle, component) => {\n      component.tag(tagName).tile = {\n        ...component.tag(tagName).tile,\n        badge: {\n          title: badgeTitle\n        }\n      };\n    },\n    label: (labelTitle, component) => {\n      component.tag(tagName).tile = {\n        ...component.tag(tagName).tile,\n        label: {\n          title: labelTitle,\n          table: {\n            defaultValue: {\n              summary: 'undefined'\n            }\n          }\n        }\n      };\n    },\n    progress: (progress, component) => {\n      component.tag(tagName).tile = {\n        ...component.tag(tagName).tile,\n        progressBar: {\n          progress\n        }\n      };\n    }\n  })\n};\nCardContent.storyName = 'CardContent';\nCardContent.args = {\n  shouldCollapse: false,\n  badge: 'HD',\n  label: 'Live',\n  progress: 0.5,\n  mode: 'focused'\n};\nCardContent.argTypes = {\n  ...createModeControl({\n    summaryValue: CardContent.args.mode\n  }),\n  shouldCollapse: {\n    control: 'boolean',\n    description: controlDescriptions.shouldCollapse,\n    table: {\n      defaultValue: {\n        summary: false\n      }\n    }\n  },\n  badge: {\n    name: 'title',\n    control: 'text',\n    description: 'Badge text',\n    table: {\n      category: tileCategory,\n      subcategory: 'Badge',\n      defaultValue: {\n        summary: 'undefined'\n      }\n    }\n  },\n  label: {\n    name: 'title',\n    control: 'text',\n    description: 'Text to display in the foreground of the label',\n    table: {\n      category: tileCategory,\n      subcategory: 'Label',\n      defaultValue: {\n        summary: 'undefined'\n      }\n    }\n  },\n  progress: {\n    control: {\n      type: 'range',\n      min: 0,\n      max: 1,\n      step: 0.01\n    },\n    description: 'percentage of the current progress from 0 to 1',\n    table: {\n      category: tileCategory,\n      subcategory: 'ProgressBar',\n      defaultValue: {\n        summary: 0\n      }\n    }\n  }\n};\nCardContent.parameters = {\n  argActions: CardContent.tileProps.argActions('CardContent')\n};\ngenerateSubStory({\n  componentName: 'CardContent',\n  baseStory: CardContent,\n  subStory: MetadataStory,\n  targetProperty: 'metadata',\n  include: ['title', 'description', 'details', 'visible']\n});\nCardContent.parameters = {\n  ...CardContent.parameters,\n  docs: {\n    ...CardContent.parameters?.docs,\n    source: {\n      originalSource: \"args => class CardContent extends lng.Component {\\n  static _template() {\\n    return {\\n      CardContent: {\\n        type: CardContentComponent,\\n        src: tileImage,\\n        shouldCollapse: args.shouldCollapse,\\n        orientation: 'horizontal'\\n      }\\n    };\\n  }\\n}\",\n      ...CardContent.parameters?.docs?.source\n    }\n  }\n};","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport Card from '../Card/Card';\nimport utils from '../../utils';\nimport Tile from '../Tile';\nimport MetadataCardContent from '../MetadataCardContent';\nimport * as styles from './CardContent.styles';\n\nexport default class CardContent extends Card {\n  static get __componentName() {\n    return 'CardContent';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  static _template() {\n    return {\n      ...super._template(),\n      Tile: { type: Tile }\n    };\n  }\n\n  static get properties() {\n    return [\n      ...super.properties,\n      'tile',\n      'metadata',\n      'orientation',\n      'collapseToMetadata',\n      'shouldCollapse',\n      'src'\n    ];\n  }\n\n  static get tags() {\n    return [...super.tags, 'Metadata', 'Tile'];\n  }\n\n  static get aliasStyles() {\n    return [\n      { prev: 'expandedW', curr: 'expandedWidth' },\n      { prev: 'expandedH', curr: 'expandedHeight' }\n    ];\n  }\n\n  _update() {\n    this._updateSize();\n    this._updateTile();\n    this._updateRadius();\n    this._updateMetadata();\n    super._update();\n  }\n\n  _updateTitle() {}\n\n  _updateTitlePosition() {}\n\n  _updateTile() {\n    let w = this.style.imageSize.w;\n    let h = this.style.expandedHeight;\n    if (this._orientation !== 'horizontal') {\n      w = this.style.expandedWidth;\n      h = this.style.imageSize.h;\n    }\n\n    // ensure a nested tile artwork src takes precedence over the class's src setter,\n    // but that if src is undefined in both the setter and tile artwork object,\n    // we don't incorrectly pass \"src: undefined\" to the Tile component (and in turn, Artwork)\n    let tile = this.tile;\n    if (this.src) {\n      tile = utils.clone({ src: this.src }, this.tile);\n    }\n\n    this._Tile.patch({\n      w,\n      h,\n      ...tile,\n      persistentMetadata: true,\n      alpha: this._shouldShowTile ? 1 : 0\n    });\n  }\n\n  _updateMetadata() {\n    const metadataPatch = {\n      ...this.metadata,\n      ...this._metadataPosition,\n      ...this._metadataDimensions,\n      mode: this.mode,\n      alpha: this._shouldShowMetadata ? 1 : 0,\n      style: this.style.metadata\n    };\n    if (!this._Metadata) {\n      metadataPatch.type = MetadataCardContent;\n    }\n\n    this.patch({ Metadata: metadataPatch });\n  }\n\n  _updateSize() {\n    let w = this.style.expandedWidth;\n    let h = this.style.expandedHeight;\n    if (this._collapse) {\n      if (this._orientation === 'horizontal') {\n        w = this._collapseW;\n      } else {\n        h = this._collapseH;\n      }\n    }\n    this.w = w;\n    this.h = h;\n  }\n\n  _updateRadius() {\n    const radius =\n      Array.isArray(this.style.radius) && this.style.radius.length === 4\n        ? this.style.radius\n        : Array(4).fill(this.style.radius);\n    let tileRadius = radius;\n\n    if (!this._collapse) {\n      tileRadius =\n        this._orientation === 'horizontal'\n          ? [radius[0], 0, 0, radius[3]]\n          : [radius[0], radius[1], 0, 0];\n    }\n\n    this._Tile.patch({ style: { radius: tileRadius } });\n  }\n\n  _getSrc() {\n    return (\n      (this.tile &&\n        ((this.tile.artwork && this.tile.artwork.src) || this.tile.src)) ||\n      this._src\n    );\n  }\n\n  get _metadataDimensions() {\n    const paddingHorizontal = this.style.paddingHorizontal * 2;\n    const paddingVertical = this.style.paddingVertical * 2;\n\n    let w =\n      this.style.expandedWidth - this.style.imageSize.w - paddingHorizontal;\n    let h = this.style.expandedHeight - paddingVertical;\n\n    if (this.orientation !== 'horizontal') {\n      w = this.style.expandedWidth - paddingHorizontal;\n      h = this.style.expandedHeight - this.style.imageSize.h - paddingVertical;\n    }\n    return { w, h };\n  }\n\n  get _metadataPosition() {\n    const paddingHorizontal = this.style.paddingHorizontal;\n    const paddingVertical = this.style.paddingVertical;\n\n    let x = paddingHorizontal + (this._collapse ? 0 : this.style.imageSize.w);\n    let y = paddingVertical;\n\n    if (this.orientation !== 'horizontal') {\n      x = paddingHorizontal;\n      y = paddingVertical + (this._collapse ? 0 : this.style.imageSize.h);\n    }\n\n    return { x, y };\n  }\n\n  get _shouldShowMetadata() {\n    return !this._collapse || this.collapseToMetadata;\n  }\n\n  get _shouldShowTile() {\n    return !this._collapse || (this._collapse && !this.collapseToMetadata);\n  }\n\n  get _collapse() {\n    return this.shouldCollapse && !this._isFocusedMode;\n  }\n\n  get _collapseW() {\n    return this.collapseToMetadata\n      ? this.style.expandedWidth - this.style.imageSize.w\n      : this.style.imageSize.w;\n  }\n\n  get _collapseH() {\n    return this.collapseToMetadata\n      ? this.style.expandedHeight - this.style.imageSize.h\n      : this.style.imageSize.h;\n  }\n\n  set announce(announce) {\n    super.announce = announce;\n  }\n\n  get announce() {\n    return (\n      this._announce || [\n        this._Metadata && this._Metadata.announce,\n        this._Tile && this._Tile.announce\n      ]\n    );\n  }\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport utils from '../../utils';\n\nexport const base = theme => ({\n  expandedWidth: utils.getWidthByUpCount(theme, 2),\n  expandedHeight: utils.getDimensions(theme, {\n    ratioX: 16,\n    ratioY: 9,\n    upCount: 4\n  }).h,\n  imageSize: {\n    width: utils.getDimensions(theme, { ratioX: 16, ratioY: 9, upCount: 4 }).w,\n    height: utils.getDimensions(theme, { ratioX: 16, ratioY: 9, upCount: 4 }).h\n  },\n  metadata: { descriptionTextStyle: { maxLines: 2 } },\n  paddingVertical: theme.spacer.md * 1.5\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const CATEGORIES = {\n  0: 'Docs',\n  2: 'Collections',\n  4: 'Utilities',\n  8: 'Components',\n  16: 'Patterns',\n  32: 'Templates'\n};\n\n/** Storybook config constants should go in this file */\n\nexport const storySortOrder = [\n  CATEGORIES[0],\n  [\n    'Introduction',\n    'Read Me',\n    'Base',\n    'Contributing',\n    'Lightning Resources',\n    'Theming',\n    [\n      'Overview',\n      'Component Config',\n      'Tones',\n      'Modes',\n      'Extensions',\n      'Subtheming',\n      'Use in Storybook',\n      'Theme Properties',\n      'Hierarchy',\n      'Tutorial'\n    ],\n    'Unit Testing',\n    ['Overview', 'Test Renderer', 'Test Utils', ['makeCreateComponent', '*']]\n  ],\n  CATEGORIES[2],\n  CATEGORIES[4],\n  CATEGORIES[8],\n  CATEGORIES[16],\n  CATEGORIES[32]\n];\n\nexport const controlDescriptions = {\n  collapseToMetadata:\n    'When in unfocused or disabled mode, if shouldCollapse property is true it will collapse the image to metadata (when focused, it will always be expanded)',\n  shouldCollapse:\n    'When in unfocused or disabled mode, if this flag is true metadata will collapse (when focused, it will always be expanded)',\n  fixed:\n    'Stops the width from being calculated dynamically based on content and will instead use the`w` property'\n};\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n"],"names":[],"sourceRoot":""}