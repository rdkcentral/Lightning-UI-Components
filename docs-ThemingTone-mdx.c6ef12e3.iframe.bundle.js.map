{"version":3,"file":"docs-ThemingTone-mdx.c6ef12e3.iframe.bundle.js","mappingsrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/docs/ThemingTone.mdx","webpack://lightning-ui-docs/../../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js","webpack://lightning-ui-docs/../../../node_modules/@storybook/core/dist/components/ sync","webpack://lightning-ui-docs/../../../node_modules/memoizerific/ sync"],"sourcesContent":["\nimport React from 'react';\n\n/*prettier-ignore*/\n/*\nCopyright 2023 Comcast Cable Communications Management, LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nSPDX-License-Identifier: Apache-2.0\n\\*/\n/*prettier-ignore*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/Lightning-UI-Components/Lightning-UI-Components/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.mjs\";\nimport {Meta} from '@storybook/blocks';\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h3: \"h3\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [\"\\n\", \"\\n\", \"\\n\", _jsx(Meta, {\n      title: \"Docs / Theming / Tones\"\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"tone\",\n      children: \"Tone\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Each Lightning-UI component can be displayed in one of three visual modes that are referred to as a tone. All components have three tone options by default: \", _jsx(_components.strong, {\n        children: \"neutral\"\n      }), \", \", _jsx(_components.strong, {\n        children: \"brand\"\n      }), \", and \", _jsx(_components.strong, {\n        children: \"inverse\"\n      }), \".\\nSome components can also utilize status colors, like \", _jsx(_components.strong, {\n        children: \"positive\"\n      }), \", \", _jsx(_components.strong, {\n        children: \"negative\"\n      }), \", \", _jsx(_components.strong, {\n        children: \"caution\"\n      }), \", and \", _jsx(_components.strong, {\n        children: \"info\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Each component has a default tone. For example, Base theme \", _jsx(_components.code, {\n        children: \"Buttons\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"ListItems\"\n      }), \" default to the neutral tone.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A component's tone can be set at the theme or component level. It is also possible to add custom tones.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"theme-level\",\n      children: \"Theme Level\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You may change the default tone across all LUI components by setting this value in your theme file's \", _jsx(_components.code, {\n        children: \"componentConfig\"\n      }), \". For a deeper dive on \", _jsx(_components.code, {\n        children: \"tones\"\n      }), \", see \", _jsx(_components.a, {\n        href: \"?path=/docs/docs-theming-component-config--docs\",\n        children: \"\\\"Component Config\\\"\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For example, if you want to use a brand tone on all \", _jsx(_components.code, {\n        children: \"ProgressBar\"\n      }), \" components, add ProgressBar's tone to \", _jsx(_components.code, {\n        children: \"componentConfig\"\n      }), \":\"]\n    }), \"\\n\", \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"componentConfig: {\\n  ProgressBar: {\\n    tone: 'brand'\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The resulting theme object would look like this:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"// Inside of themes/base/index.js\\nexport default {\\n  color,\\n  layout,\\n  spacing,\\n  radius,\\n  typography,\\n  animation,\\n  componentConfig: {\\n    ProgressBar: {\\n      tone: 'neutral'\\n    }\\n  }\\n};\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In this example, \", _jsx(_components.strong, {\n        children: \"all\"\n      }), \" \", _jsx(_components.code, {\n        children: \"ProgressBar\"\n      }), \" components will be using the neutral tone.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"component-level\",\n      children: \"Component Level\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You may also update this value on a per component basis by setting its tone property. For example:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"MyComponent: {\\n  type: ProgressBar,\\n  tone: 'inverse'\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In this example, \", _jsx(_components.strong, {\n        children: \"only\"\n      }), \" MyComponent's \", _jsx(_components.code, {\n        children: \"ProgressBar\"\n      }), \" will use the inverse tone.\"]\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../node_modules/@storybook/core/dist/components sync recursive\";\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../node_modules/memoizerific sync recursive\";\nmodule.exports = webpackEmptyContext;"],"names":[],"sourceRoot":""}