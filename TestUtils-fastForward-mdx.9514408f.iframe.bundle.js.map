{"version":3,"file":"TestUtils-fastForward-mdx.9514408f.iframe.bundle.js","mappingsnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components-test-utils/src/docs/TestUtils/fastForward.mdx","webpack://lightning-ui-docs/../../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js","webpack://lightning-ui-docs/../../../node_modules/@storybook/core/dist/components/ sync","webpack://lightning-ui-docs/../../../node_modules/memoizerific/ sync"],"sourcesContent":["\nimport React from 'react';\n\n/*prettier-ignore*/\n/*\nCopyright 2023 Comcast Cable Communications Management, LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nSPDX-License-Identifier: Apache-2.0\n\\*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/Lightning-UI-Components/Lightning-UI-Components/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.mjs\";\nimport {Meta} from '@storybook/blocks';\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h5: \"h5\",\n    p: \"p\",\n    pre: \"pre\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [\"\\n\", \"\\n\", \"\\n\", _jsx(Meta, {\n      title: \"Docs / Unit Testing / Test Utils / fastForward\"\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"fastforward\",\n      children: \"fastForward\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Force all running Lightning Transitions on one or more Lightning Elements to finish and update the transitioning property to its target value immediately.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This function is similar to \", _jsx(_components.a, {\n        href: \"/story/docs-unit-testing-test-utils-completeanimation--page\",\n        children: \"completeAnimation\"\n      }), \" in that it allows testing transitioning properties. Unlike \", _jsx(_components.code, {\n        children: \"completeAnimation\"\n      }), \", \", _jsx(_components.code, {\n        children: \"fastForward\"\n      }), \" is not asynchronous, and does result in all running transitions to complete. If a test requires awaiting specific properties to finish transitioning, \", _jsx(_components.code, {\n        children: \"completeAnimation\"\n      }), \" is the recommended utility function. The \", _jsx(_components.code, {\n        children: \"fastForward\"\n      }), \" function forces transitions to finish, but does not wait for the template to update before proceeding through the test function. To ensure the template has updated following a call to \", _jsx(_components.code, {\n        children: \"fastForward\"\n      }), \", invoke \", _jsx(_components.a, {\n        href: \"/story/docs-unit-testing-test-renderer-overview--page\",\n        children: _jsx(_components.code, {\n          children: \"testRenderer.update()\"\n        })\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"arguments\",\n      children: \"Arguments\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.code, {\n        children: \"fastForward(elements)\"\n      })\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"argument\"\n          }), _jsx(_components.th, {\n            children: \"type\"\n          }), _jsx(_components.th, {\n            children: \"default\"\n          }), _jsx(_components.th, {\n            children: \"description\"\n          })]\n        })\n      }), _jsx(_components.tbody, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"elements\"\n          }), _jsx(_components.td, {\n            children: \"Array<Lightning.Element> | Lightning.Element\"\n          }), _jsx(_components.td, {\n            children: \"-\"\n          }), _jsx(_components.td, {\n            children: \"element(s) with transitioning property values\"\n          })]\n        })\n      })]\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(_components.h5, {\n      id: \"example-forcing-running-transitions-to-finish-before-testing-the-result\",\n      children: \"Example: Forcing running Transitions to finish before testing the result\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"import lng from '@lightningjs/core';\\nimport {\\n  makeCreateComponent,\\n  fastForward\\n} from '@lightningjs/ui-components-test-utils';\\n\\nclass Example extends lng.Component {\\n  static _template() {\\n    const square = {\\n      rect: true,\\n      w: 100,\\n      h: 100,\\n      x: 0,\\n      y: 0,\\n      color: 0xeeeeeeee\\n    };\\n    return {\\n      TransitioningRectA: square,\\n      TransitioningRectB: square\\n    };\\n  }\\n\\n  set axisPosition(value) {\\n    this._axisPosition = value;\\n    this.tag('TransitioningRectA').setSmooth('x', value);\\n    this.tag('TransitioningRectB').setSmooth('y', value);\\n  }\\n\\n  get axisPosition() {\\n    return this._axisPosition;\\n  }\\n}\\n\\n// generate a createComponent function to use in tests\\nconst createExampleComponent = makeCreateComponent(Example);\\n\\n// Ex. force all running transitions to complete, then test the result\\nit('should transition the x value of the component', () => {\\n  const [example, testRenderer] = createExampleComponent();\\n  expect(example.tag('TransitioningRectA').x).toBe(0);\\n  expect(example.tag('TransitioningRectB').y).toBe(0);\\n\\n  //\\n  example.axisPosition = 50;\\n  const rectA = example.tag('TransitioningRectA');\\n  const rectB = example.tag('TransitioningRectB');\\n  fastForward([rectA, rectB]);\\n  testRenderer.update();\\n\\n  expect(example.tag('TransitioningRectA').x).toBe(50);\\n  expect(example.tag('TransitioningRectB').y).toBe(50);\\n});\\n\"\n      })\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../node_modules/@storybook/core/dist/components sync recursive\";\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../node_modules/memoizerific sync recursive\";\nmodule.exports = webpackEmptyContext;"],"names":[],"sourceRoot":""}