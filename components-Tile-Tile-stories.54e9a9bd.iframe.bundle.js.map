{"version":3,"file":"components-Tile-Tile-stories.54e9a9bd.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAGA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAtDA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAGA;AAGA;AAAA;AACA;AAGA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AASA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAGA;AAOA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAMA;AAGA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;ACvNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;AC3IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;AC3HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;AChIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Surface/Surface.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Surface/Surface.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/docs/utils.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Artwork/Artwork.stories.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Badge/Badge.stories.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Checkbox/Checkbox.stories.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Label/Label.stories.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/MetadataTile/MetadataTile.stories.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/ProgressBar/ProgressBar.stories.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Tile/Tile.stories.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/mixins/withLayout/withLayout.stories.js"],"sourcesContent":["/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const base = theme => ({\n  backgroundColor: theme.color.interactiveNeutral,\n  radius: theme.radius.md,\n  animation: {}\n});\n\nexport const tone = theme => ({\n  inverse: {\n    backgroundColor: theme.color.interactiveInverse\n  }\n});\n\nexport const mode = theme => ({\n  focused: {\n    backgroundColor: theme.color.interactiveNeutralFocus,\n    tone: {\n      inverse: {\n        backgroundColor: theme.color.interactiveInverseFocus\n      }\n    }\n  },\n  disabled: {\n    backgroundColor: theme.color.fillNeutralDisabled\n  }\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { getMaxRoundRadius } from '../../utils';\nimport Base from '../Base';\nimport * as styles from './Surface.styles';\nimport lng from '@lightningjs/core';\n\nexport default class Surface extends Base {\n  static _template() {\n    return {\n      Background: {}\n    };\n  }\n\n  static get __componentName() {\n    return 'Surface';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  static get properties() {\n    return [];\n  }\n\n  static get tags() {\n    return ['Background'];\n  }\n\n  get innerH() {\n    return this.h;\n  }\n\n  get innerW() {\n    return this.w;\n  }\n\n  _update() {\n    this._updateLayout();\n    this._updateScale();\n  }\n\n  _updateLayout() {\n    this._Background.patch({\n      texture: lng.Tools.getRoundRect(\n        this.innerW - 2, // Reference the underscored values here in cause the h or w getters need to be overwritten for alignment - see Tile\n        this.innerH - 2,\n        getMaxRoundRadius(this.style.radius, this.w, this.h),\n        0,\n        null,\n        true,\n        this.style.backgroundColor\n      )\n    });\n  }\n\n  _updateScale() {\n    const scale = this._isFocusedMode\n      ? this.getFocusScale(this.w, this.h)\n      : this.getUnfocusScale(this.w, this.h);\n\n    this.applySmooth(this, { scale }, { scale: [scale, this.style.animation] });\n  }\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport utils from '../utils';\n\n// creates Mode control on stories\nexport const createModeControl = ({ options, summaryValue } = {}) => {\n  return {\n    mode: {\n      control: 'radio',\n      options:\n        options && Array.isArray(options)\n          ? ['unfocused', ...options]\n          : ['unfocused', 'focused', 'disabled'],\n      description: 'Sets the visual mode for the component',\n      table: {\n        defaultValue: { summary: summaryValue }\n      },\n      type: { name: 'string', required: true }\n    }\n  };\n};\n\n/**\n * @param {object} config Parameters for generating nested args: { argsObj, targetProp, include, overrides }\n */\nexport function nestedArgs(config) {\n  const { argsObj, targetProp, include, overrides } = config;\n  return Object.keys(argsObj).reduce((acc, curr) => {\n    if (!include.includes(curr)) return acc;\n    return {\n      ...acc,\n      [targetProp + '_' + curr]:\n        (overrides.args && overrides.args[curr]) || argsObj[curr]\n    };\n  }, {});\n}\n\n/**\n * @param {object} config Parameters for generating nested arg types: { argsObj, targetProp, include, overrides }\n */\nexport function nestedArgTypes(config) {\n  const { argTypesObj, targetProp, include, overrides } = config;\n  return Object.keys(argTypesObj).reduce((acc, curr) => {\n    if (!include.includes(curr)) return acc;\n    return {\n      ...acc,\n      [targetProp + '_' + curr]: {\n        // Namespaced to avoid conflicts\n        name: curr,\n        ...argTypesObj[curr],\n        ...overrides[curr],\n        table: {\n          ...(argTypesObj[curr].table || {}),\n          ...(overrides[curr] && overrides[curr].table),\n          category: targetProp\n        }\n      }\n    };\n  }, {});\n}\n\nexport const prevValues = {};\n\n/**\n * @param {object} config Parameters for generating nested arg actions: { componentName, argsTypeObj, targetProp, include, overrides }\n */\nexport function nestedArgActions(config) {\n  const { componentName, argTypesObj, targetProp, include, overrides } = config;\n  return Object.keys(argTypesObj).reduce((acc, curr) => {\n    if (!include.includes(curr)) return acc;\n    return {\n      ...acc,\n      [targetProp + '_' + curr]: (value, component) => {\n        component.tag(componentName).patch({\n          [targetProp]: {\n            ...prevValues[targetProp],\n            [curr.replace(targetProp + '_', '')]:\n              value === 'none'\n                ? undefined\n                : (overrides && overrides[curr]) || value // There are issues with merging objects here\n          }\n        });\n        // Allow patching to work with nested objects\n        if (!prevValues[targetProp]) {\n          prevValues[targetProp] = {};\n        }\n        prevValues[targetProp][curr.replace(targetProp + '_', '')] =\n          value === 'none'\n            ? undefined\n            : (overrides && overrides[curr]) || value;\n      }\n    };\n  }, {});\n}\n\n/**\n * @param {object} config Parameters for generating story: { componentName, baseStory, subStory, targetProperty, include, options }\n */\nexport function generateSubStory(config) {\n  config.baseStory.args = {\n    ...config.baseStory.args,\n    ...nestedArgs({\n      argsObj: config.subStory.args || {},\n      targetProp: config.targetProperty,\n      include: config.include,\n      overrides: (config.overrides && config.overrides.args) || {}\n    })\n  };\n\n  config.baseStory.argTypes = {\n    ...config.baseStory.argTypes,\n    ...nestedArgTypes({\n      argTypesObj: config.subStory.argTypes || {},\n      targetProp: config.targetProperty,\n      include: config.include,\n      overrides: (config.overrides && config.overrides.argTypes) || {}\n    })\n  };\n\n  if (\n    !(\n      config.baseStory &&\n      config.baseStory.parameters &&\n      config.baseStory.parameters.argActions\n    )\n  ) {\n    config.baseStory.parameters = {\n      argActions: {}\n    };\n  }\n\n  config.baseStory.parameters.argActions = {\n    ...config.baseStory.parameters.argActions,\n    ...nestedArgActions({\n      componentName: config.componentName,\n      argTypesObj: config.subStory.argTypes || {},\n      targetProp: config.targetProperty,\n      include: config.include,\n      overrides: (config.overrides && config.overrides.argActions) || {}\n    })\n  };\n}\n\n// used to create links to Lightning docs given an id\nexport const DocsLink = ({ children, id }) => {\n  const docsmap = {\n    lng: {\n      _base: 'https://rdkcentral.github.io/Lightning/docs',\n      Component: '/components/overview',\n      Text: '/textures/text',\n      Transition: '/transitions/attributes'\n    }\n  };\n  const [source, path] = id.split('.');\n  const href = docsmap[source]._base + docsmap[source][path];\n  return (\n    <a href={href} target=\"_blank\">\n      {children || id}\n    </a>\n  );\n};\n\nexport const Item = ({ children }) => children;\n\n/**\n * Creates formatted object for markdown prop tables\n * see Column and Row stories\n * @param {object} props\n * @param {object} props.type - TS-style generic/utility type\n */\nexport const ObjectFormat = ({ object }) => {\n  return [\n    '{',\n    <br />,\n    '  ',\n    ...utils.flatten(\n      Object.entries(object).map(([k, v]) => [\n        <span>&nbsp;&nbsp;</span>,\n        `${k}: `,\n        v,\n        ',',\n        <br />\n      ])\n    ),\n    '}'\n  ].map((x, i) => <Item key={i}>{x}</Item>);\n};\n\n/**\n * Formats TS-style generic types\n * See Columns and Row stories\n * @param {object} props\n * @param {object} props.children - component children\n * @param {string} props.type - Name of generic type\n */\nexport const GenericType = ({ children, type }) => {\n  return [type, '<', children, '>'].map((x, i) => <Item key={i}>{x}</Item>);\n};\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport { default as ArtworkComponent } from '.';\n\nexport default {\n  title: 'Components/Artwork'\n};\n\nexport const Artwork = () =>\n  class Artwork extends lng.Component {\n    static _template() {\n      return {\n        Artwork: {\n          type: ArtworkComponent,\n          itemLayout: {\n            ratioX: 16,\n            ratioY: 9,\n            upCount: 3\n          }\n        }\n      };\n    }\n  };\n\nArtwork.args = {\n  blur: false,\n  foregroundSrc: false,\n  gradient: false,\n  format: 'default',\n  srcCallback: false,\n  fill: false,\n  shouldScale: false\n};\n\nArtwork.argTypes = {\n  format: {\n    control: 'radio',\n    options: ['default', 'circle', 'square', 'contain'],\n    description: 'Updates the treatment of src image',\n    table: {\n      defaultValue: { summary: 'default' }\n    }\n  },\n  blur: {\n    control: 'boolean',\n    description: 'Adds blur effect to image',\n    table: {\n      defaultValue: { summary: false }\n    }\n  },\n  gradient: {\n    control: 'boolean',\n    description: 'Adds gradient to artwork area',\n    table: {\n      defaultValue: { summary: false }\n    }\n  },\n  foregroundSrc: {\n    control: 'select',\n    options: [\n      'none',\n      'https://image.tmdb.org/t/p/w500/uBZlZ8yN3zScGIsbIRnyWg14JeM.png'\n    ],\n    description: 'Image to be displayed on top of artwork',\n    table: {\n      defaultValue: { summary: 'undefined' }\n    }\n  },\n  srcCallback: {\n    control: 'boolean',\n    description:\n      'This property can be supplied with your own custom callback function to generate the src value. The values passed back into the srcCallback can help you make the proper request from a service for the image that will best fit your artwork space.',\n    table: {\n      defaultValue: { summary: 'undefined' }\n    }\n  },\n  fill: {\n    control: 'boolean',\n    description: 'When true it will apply opacity on the image',\n    table: {\n      defaultValue: { summary: false }\n    }\n  },\n  shouldScale: {\n    control: 'boolean',\n    description:\n      'When true it will scale the image to the value specified by the imageScale property',\n    table: {\n      defaultValue: { summary: false }\n    }\n  }\n};\n\nArtwork.parameters = {\n  argActions: {\n    foregroundSrc: (foregroundSrc, component) => {\n      component.tag('Artwork').foregroundSrc =\n        'none' !== foregroundSrc ? foregroundSrc : undefined;\n    },\n    srcCallback: (active, component) => {\n      if (active) {\n        // Accepts a regular function or function that returns a promise\n        component.tag('Artwork').patch({\n          src: 'https://image.tmdb.org/t/p/w500/sWgBv7LV2PRoQgkxwlibdGXKz1S.jpg',\n          srcCallback: () => {\n            return new Promise(resolve => {\n              setTimeout(() => {\n                resolve(\n                  'https://image.tmdb.org/t/p/w500/o7qi2v4uWQ8bZ1tW3KI0Ztn2epk.jpg'\n                );\n              }, 500);\n            });\n          }\n        });\n      } else {\n        component.tag('Artwork').patch({\n          src: 'https://image.tmdb.org/t/p/w500/sWgBv7LV2PRoQgkxwlibdGXKz1S.jpg',\n          srcCallback: undefined\n        });\n      }\n    }\n  }\n};\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport Badge from '.';\nimport lightning from '../../assets/images/ic_lightning_white_32.png';\nimport circle from '../../assets/images/circle.svg';\n\nexport default {\n  title: 'Components/Badge'\n};\n\nexport const Text = args =>\n  class Basic extends lng.Component {\n    static _template() {\n      return {\n        Badge: {\n          type: Badge,\n          title: args.title\n        }\n      };\n    }\n  };\nText.args = {\n  title: 'HD'\n};\nText.argTypes = {\n  title: {\n    description: 'Badge text',\n    control: 'text',\n    table: {\n      defaultValue: { summary: 'undefined' }\n    }\n  }\n};\n\nexport const IconSVG = () =>\n  class Basic extends lng.Component {\n    static _template() {\n      return {\n        Badge: {\n          type: Badge,\n          icon: circle,\n          iconWidth: 24,\n          title: 'HD'\n        }\n      };\n    }\n  };\nIconSVG.args = {\n  iconAlign: 'left'\n};\n\nIconSVG.argTypes = {\n  iconAlign: {\n    control: 'select',\n    options: ['left', 'right'],\n    description: 'Side of the text the icon will appear on',\n    table: {\n      defaultValue: { summary: 'undefined' }\n    }\n  }\n};\nexport const IconPNG = () =>\n  class Basic extends lng.Component {\n    static _template() {\n      return {\n        Badge: {\n          type: Badge,\n          icon: lightning\n        }\n      };\n    }\n  };\n\nexport const TextWithIcon = () =>\n  class Basic extends lng.Component {\n    static _template() {\n      return {\n        Badge: {\n          type: Badge,\n          icon: lightning\n        }\n      };\n    }\n  };\n\nTextWithIcon.args = {\n  title: 'HD',\n  iconAlign: 'left'\n};\n\nTextWithIcon.argTypes = {\n  iconAlign: {\n    control: 'select',\n    options: ['left', 'right'],\n    description: 'Side of the text the icon will appear on',\n    table: {\n      defaultValue: { summary: 'undefined' }\n    }\n  },\n  title: {\n    control: 'text',\n    description: 'Badge text',\n    table: {\n      defaultValue: { summary: 'undefined' }\n    }\n  }\n};\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport { default as CheckboxComponent } from '.';\nimport { createModeControl } from '../../docs/utils';\n\nexport default {\n  title: 'Components/Checkboxes/Checkbox'\n};\n\nexport const Checkbox = () =>\n  class Checkbox extends lng.Component {\n    static _template() {\n      return {\n        Checkbox: {\n          type: CheckboxComponent\n        }\n      };\n    }\n  };\n\nCheckbox.args = {\n  checked: false,\n  mode: 'focused'\n};\n\nCheckbox.argTypes = {\n  ...createModeControl({ summaryValue: 'focused' }),\n  checked: {\n    control: 'boolean',\n    description: 'Toggles checked between on and off',\n    table: {\n      defaultValue: { summary: false }\n    }\n  }\n};\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport { default as LabelComponent } from '.';\n\nexport default {\n  title: 'Components/Label'\n};\n\nexport const Label = () =>\n  class Label extends lng.Component {\n    static _template() {\n      return {\n        Label: {\n          type: LabelComponent\n        }\n      };\n    }\n  };\nLabel.args = {\n  title: 'Label'\n};\nLabel.argTypes = {\n  title: {\n    control: 'text',\n    description: 'Text to display in the foreground of the label',\n    table: {\n      defaultValue: { summary: 'undefined' }\n    }\n  }\n};\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport lightningbolt from '../../assets/images/ic_lightning_white_32.png';\nimport circle from '../../assets/images/circle.svg';\nimport { getHexColor } from '../../utils';\nimport { createModeControl } from '../../docs/utils';\nimport { default as MetadataTileComponent } from '.';\n\nexport default {\n  title: 'Components/MetadataTile'\n};\n\nexport const MetadataTile = args =>\n  class MetadataTile extends lng.Component {\n    static _template() {\n      return {\n        MetadataTile: {\n          type: MetadataTileComponent,\n          w: args.w,\n          title: args.title,\n          details: args.details,\n          description: args.description,\n          logo: args.logo !== 'none' ? circle : null,\n          logoTitle: args.logo !== 'none' ? args.logoTitle : null,\n          logoPosition: args.logoPosition\n        }\n      };\n    }\n\n    _getFocused() {\n      return this.tag('MetadataTile');\n    }\n  };\n\nMetadataTile.storyName = 'MetadataTile';\n\nMetadataTile.args = {\n  w: 400,\n  title: 'Title',\n  details: [\n    '94%',\n    {\n      icon: lightningbolt,\n      style: { color: getHexColor('00ff00') },\n      title: 'Green Lightning Bolt'\n    },\n    '86%',\n    {\n      icon: 'http://myriad.merlin.comcast.com/select/logo?entityId=8527084350383982239&width=32&height=&ratio=1x1&trim=false',\n      title: 'Rotten Tomatoes rating'\n    }\n  ],\n  description: 'Description',\n  logo: circle,\n  logoTitle: 'Logo title',\n  logoPosition: 'right',\n  mode: 'unfocused'\n};\n\nMetadataTile.argTypes = {\n  ...createModeControl({ summaryValue: MetadataTile.args.mode }),\n  w: {\n    control: 'number',\n    description: 'Width of component',\n    table: {\n      defaultValue: { summary: 0 }\n    }\n  },\n  title: {\n    control: 'text',\n    description: 'Title text',\n    table: {\n      defaultValue: { summary: 'undefined' }\n    }\n  },\n  details: {\n    control: 'object',\n    table: {\n      defaultValue: { summary: 'undefined' }\n    }\n  },\n  description: {\n    control: 'text',\n    description: 'description text',\n    table: {\n      defaultValue: { summary: 'undefined' }\n    }\n  },\n  logo: {\n    control: 'select',\n    options: ['none', circle],\n    description: 'Image to use for logo',\n    table: {\n      defaultValue: { summary: 'undefined' }\n    }\n  },\n  logoTitle: {\n    control: 'text',\n    description: 'Title to use for logo in announcer',\n    table: {\n      defaultValue: { summary: 'undefined' }\n    }\n  },\n  logoPosition: {\n    control: 'select',\n    options: ['right', 'left'],\n    description: 'Position logo on the left/right side',\n    table: {\n      defaultValue: { summary: 'right' }\n    }\n  }\n};\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport { default as ProgressBarComponent } from '.';\n\nexport default {\n  title: 'Components/ProgressBar',\n  parameters: {\n    tag: 'ProgressBar',\n    actions: {\n      handles: ['mouseover', 'click .btn']\n    }\n  }\n};\n\nexport const ProgressBar = () =>\n  class ProgressBar extends lng.Component {\n    static _template() {\n      return {\n        ProgressBar: {\n          type: ProgressBarComponent\n        }\n      };\n    }\n  };\nProgressBar.storyName = 'ProgressBar';\nProgressBar.args = {\n  progress: 0.5,\n  w: 410\n};\nProgressBar.argTypes = {\n  progress: {\n    control: {\n      type: 'range',\n      min: 0,\n      max: 1,\n      step: 0.01\n    },\n    description: 'Percentage of the current progress from 0 to 1',\n    table: { defaultValue: { summary: 0 } }\n  },\n  w: {\n    control: {\n      type: 'range',\n      min: 0,\n      max: 600,\n      step: 0.01\n    },\n    description: 'width of the entire bar',\n    table: { defaultValue: { summary: 0 } }\n  }\n};\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport { default as TileComponent } from '.';\nimport { createModeControl, generateSubStory } from '../../docs/utils';\nimport { Artwork as ArtworkStory } from '../Artwork/Artwork.stories';\nimport { Checkbox as CheckboxStory } from '../Checkbox/Checkbox.stories';\nimport { MetadataTile as MetadataTileStory } from '../MetadataTile/MetadataTile.stories';\nimport { withLayout as ItemLayoutStory } from '../../mixins/withLayout/withLayout.stories';\nimport { Label as LabelStory } from '../Label/Label.stories';\nimport { ProgressBar as ProgressBarStory } from '../ProgressBar/ProgressBar.stories';\nimport { Text as BadgeStory } from '../Badge/Badge.stories';\nimport xfinityLogo from '../../assets/images/Xfinity-Provider-Logo-2x1.png';\n\nexport default {\n  title: 'Components/Tile'\n};\n\nexport const Tile = () =>\n  class Tile extends lng.Component {\n    static _template() {\n      return {\n        Tile: {\n          type: TileComponent,\n          itemLayout: {\n            ratioX: 16,\n            ratioY: 9,\n            upCount: 3\n          },\n          artwork: {\n            src: 'https://image.tmdb.org/t/p/w500/zHdQ6yaqDf3OQO5uhr0auAgwK6O.jpg'\n          }\n        }\n      };\n    }\n  };\n\nTile.args = {\n  metadataLocation: 'standard',\n  logo: xfinityLogo,\n  persistentMetadata: false,\n  mode: 'focused'\n};\n\nTile.argTypes = {\n  ...createModeControl({ summaryValue: Tile.args.mode }),\n  persistentMetadata: {\n    control: 'boolean',\n    description: 'Show metadata if exists regardless of focusState',\n    table: {\n      defaultValue: { summary: false }\n    }\n  },\n  metadataLocation: {\n    control: 'radio',\n    options: ['standard', 'inset'],\n    description:\n      'Controls where metadata is positioned in relationship to the Tile',\n    table: {\n      defaultValue: { summary: 'standard' }\n    }\n  },\n  logo: {\n    control: 'select',\n    options: [xfinityLogo, null],\n    description: 'Icon source',\n    table: {\n      defaultValue: { summary: 'undefined' }\n    }\n  }\n};\n\ngenerateSubStory({\n  componentName: 'Tile',\n  baseStory: Tile,\n  subStory: MetadataTileStory,\n  targetProperty: 'metadata',\n  include: ['title', 'description']\n});\ngenerateSubStory({\n  componentName: 'Tile',\n  baseStory: Tile,\n  subStory: ItemLayoutStory,\n  targetProperty: 'itemLayout',\n  include: ['ratioX', 'ratioY', 'upCount', 'circle']\n});\ngenerateSubStory({\n  componentName: 'Tile',\n  baseStory: Tile,\n  subStory: BadgeStory,\n  targetProperty: 'badge',\n  include: ['title']\n});\ngenerateSubStory({\n  componentName: 'Tile',\n  baseStory: Tile,\n  subStory: LabelStory,\n  targetProperty: 'label',\n  include: ['title']\n});\ngenerateSubStory({\n  componentName: 'Tile',\n  baseStory: Tile,\n  subStory: ArtworkStory,\n  targetProperty: 'artwork',\n  include: ['blur', 'foregroundSrc', 'format', 'fill']\n});\ngenerateSubStory({\n  componentName: 'Tile',\n  baseStory: Tile,\n  subStory: ProgressBarStory,\n  targetProperty: 'progressBar',\n  include: ['progress']\n});\ngenerateSubStory({\n  componentName: 'Tile',\n  baseStory: Tile,\n  subStory: CheckboxStory,\n  targetProperty: 'checkbox',\n  include: ['checked']\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport Tile from '../../components/Tile';\n\nexport default {\n  title: 'Utilities/withLayout'\n};\n\nexport const withLayout = () => {\n  return class withLayout extends lng.Component {\n    static _template() {\n      return {\n        Item: {\n          type: Tile,\n          artwork: {\n            src: 'https://image.tmdb.org/t/p/w500/frwl2zBNAl5ZbFDJGoJv0mYo0rF.jpg',\n            mode: 'contain'\n          }\n        }\n      };\n    }\n  };\n};\n\nwithLayout.storyName = 'withLayout';\n\nwithLayout.args = {\n  ratioX: 16,\n  ratioY: 9,\n  upCount: 3,\n  circle: false\n};\n\nwithLayout.argTypes = {\n  ratioX: {\n    control: { type: 'number', min: 0 },\n    description: 'The units of x resolution relative to the screen height',\n    table: { defaultValue: { summary: 0 } }\n  },\n  ratioY: {\n    control: { type: 'number', min: 0 },\n    description: 'The units of y resolution relative to the screen width',\n    table: { defaultValue: { summary: 0 } }\n  },\n  upCount: {\n    control: { type: 'number', min: 0 },\n    description:\n      'The number of items that should be displayed within screen bounds',\n    table: { defaultValue: { summary: 0 } }\n  },\n  circle: {\n    control: 'boolean',\n    description: 'Boolean changing format to circle if true',\n    table: { defaultValue: { summary: false } }\n  }\n};\n\nwithLayout.parameters = {\n  argActions: Object.keys(withLayout.args).reduce((acc, curr) => {\n    return {\n      ...acc,\n      [curr]: (val, component) => {\n        component.tag('Item').itemLayout = {\n          ...component.tag('Item').itemLayout,\n          [curr]: val\n        };\n      }\n    };\n  }, {})\n};\n"],"names":[],"sourceRoot":""}