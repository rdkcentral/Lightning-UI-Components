---
# ATTENTION
# =========
# Any changes to this file require running the following fly CLI command
# fly -t ci set-pipeline -p lightning-ui --config ci/pipeline.yml --load-vars-from ci/values.yml

# ^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^
# ANCHORS: Reusing data
# ^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^

pullRequestNotificationSuccess: &pullRequestNotificationSuccess
  put: source-repo-pr
  params:
    path: source-repo-pr
    status: success

pullRequestNotificationFailure: &pullRequestNotificationFailure
  put: source-repo-pr
  params:
    path: source-repo-pr
    status: failure

pullRequestNotificationSuccess4x: &pullRequestNotificationSuccess4x
  put: source-repo-4x-pr
  params:
    path: source-repo-4x-pr
    status: success

pullRequestNotificationFailure4x: &pullRequestNotificationFailure4x
  put: source-repo-4x-pr
  params:
    path: source-repo-4x-pr
    status: failure

task-config: &task-config
  platform: linux
  image_resource:
    type: docker-image
    source:
      repository: node
      tag: 16.9.1

slack_params_feature: &slack_params_feature
  channel: "#lui-automation-reports"
  username: "Concourse_LUI_Sanity_VRT_Parallel_Results"
  icon_emoji: ":concourse:"

# ^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^
# Resource Types: https://concourse-ci.org/resource-types.html
# ^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^

resource_types:
  - name: pull-request
    type: docker-image
    source:
      repository: teliaoss/github-pr-resource

  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest

# ^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^
# Resource: https://concourse-ci.org/resources.html
# ^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^

resources:
  # 5.x
  - name: source-repo
    type: git
    webhook_token: ((webhook-token))
    check_every: 168h
    source:
      branch: release
      private_key: ((github-enterprise.private-key))
      uri: ((ghe-source-repo))

  - name: source-repo-pr
    type: pull-request
    icon: source-pull
    webhook_token: ((webhook-token))
    check_every: 168h
    source:
      base_branch: develop
      repository: ((ghe-org-name))/((ghe-repo-name))
      disable_forks: false
      access_token: ((ghe-token))
      v3_endpoint: https://github.comcast.com/api/v3/
      v4_endpoint: https://github.comcast.com/api/graphql

  - name: source-repo-develop
    type: git
    webhook_token: ((webhook-token))
    check_every: 168h
    source:
      branch: develop
      private_key: ((github-enterprise.private-key))
      uri: ((ghe-source-repo))

  # 4.x

  - name: source-repo-4x
    type: git
    webhook_token: ((webhook-token))
    check_every: 168h
    source:
      branch: 4.x
      private_key: ((github-enterprise.private-key))
      uri: ((ghe-source-repo))

  - name: source-repo-4x-pr
    type: pull-request
    icon: source-pull
    webhook_token: ((webhook-token))
    check_every: 168h
    source:
      base_branch: 4.x
      repository: ((ghe-org-name))/((ghe-repo-name))
      disable_forks: false
      access_token: ((ghe-token))
      v3_endpoint: https://github.comcast.com/api/v3/
      v4_endpoint: https://github.comcast.com/api/graphql

  - name: docs-cf-app
    type: cf
    source:
      api: https://api.ame1-g2.cf.comcast.net
      username: ((service-account.artifactory-username))
      password: ((service-account.password))
      organization: xd-prototype
      space: lui

  # Misc
  - name: lui-slack-notification
    type: slack-notification
    source:
      url: ((automation.lightning-ui-slack-webhook-url))

  - name: automation-slack-notification
    type: slack-notification
    source:
      url: ((lui-automation.slack-webhook-url))

  - name: once-every-weekday
    type: time
    check_every: 1h
    source:
      start: 7:30 AM
      stop: 8:30 AM
      days: [Monday, Tuesday, Wednesday, Thursday, Friday]
      location: America/New_York

# ^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^
# Groups: https://concourse-ci.org/pipeline-groups.html
# ^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^

groups:
  - name: overview
    jobs:
      - pull-request
      - publish
      - docs-staging
      - pull-request-4x
      - docs-4x
      - publish-4x
  - name: pull-requests
    jobs:
      - pull-request
      - pull-request-4x
  - name: cypress-sanity-tests 
    jobs:
      - run-cypress-sanity-vrt-tests

  # ^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^
  # Jobs: https://concourse-ci.org/jobs.html
  # ^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^V^

jobs:
  # 5.x
  - name: pull-request
    public: true
    build_logs_to_retain: 50
    serial: true
    on_success:
      do:
        - <<: *pullRequestNotificationSuccess
    on_abort:
      do:
        - <<: *pullRequestNotificationFailure
    on_failure:
      do:
        - <<: *pullRequestNotificationFailure
    on_error:
      do:
        - <<: *pullRequestNotificationFailure
    plan:
      - get: source-repo-pr
        trigger: true
      - put: source-repo-pr
        params:
          path: source-repo-pr
          status: pending
      - task: pr-verify
        file: source-repo-pr/ci/tasks/detect_commit_and_pr_ids.yml
        input_mapping:
          source-repo: source-repo-pr
      - task: install
        file: source-repo-pr/ci/tasks/install.yml
        input_mapping:
          source-repo: source-repo-pr
      - in_parallel:
          - task: test-monorepo
            file: source-repo-pr/ci/tasks/unit-test.yml
            input_mapping:
              source-repo: source-repo-ready
          - task: code-quality-monorepo
            file: source-repo-pr/ci/tasks/lint.yml
            input_mapping:
              source-repo: source-repo-ready

  - name: publish
    public: true
    build_logs_to_retain: 50
    serial: true
    plan:
      - get: source-repo
      - task: install
        file: source-repo/ci/tasks/install.yml
        input_mapping:
          source-repo: source-repo
      - in_parallel:
          - task: test-monorepo
            file: source-repo/ci/tasks/unit-test.yml
            input_mapping:
              source-repo: source-repo-ready
          - task: code-quality-monorepo
            file: source-repo/ci/tasks/lint.yml
            input_mapping:
              source-repo: source-repo-ready
      - task: publish-monorepo
        file: source-repo/ci/tasks/release.yml
        input_mapping:
          source-repo: source-repo-ready
        params:
          HOST: ((github-enterprise.host))
          PRIVATE_KEY: ((github-enterprise.private-key))
          USERNAME: ((service-account.username))
          NPM_USERNAME: ((service-account.artifactory-username))
          NPM_EMAIL: ((service-account.email))
          NPM_PUBLISH_KEY: ((service-account.artifactory-token))
      - put: source-repo # Push git commit and tags to original branch
        params:
          repository: updated-branch # From publish-monorepo-step
      - get: source-repo-develop # Merge release branch back with develop
      - put: source-repo-develop
        params:
          repository: updated-branch # From publish-monorepo-step
      - task: docs
        file: source-repo/ci/tasks/docs-gh-pages.yml
        input_mapping:
          source-repo: source-repo-ready
        params:
          HOST: ((github-enterprise.host))
          PRIVATE_KEY: ((github-enterprise.private-key))
          USERNAME: ((service-account.username))
          EMAIL: ((service-account.email))
      - task: send-release-notes
        input_mapping:
          ci-files: ci-files
        config:
          <<: *task-config
          inputs:
            - name: ci-files
          run:
            path: cat
            args: ["ci-files/lui-slack-notification.json"]
        on_success:
          do:
            - put: lui-slack-notification
              params:
                username: "LUIBOT"
                text: |
                  *New Lightning UI Releases Available*
                attachments_file: ci-files/lui-slack-notification.json

  - name: docs-staging
    build_logs_to_retain: 50
    plan:
      - get: source-repo-develop
        trigger: true
      - task: build-docs
        file: source-repo-develop/ci/tasks/docs-cf.yml
        input_mapping:
          source-repo: source-repo-develop
      - put: docs-cf-app
        params:
          manifest: source-repo-develop/cloudfoundry/manifest-staging.yml
          path: storybook


  # 4x
  - name: pull-request-4x
    public: true
    build_logs_to_retain: 50
    serial: true
    on_success:
      do:
        - <<: *pullRequestNotificationSuccess4x
    on_abort:
      do:
        - <<: *pullRequestNotificationFailure4x
    on_failure:
      do:
        - <<: *pullRequestNotificationFailure4x
    on_error:
      do:
        - <<: *pullRequestNotificationFailure4x
    plan:
      - get: source-repo-4x-pr
        trigger: true
      - put: source-repo-4x-pr
        params:
          path: source-repo-4x-pr
          status: pending
      - task: pr-verify
        file: source-repo-4x-pr/ci/tasks/detect_commit_and_pr_ids.yml
        input_mapping:
          source-repo: source-repo-4x-pr
      - task: npm-install
        file: source-repo-4x-pr/ci/tasks-legacy/install.yml
        input_mapping:
          source-repo: source-repo-4x-pr
      - in_parallel:
          - task: code-quality
            file: source-repo-4x-pr/ci/tasks-legacy/quality.yml
            input_mapping:
              source-repo: source-repo-4x-pr
          - task: unit-tests
            file: source-repo-4x-pr/ci/tasks-legacy/unit-test.yml
            input_mapping:
              source-repo: source-repo-4x-pr
      - task: build-storybook-and-components
        file: source-repo-4x-pr/ci/tasks-legacy/build.yml
        input_mapping:
          source-repo: source-repo-4x-pr

  - name: docs-4x
    build_logs_to_retain: 50
    plan:
      - get: source-repo-4x
        trigger: true
      - task: build-docs
        file: source-repo-4x/ci/tasks-legacy/build-docs.yml
        input_mapping:
          source-repo: source-repo-4x
        output_mapping:
          source-repo/dist: build-output
      - put: docs-cf-app
        params:
          manifest: source-repo-4x/cloudfoundry/manifest-4x.yml
          path: build-output

  - name: publish-4x
    build_logs_to_retain: 50
    plan:
      - get: source-repo-4x
        trigger: true
      - task: version-and-publish
        file: source-repo-4x/ci/tasks-legacy/publish.yml
        input_mapping:
          source-repo: source-repo-4x
        params:
          CI_NAME: "codeship" # Force env-ci (used in sematic-release package) to use codeship configuration in order to bypass failing branch env var check
          CI_BRANCH: "4.x"
          HOST: ((github-enterprise.host))
          PRIVATE_KEY: ((github-enterprise.private-key))
          USERNAME: ((service-account.username))
          NPM_USERNAME: ((service-account.artifactory-username))
          NPM_EMAIL: ((service-account.email))
          NPM_PASSWORD: ((service-account.artifactory-api-key))

  - name: run-cypress-sanity-vrt-tests
    plan:
      - get: once-every-weekday
        trigger: true
      - get: source-repo-develop
      - task: run-cypress-tests
        file: source-repo-develop/ci/tasks/run-cypress-tests.yml
        input_mapping:
          source-repo: source-repo-develop
        params:
          AWS_ACCESS_KEY_ID: ((aws.access-key-id))
          AWS_SECRET_ACCESS_KEY: ((aws.secret-access-key))
          S3_BUCKET: ((aws-s3-bucket-name))
          VRT_APIKEY: ((lui-automation.vrtApiKey))
          VRT_PROJECT: ((lui-automation.vrtProject))
        on_success:
          do:
            - put: automation-slack-notification
              params:
                <<: *slack_params_feature
                text: |
                  :white_check_mark: *<https://ci.comcast.net/builds/$BUILD_ID|LUI - Sanity and VRT Sanity Tests Run Job - Passed (Build #$BUILD_ID)>*
                attachments_file: source-repo/tests-slack-notification.json
        on_failure:
          do:
            - put: automation-slack-notification
              params:
                <<: *slack_params_feature
                text: |
                  :red_cr4: *<https://ci.comcast.net/builds/$BUILD_ID|LUI - Sanity and VRT Sanity Tests Run Job - Failed (Build #$BUILD_ID)>*
                attachments_file: source-repo/tests-slack-notification.json
