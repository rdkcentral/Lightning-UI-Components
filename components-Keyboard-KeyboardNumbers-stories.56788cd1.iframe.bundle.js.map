{"version":3,"file":"components-Keyboard-KeyboardNumbers-stories.56788cd1.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AA/BA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Keyboard/KeyboardNumbers.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Keyboard/KeyboardNumbers.stories.js"],"sourcesContent":["/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport Keyboard from './Keyboard';\nimport * as styles from './Keyboard.styles.js';\n\nexport default class KeyboardNumbers extends Keyboard {\n  static get __componentName() {\n    return 'KeyboardNumbers';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  _construct() {\n    super._construct();\n    this.formats = this.numbersFormat;\n  }\n\n  get numbersFormat() {\n    return {\n      numbers: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n      dialpad: [['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9'], ['0']],\n      dialpadExtended: [\n        ['1', '2', '3'],\n        ['4', '5', '6'],\n        ['7', '8', '9'],\n        ['0'],\n        [\n          {\n            title: 'Delete',\n            size: 'lg',\n            keyId: 'delete',\n            announce: 'delete, button'\n          }\n        ]\n      ]\n    };\n  }\n}\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"ï»¿/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport { context } from '../../globals';\\nimport utils from '../../utils';\\nimport { default as KeyboardNumbersComponent } from './KeyboardNumbers';\\nimport { Keyboard } from './Keyboard.stories';\\n\\nexport default {\\n  title: 'Components/Keyboard/KeyboardNumbers'\\n};\\n\\nexport const KeyboardNumbers = () =>\\n  class KeyboardNumbers extends lng.Component {\\n    static _template() {\\n      return {\\n        Keyboard: {\\n          type: KeyboardNumbersComponent,\\n          defaultFormat: 'dialpad'\\n        },\\n        w: utils.getWidthByUpCount(context.theme, 1)\\n      };\\n    }\\n  };\\n\\nKeyboardNumbers.storyName = 'KeyboardNumbers';\\n\\nKeyboardNumbers.args = {\\n  centerKeyboard: false,\\n  centerKeys: false,\\n  defaultFormat: 'dialpad',\\n  mode: 'focused'\\n};\\n\\nKeyboardNumbers.argTypes = {\\n  ...Keyboard.sharedArgTypes,\\n  centerKeys: {\\n    description: \\\"Center the keys within it's set width of keyboard\\\",\\n    control: 'boolean',\\n    table: {\\n      defaultValue: { summary: false }\\n    }\\n  },\\n  defaultFormat: {\\n    description: 'Select the format of dialpad',\\n    control: 'radio',\\n    options: ['dialpad', 'dialpadExtended'],\\n    table: {\\n      defaultValue: { summary: 'undefined' }\\n    }\\n  }\\n};\\n\\nKeyboardNumbers.parameters = {\\n  argActions: {\\n    defaultFormat: (format, component) => {\\n      component.tag('Keyboard').$toggleKeyboard(format);\\n      component._refocus();\\n    }\\n  }\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"KeyboardNumbers\": {\n    \"startLoc\": {\n      \"col\": 31,\n      \"line\": 27\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 37\n    },\n    \"startBody\": {\n      \"col\": 31,\n      \"line\": 27\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 37\n    }\n  }\n};\n    \n/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport { context } from '../../globals';\nimport utils from '../../utils';\nimport { default as KeyboardNumbersComponent } from './KeyboardNumbers';\nimport { Keyboard } from './Keyboard.stories';\nexport default {parameters: {\n  \"storySource\": {\n    \"source\": \"/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport { context } from '../../globals';\\nimport utils from '../../utils';\\nimport { default as KeyboardNumbersComponent } from './KeyboardNumbers';\\nimport { Keyboard } from './Keyboard.stories';\\nexport default {\\n  title: 'Components/Keyboard/KeyboardNumbers'\\n};\\nexport const KeyboardNumbers = () => class KeyboardNumbers extends lng.Component {\\n  static _template() {\\n    return {\\n      Keyboard: {\\n        type: KeyboardNumbersComponent,\\n        defaultFormat: 'dialpad'\\n      },\\n      w: utils.getWidthByUpCount(context.theme, 1)\\n    };\\n  }\\n};\\nKeyboardNumbers.storyName = 'KeyboardNumbers';\\nKeyboardNumbers.args = {\\n  centerKeyboard: false,\\n  centerKeys: false,\\n  defaultFormat: 'dialpad',\\n  mode: 'focused'\\n};\\nKeyboardNumbers.argTypes = {\\n  ...Keyboard.sharedArgTypes,\\n  centerKeys: {\\n    description: \\\"Center the keys within it's set width of keyboard\\\",\\n    control: 'boolean',\\n    table: {\\n      defaultValue: {\\n        summary: false\\n      }\\n    }\\n  },\\n  defaultFormat: {\\n    description: 'Select the format of dialpad',\\n    control: 'radio',\\n    options: ['dialpad', 'dialpadExtended'],\\n    table: {\\n      defaultValue: {\\n        summary: 'undefined'\\n      }\\n    }\\n  }\\n};\\nKeyboardNumbers.parameters = {\\n  argActions: {\\n    defaultFormat: (format, component) => {\\n      component.tag('Keyboard').$toggleKeyboard(format);\\n      component._refocus();\\n    }\\n  }\\n};\\nKeyboardNumbers.parameters = {\\n  ...KeyboardNumbers.parameters,\\n  docs: {\\n    ...KeyboardNumbers.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => class KeyboardNumbers extends lng.Component {\\\\n  static _template() {\\\\n    return {\\\\n      Keyboard: {\\\\n        type: KeyboardNumbersComponent,\\\\n        defaultFormat: 'dialpad'\\\\n      },\\\\n      w: utils.getWidthByUpCount(context.theme, 1)\\\\n    };\\\\n  }\\\\n}\\\",\\n      ...KeyboardNumbers.parameters?.docs?.source\\n    }\\n  }\\n};\",\n    \"locationsMap\": {\n      \"keyboard-numbers\": {\n        \"startLoc\": {\n          \"col\": 31,\n          \"line\": 27\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 37\n        },\n        \"startBody\": {\n          \"col\": 31,\n          \"line\": 27\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 37\n        }\n      }\n    }\n  }\n,},\n  title: 'Components/Keyboard/KeyboardNumbers'\n};\nexport const KeyboardNumbers = () => class KeyboardNumbers extends lng.Component {\n  static _template() {\n    return {\n      Keyboard: {\n        type: KeyboardNumbersComponent,\n        defaultFormat: 'dialpad'\n      },\n      w: utils.getWidthByUpCount(context.theme, 1)\n    };\n  }\n};\nKeyboardNumbers.storyName = 'KeyboardNumbers';\nKeyboardNumbers.args = {\n  centerKeyboard: false,\n  centerKeys: false,\n  defaultFormat: 'dialpad',\n  mode: 'focused'\n};\nKeyboardNumbers.argTypes = {\n  ...Keyboard.sharedArgTypes,\n  centerKeys: {\n    description: \"Center the keys within it's set width of keyboard\",\n    control: 'boolean',\n    table: {\n      defaultValue: {\n        summary: false\n      }\n    }\n  },\n  defaultFormat: {\n    description: 'Select the format of dialpad',\n    control: 'radio',\n    options: ['dialpad', 'dialpadExtended'],\n    table: {\n      defaultValue: {\n        summary: 'undefined'\n      }\n    }\n  }\n};\nKeyboardNumbers.parameters = {\n  argActions: {\n    defaultFormat: (format, component) => {\n      component.tag('Keyboard').$toggleKeyboard(format);\n      component._refocus();\n    }\n  }\n};\nKeyboardNumbers.parameters = {\n  ...KeyboardNumbers.parameters,\n  docs: {\n    ...KeyboardNumbers.parameters?.docs,\n    source: {\n      originalSource: \"() => class KeyboardNumbers extends lng.Component {\\n  static _template() {\\n    return {\\n      Keyboard: {\\n        type: KeyboardNumbersComponent,\\n        defaultFormat: 'dialpad'\\n      },\\n      w: utils.getWidthByUpCount(context.theme, 1)\\n    };\\n  }\\n}\",\n      ...KeyboardNumbers.parameters?.docs?.source\n    }\n  }\n};"],"names":[],"sourceRoot":""}