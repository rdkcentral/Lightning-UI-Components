{"version":3,"file":"8078.393405e6.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAihJA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACpsources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/ListItem/NestedSlider.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/ListItem/NestedSlider.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/ListItem/ListItemSlider.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/ListItem/ListItemSlider.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/ListItem/ListItemSlider.stories.js"],"sourcesContent":["/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const base = () => {\n  return {\n    showArrows: false,\n    showKnob: false\n  };\n};\n\nexport const mode = () => ({\n  focused: {\n    showArrows: true\n  }\n});\n\nexport const tone = theme => ({\n  neutral: {\n    mode: {\n      focused: {\n        arrowColor: theme.color.fillInverse,\n        progressBar: {\n          barColor: theme.color.fillInverseTertiary,\n          progressColor: theme.color.fillInverse\n        }\n      }\n    }\n  },\n  inverse: {\n    mode: {\n      focused: {\n        arrowColor: theme.color.fillNeutral,\n        progressBar: {\n          barColor: theme.color.fillNeutralTertiary,\n          progressColor: theme.color.fillNeutral\n        }\n      }\n    }\n  },\n  brand: {\n    mode: {\n      focused: {\n        arrowColor: theme.color.fillInverse,\n        progressBar: {\n          barColor: theme.color.fillBrandTertiary,\n          progressColor: theme.color.fillBrand\n        }\n      }\n    }\n  }\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as styles from './NestedSlider.styles.js';\nimport Slider from '../Slider';\n\nexport default class NestedSlider extends Slider {\n  static get __componentName() {\n    return 'NestedSlider';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const base = theme => ({\n  paddingY: theme.spacer.md + theme.spacer.xs,\n  valueTextStyle: {\n    ...theme.typography.headline3,\n    maxLines: 1,\n    textColor: theme.color.textNeutralSecondary\n  }\n});\n\nexport const mode = theme => ({\n  disabled: {\n    valueTextStyle: { textColor: theme.color.textNeutralDisabled }\n  },\n  focused: {\n    valueTextStyle: { textColor: theme.color.textInverseSecondary }\n  }\n});\n\nexport const tone = theme => ({\n  neutral: {\n    mode: {\n      focused: {\n        valueTextStyle: { textColor: theme.color.textInverseSecondary }\n      }\n    }\n  },\n  inverse: {\n    mode: {\n      focused: {\n        valueTextStyle: { textColor: theme.color.textNeutralSecondary }\n      }\n    }\n  },\n  brand: {\n    mode: {\n      focused: {\n        valueTextStyle: { textColor: theme.color.textInverseSecondary }\n      }\n    }\n  }\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport NestedSlider from './NestedSlider';\nimport ListItem from './ListItem';\nimport * as styles from './ListItemSlider.styles.js';\nimport TextBox from '../TextBox';\n\nexport default class ListItemSlider extends ListItem {\n  static get __componentName() {\n    return 'ListItemSlider';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  static _template() {\n    const template = super._template;\n    return {\n      ...template(),\n      Content: {\n        ...template().Content,\n        flex: { direction: 'column' },\n        TextWrapper: {\n          ...template().Content.TextWrapper,\n          mountY: 0,\n          flex: undefined\n        },\n        Slider: {\n          type: NestedSlider,\n          mountX: 0.5,\n          signals: {\n            onChange: '_onSliderChanged'\n          }\n        }\n      }\n    };\n  }\n\n  static get properties() {\n    return [...super.properties, 'slider', 'value'];\n  }\n\n  static get aliasStyles() {\n    return [{ prev: 'titlePadding', curr: 'contentSpacing' }];\n  }\n\n  static get tags() {\n    return [\n      ...super.tags,\n      { name: 'Slider', path: 'Content.Slider' },\n      { name: 'Value', path: 'Content.TextWrapper.Value' }\n    ];\n  }\n\n  _construct() {\n    super._construct();\n    this.value = 50;\n  }\n\n  _update() {\n    super._update();\n    this._updateSliderPosition();\n    this._updateValue();\n  }\n\n  _onTextBoxChanged() {\n    super._onTextBoxChanged();\n    this._TextWrapper.h = Math.max(\n      this._Title ? this._Title.h : 0,\n      this._Value ? this._Value.h : 0\n    );\n  }\n\n  _updateValue() {\n    if (this._hasValue) {\n      let valuePatch = {\n        content: this.value.toString(),\n        style: { textStyle: { ...this.style.valueTextStyle } },\n        mountX: 1,\n        x: this.w - this._paddingX\n      };\n      if (!this._Value) {\n        valuePatch = {\n          type: TextBox,\n          signals: {\n            textBoxChanged: '_onTextBoxChanged'\n          },\n          ...valuePatch\n        };\n      }\n      this._TextWrapper.patch({ Value: valuePatch });\n    } else {\n      this._TextWrapper.patch({ Value: undefined });\n    }\n  }\n\n  _updateSliderPosition() {\n    const w = this.w - this._paddingLeft - this._paddingRight;\n    const sliderProps = {\n      mode: this.mode,\n      tone: this.tone,\n      w,\n      x: w / 2,\n      visible: !this._collapse,\n      alpha: this.style.alpha,\n      ...this.slider,\n      value: this.value\n    };\n\n    this._Slider.patch(sliderProps);\n  }\n\n  get _hasValue() {\n    return this.value != undefined || this.value != null;\n  }\n\n  get _fixedWordWrapWidth() {\n    const titleWrapWidth =\n      this.w - this._paddingLeft - this._paddingRight - this._paddingX;\n    return titleWrapWidth;\n  }\n\n  _onSliderChanged(value, Slider) {\n    if (value >= Slider.max) {\n      this.value = Slider.max;\n    } else if (value <= Slider.min) {\n      this.value = Slider.min;\n    } else {\n      this.value = Slider.value;\n    }\n  }\n\n  _handleLeft() {\n    if (typeof this.onLeft === 'function') {\n      return this.onLeft(this);\n    } else if (this._Slider && !this._isDisabledMode) {\n      return this._Slider._handleLeft();\n    }\n    return false;\n  }\n\n  _handleRight() {\n    if (typeof this.onRight === 'function') {\n      return this.onRight(this);\n    } else if (this._Slider && !this._isDisabledMode) {\n      return this._Slider._handleRight();\n    }\n    return false;\n  }\n\n  set announce(announce) {\n    super.announce = announce;\n  }\n\n  get announce() {\n    if (this._announce) {\n      return this._announce;\n    }\n\n    return this.title + this.value + ', List Item Slider';\n  }\n}\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"﻿/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport { default as ListItemSliderComponent } from './ListItemSlider';\\nimport { createModeControl, generateSubStory } from '../../docs/utils';\\nimport { Basic as SliderStory } from '../Slider/Slider.stories';\\n\\n/**\\n * A ListItem component with slider functionality\\n */\\n\\nexport default {\\n  title: 'Components/ListItem/ListItemSlider'\\n};\\n\\nexport const ListItemSlider = () =>\\n  class ListItemSlider extends lng.Component {\\n    static _template() {\\n      return {\\n        ListItemSlider: {\\n          type: ListItemSliderComponent\\n        }\\n      };\\n    }\\n  };\\n\\nListItemSlider.storyName = 'ListItemSlider';\\n\\nListItemSlider.args = {\\n  title: 'List Item',\\n  value: 50,\\n  shouldCollapse: false,\\n  mode: 'focused'\\n};\\nListItemSlider.argTypes = {\\n  ...createModeControl({ summaryValue: 'focused' }),\\n  title: {\\n    control: 'text',\\n    description: 'Title text',\\n    table: {\\n      defaultValue: { summary: 'undefined' },\\n      type: { summary: 'string' }\\n    }\\n  },\\n  value: {\\n    control: 'number',\\n    description: 'Current slider value',\\n    table: {\\n      defaultValue: { summary: 'undefined' },\\n      type: { summary: 'number' }\\n    }\\n  },\\n  shouldCollapse: {\\n    control: 'boolean',\\n    description:\\n      'When in unfocused or disabled mode, if shouldCollapse property is true it will collapse the slider (when focused, it will always be expanded)',\\n    table: {\\n      defaultValue: { summary: false },\\n      type: { summary: 'boolean' }\\n    }\\n  }\\n};\\n\\nListItemSlider.argActions = {\\n  shouldCollapse: (shouldCollapse, component) => {\\n    component.tag('ListItemSlider').shouldCollapse = shouldCollapse;\\n  }\\n};\\n\\ngenerateSubStory({\\n  componentName: 'ListItemSlider',\\n  baseStory: ListItemSlider,\\n  subStory: SliderStory,\\n  targetProperty: 'slider',\\n  include: ['min', 'max', 'step']\\n});\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"ListItemSlider\": {\n    \"startLoc\": {\n      \"col\": 30,\n      \"line\": 38\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 46\n    },\n    \"startBody\": {\n      \"col\": 30,\n      \"line\": 38\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 46\n    }\n  }\n};\n    \n/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport { default as ListItemSliderComponent } from './ListItemSlider';\nimport { createModeControl, generateSubStory } from '../../docs/utils';\nimport { Basic as SliderStory } from '../Slider/Slider.stories';\n\n/**\n * A ListItem component with slider functionality\n */\n\nexport default {\n  title: 'Components/ListItem/ListItemSlider',\n  parameters: {\n  \"storySource\": {\n    \"source\": \"/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport { default as ListItemSliderComponent } from './ListItemSlider';\\nimport { createModeControl, generateSubStory } from '../../docs/utils';\\nimport { Basic as SliderStory } from '../Slider/Slider.stories';\\n\\n/**\\n * A ListItem component with slider functionality\\n */\\n\\nexport default {\\n  title: 'Components/ListItem/ListItemSlider',\\n  parameters: {\\n    docs: {\\n      description: {\\n        component: \\\"A ListItem component with slider functionality\\\"\\n      }\\n    }\\n  }\\n};\\nexport const ListItemSlider = () => class ListItemSlider extends lng.Component {\\n  static _template() {\\n    return {\\n      ListItemSlider: {\\n        type: ListItemSliderComponent\\n      }\\n    };\\n  }\\n};\\nListItemSlider.storyName = 'ListItemSlider';\\nListItemSlider.args = {\\n  title: 'List Item',\\n  value: 50,\\n  shouldCollapse: false,\\n  mode: 'focused'\\n};\\nListItemSlider.argTypes = {\\n  ...createModeControl({\\n    summaryValue: 'focused'\\n  }),\\n  title: {\\n    control: 'text',\\n    description: 'Title text',\\n    table: {\\n      defaultValue: {\\n        summary: 'undefined'\\n      },\\n      type: {\\n        summary: 'string'\\n      }\\n    }\\n  },\\n  value: {\\n    control: 'number',\\n    description: 'Current slider value',\\n    table: {\\n      defaultValue: {\\n        summary: 'undefined'\\n      },\\n      type: {\\n        summary: 'number'\\n      }\\n    }\\n  },\\n  shouldCollapse: {\\n    control: 'boolean',\\n    description: 'When in unfocused or disabled mode, if shouldCollapse property is true it will collapse the slider (when focused, it will always be expanded)',\\n    table: {\\n      defaultValue: {\\n        summary: false\\n      },\\n      type: {\\n        summary: 'boolean'\\n      }\\n    }\\n  }\\n};\\nListItemSlider.argActions = {\\n  shouldCollapse: (shouldCollapse, component) => {\\n    component.tag('ListItemSlider').shouldCollapse = shouldCollapse;\\n  }\\n};\\ngenerateSubStory({\\n  componentName: 'ListItemSlider',\\n  baseStory: ListItemSlider,\\n  subStory: SliderStory,\\n  targetProperty: 'slider',\\n  include: ['min', 'max', 'step']\\n});\\nListItemSlider.parameters = {\\n  ...ListItemSlider.parameters,\\n  docs: {\\n    ...ListItemSlider.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => class ListItemSlider extends lng.Component {\\\\n  static _template() {\\\\n    return {\\\\n      ListItemSlider: {\\\\n        type: ListItemSliderComponent\\\\n      }\\\\n    };\\\\n  }\\\\n}\\\",\\n      ...ListItemSlider.parameters?.docs?.source\\n    }\\n  }\\n};\",\n    \"locationsMap\": {\n      \"list-item-slider\": {\n        \"startLoc\": {\n          \"col\": 30,\n          \"line\": 38\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 46\n        },\n        \"startBody\": {\n          \"col\": 30,\n          \"line\": 38\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 46\n        }\n      }\n    }\n  }\n,\n    docs: {\n      description: {\n        component: \"A ListItem component with slider functionality\"\n      }\n    }\n  },};\nexport const ListItemSlider = () => class ListItemSlider extends lng.Component {\n  static _template() {\n    return {\n      ListItemSlider: {\n        type: ListItemSliderComponent\n      }\n    };\n  }\n};\nListItemSlider.storyName = 'ListItemSlider';\nListItemSlider.args = {\n  title: 'List Item',\n  value: 50,\n  shouldCollapse: false,\n  mode: 'focused'\n};\nListItemSlider.argTypes = {\n  ...createModeControl({\n    summaryValue: 'focused'\n  }),\n  title: {\n    control: 'text',\n    description: 'Title text',\n    table: {\n      defaultValue: {\n        summary: 'undefined'\n      },\n      type: {\n        summary: 'string'\n      }\n    }\n  },\n  value: {\n    control: 'number',\n    description: 'Current slider value',\n    table: {\n      defaultValue: {\n        summary: 'undefined'\n      },\n      type: {\n        summary: 'number'\n      }\n    }\n  },\n  shouldCollapse: {\n    control: 'boolean',\n    description: 'When in unfocused or disabled mode, if shouldCollapse property is true it will collapse the slider (when focused, it will always be expanded)',\n    table: {\n      defaultValue: {\n        summary: false\n      },\n      type: {\n        summary: 'boolean'\n      }\n    }\n  }\n};\nListItemSlider.argActions = {\n  shouldCollapse: (shouldCollapse, component) => {\n    component.tag('ListItemSlider').shouldCollapse = shouldCollapse;\n  }\n};\ngenerateSubStory({\n  componentName: 'ListItemSlider',\n  baseStory: ListItemSlider,\n  subStory: SliderStory,\n  targetProperty: 'slider',\n  include: ['min', 'max', 'step']\n});\nListItemSlider.parameters = {\n  ...ListItemSlider.parameters,\n  docs: {\n    ...ListItemSlider.parameters?.docs,\n    source: {\n      originalSource: \"() => class ListItemSlider extends lng.Component {\\n  static _template() {\\n    return {\\n      ListItemSlider: {\\n        type: ListItemSliderComponent\\n      }\\n    };\\n  }\\n}\",\n      ...ListItemSlider.parameters?.docs?.source\n    }\n  }\n};"],"names":[],"sourceRoot":""}