{"version":3,"file":"components-MetadataTile-MetadataTile-stories.78b22c75.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAOA;AAQA;AAAA;AAZA;AACA;AAAA;AAAA;AAAA;AAcA;AACA;AAMA;AAEA;AACA;AAAA;AAAA;AAAA;AA1DA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAGA;AAGA;AAAA;AACA;AAGA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AASA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAGA;AAOA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAMA;AAGA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;ACvNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/MetadataTile/MetadataTile.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/MetadataTile/MetadataTile.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/docs/utils.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/MetadataTile/MetadataTile.stories.js"],"sourcesContent":["/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const base = theme => ({\n  titleTextStyle: theme.typography.headline3,\n  descriptionTextStyle: theme.typography.body3\n});\n\nexport const tone = theme => ({\n  neutral: {\n    detailsTextStyle: { textColor: theme.color.textNeutralSecondary },\n    descriptionTextStyle: { textColor: theme.color.textNeutral },\n    mode: {\n      disabled: {\n        detailsTextStyle: { textColor: theme.color.textNeutralDisabled },\n        descriptionTextStyle: {\n          textColor: theme.color.textNeutralDisabled\n        }\n      }\n    }\n  },\n  inverse: {\n    detailsTextStyle: { textColor: theme.color.textInverseSecondary },\n    descriptionTextStyle: { textColor: theme.color.textInverse },\n    mode: {\n      disabled: {\n        detailsTextStyle: { textColor: theme.color.textNeutralDisabled },\n        descriptionTextStyle: {\n          textColor: theme.color.textNeutralDisabled\n        }\n      }\n    }\n  },\n  brand: {\n    detailsTextStyle: { textColor: theme.color.textNeutralSecondary },\n    descriptionTextStyle: { textColor: theme.color.textNeutral },\n    mode: {\n      disabled: {\n        detailsTextStyle: { textColor: theme.color.textNeutralDisabled },\n        descriptionTextStyle: {\n          textColor: theme.color.textNeutralDisabled\n        }\n      }\n    }\n  }\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport MetadataBase from '../MetadataBase';\nimport * as styles from './MetadataTile.styles';\n\nexport default class MetadataTile extends MetadataBase {\n  static get __componentName() {\n    return 'MetadataTile';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  _updateDetails() {\n    if (!this.details && !this._Details) {\n      return;\n    }\n    if (this.description && this._Details) {\n      this._Details.patch({ content: '' });\n      this._Details.alpha = 0;\n      this._Details.visible = false;\n    } else {\n      super._updateDetails();\n    }\n  }\n\n  _updateDetailsLayout({ h }) {\n    if (!this.details && !this._Details) {\n      return;\n    }\n    if (this._Details && !this.description) {\n      this._DetailsWrapper.h = h;\n      this._DetailsWrapper.alpha = this.style.alpha;\n    } else {\n      this._DetailsWrapper.h = 0;\n    }\n  }\n\n  set announce(announce) {\n    super.announce = announce;\n  }\n\n  get announce() {\n    return (\n      this._announce || [\n        this._Title && this._Title.announce,\n        (this._Details && this._Details.announce) ||\n          (this._Description && this._Description.announce),\n        this.logoTitle\n      ]\n    );\n  }\n\n  _textH() {\n    const titleH = (this.title && this._Title && this._Title.h) || 0;\n    const detailsH =\n      (this.details &&\n        this._Details &&\n        this._Details.visible &&\n        this._DetailsWrapper.h) ||\n      0;\n    const descriptionH =\n      (this.description && this._Description && this._Description.h) || 0;\n    return titleH + detailsH + descriptionH;\n  }\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport utils from '../utils';\n\n// creates Mode control on stories\nexport const createModeControl = ({ options, summaryValue } = {}) => {\n  return {\n    mode: {\n      control: 'radio',\n      options:\n        options && Array.isArray(options)\n          ? ['unfocused', ...options]\n          : ['unfocused', 'focused', 'disabled'],\n      description: 'Sets the visual mode for the component',\n      table: {\n        defaultValue: { summary: summaryValue }\n      },\n      type: { name: 'string', required: true }\n    }\n  };\n};\n\n/**\n * @param {object} config Parameters for generating nested args: { argsObj, targetProp, include, overrides }\n */\nexport function nestedArgs(config) {\n  const { argsObj, targetProp, include, overrides } = config;\n  return Object.keys(argsObj).reduce((acc, curr) => {\n    if (!include.includes(curr)) return acc;\n    return {\n      ...acc,\n      [targetProp + '_' + curr]:\n        (overrides.args && overrides.args[curr]) || argsObj[curr]\n    };\n  }, {});\n}\n\n/**\n * @param {object} config Parameters for generating nested arg types: { argsObj, targetProp, include, overrides }\n */\nexport function nestedArgTypes(config) {\n  const { argTypesObj, targetProp, include, overrides } = config;\n  return Object.keys(argTypesObj).reduce((acc, curr) => {\n    if (!include.includes(curr)) return acc;\n    return {\n      ...acc,\n      [targetProp + '_' + curr]: {\n        // Namespaced to avoid conflicts\n        name: curr,\n        ...argTypesObj[curr],\n        ...overrides[curr],\n        table: {\n          ...(argTypesObj[curr].table || {}),\n          ...(overrides[curr] && overrides[curr].table),\n          category: targetProp\n        }\n      }\n    };\n  }, {});\n}\n\nexport const prevValues = {};\n\n/**\n * @param {object} config Parameters for generating nested arg actions: { componentName, argsTypeObj, targetProp, include, overrides }\n */\nexport function nestedArgActions(config) {\n  const { componentName, argTypesObj, targetProp, include, overrides } = config;\n  return Object.keys(argTypesObj).reduce((acc, curr) => {\n    if (!include.includes(curr)) return acc;\n    return {\n      ...acc,\n      [targetProp + '_' + curr]: (value, component) => {\n        component.tag(componentName).patch({\n          [targetProp]: {\n            ...prevValues[targetProp],\n            [curr.replace(targetProp + '_', '')]:\n              value === 'none'\n                ? undefined\n                : (overrides && overrides[curr]) || value // There are issues with merging objects here\n          }\n        });\n        // Allow patching to work with nested objects\n        if (!prevValues[targetProp]) {\n          prevValues[targetProp] = {};\n        }\n        prevValues[targetProp][curr.replace(targetProp + '_', '')] =\n          value === 'none'\n            ? undefined\n            : (overrides && overrides[curr]) || value;\n      }\n    };\n  }, {});\n}\n\n/**\n * @param {object} config Parameters for generating story: { componentName, baseStory, subStory, targetProperty, include, options }\n */\nexport function generateSubStory(config) {\n  config.baseStory.args = {\n    ...config.baseStory.args,\n    ...nestedArgs({\n      argsObj: config.subStory.args || {},\n      targetProp: config.targetProperty,\n      include: config.include,\n      overrides: (config.overrides && config.overrides.args) || {}\n    })\n  };\n\n  config.baseStory.argTypes = {\n    ...config.baseStory.argTypes,\n    ...nestedArgTypes({\n      argTypesObj: config.subStory.argTypes || {},\n      targetProp: config.targetProperty,\n      include: config.include,\n      overrides: (config.overrides && config.overrides.argTypes) || {}\n    })\n  };\n\n  if (\n    !(\n      config.baseStory &&\n      config.baseStory.parameters &&\n      config.baseStory.parameters.argActions\n    )\n  ) {\n    config.baseStory.parameters = {\n      argActions: {}\n    };\n  }\n\n  config.baseStory.parameters.argActions = {\n    ...config.baseStory.parameters.argActions,\n    ...nestedArgActions({\n      componentName: config.componentName,\n      argTypesObj: config.subStory.argTypes || {},\n      targetProp: config.targetProperty,\n      include: config.include,\n      overrides: (config.overrides && config.overrides.argActions) || {}\n    })\n  };\n}\n\n// used to create links to Lightning docs given an id\nexport const DocsLink = ({ children, id }) => {\n  const docsmap = {\n    lng: {\n      _base: 'https://rdkcentral.github.io/Lightning/docs',\n      Component: '/components/overview',\n      Text: '/textures/text',\n      Transition: '/transitions/attributes'\n    }\n  };\n  const [source, path] = id.split('.');\n  const href = docsmap[source]._base + docsmap[source][path];\n  return (\n    <a href={href} target=\"_blank\">\n      {children || id}\n    </a>\n  );\n};\n\nexport const Item = ({ children }) => children;\n\n/**\n * Creates formatted object for markdown prop tables\n * see Column and Row stories\n * @param {object} props\n * @param {object} props.type - TS-style generic/utility type\n */\nexport const ObjectFormat = ({ object }) => {\n  return [\n    '{',\n    <br />,\n    '  ',\n    ...utils.flatten(\n      Object.entries(object).map(([k, v]) => [\n        <span>&nbsp;&nbsp;</span>,\n        `${k}: `,\n        v,\n        ',',\n        <br />\n      ])\n    ),\n    '}'\n  ].map((x, i) => <Item key={i}>{x}</Item>);\n};\n\n/**\n * Formats TS-style generic types\n * See Columns and Row stories\n * @param {object} props\n * @param {object} props.children - component children\n * @param {string} props.type - Name of generic type\n */\nexport const GenericType = ({ children, type }) => {\n  return [type, '<', children, '>'].map((x, i) => <Item key={i}>{x}</Item>);\n};\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport lightningbolt from '../../assets/images/ic_lightning_white_32.png';\nimport circle from '../../assets/images/circle.svg';\nimport { getHexColor } from '../../utils';\nimport { createModeControl } from '../../docs/utils';\nimport { default as MetadataTileComponent } from '.';\n\nexport default {\n  title: 'Components/MetadataTile'\n};\n\nexport const MetadataTile = args =>\n  class MetadataTile extends lng.Component {\n    static _template() {\n      return {\n        MetadataTile: {\n          type: MetadataTileComponent,\n          w: args.w,\n          title: args.title,\n          details: args.details,\n          description: args.description,\n          logo: args.logo !== 'none' ? circle : null,\n          logoTitle: args.logo !== 'none' ? args.logoTitle : null,\n          logoPosition: args.logoPosition\n        }\n      };\n    }\n\n    _getFocused() {\n      return this.tag('MetadataTile');\n    }\n  };\n\nMetadataTile.storyName = 'MetadataTile';\n\nMetadataTile.args = {\n  w: 400,\n  title: 'Title',\n  details: [\n    '94%',\n    {\n      icon: lightningbolt,\n      style: { color: getHexColor('00ff00') },\n      title: 'Green Lightning Bolt'\n    },\n    '86%',\n    {\n      icon: 'http://myriad.merlin.comcast.com/select/logo?entityId=8527084350383982239&width=32&height=&ratio=1x1&trim=false',\n      title: 'Rotten Tomatoes rating'\n    }\n  ],\n  description: 'Description',\n  logo: circle,\n  logoTitle: 'Logo title',\n  logoPosition: 'right',\n  mode: 'unfocused'\n};\n\nMetadataTile.argTypes = {\n  ...createModeControl({ summaryValue: MetadataTile.args.mode }),\n  w: {\n    control: 'number',\n    description: 'Width of component',\n    table: {\n      defaultValue: { summary: 0 }\n    }\n  },\n  title: {\n    control: 'text',\n    description: 'Title text',\n    table: {\n      defaultValue: { summary: 'undefined' }\n    }\n  },\n  details: {\n    control: 'object',\n    table: {\n      defaultValue: { summary: 'undefined' }\n    }\n  },\n  description: {\n    control: 'text',\n    description: 'description text',\n    table: {\n      defaultValue: { summary: 'undefined' }\n    }\n  },\n  logo: {\n    control: 'select',\n    options: ['none', circle],\n    description: 'Image to use for logo',\n    table: {\n      defaultValue: { summary: 'undefined' }\n    }\n  },\n  logoTitle: {\n    control: 'text',\n    description: 'Title to use for logo in announcer',\n    table: {\n      defaultValue: { summary: 'undefined' }\n    }\n  },\n  logoPosition: {\n    control: 'select',\n    options: ['right', 'left'],\n    description: 'Position logo on the left/right side',\n    table: {\n      defaultValue: { summary: 'right' }\n    }\n  }\n};\n"],"names":[],"sourceRoot":""}