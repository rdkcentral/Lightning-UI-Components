{"version":3,"file":"mixins-withEditItems-withEditItems-mdx.5e447180.iframe.bundle.js","mappingsnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAGA;AAIA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/mixins/withEditItems/withEditItems.mdx","webpack://lightning-ui-docs/../../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js","webpack://lightning-ui-docs/../../../node_modules/@storybook/core/dist/components/ sync","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/mixins/withEditItems/index.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/mixins/withEditItems/withEditItems.stories.js","webpack://lightning-ui-docs/../../../node_modules/memoizerific/ sync"],"sourcesContent":["\nimport React from 'react';\n\n/*prettier-ignore*/\n/*\nCopyright 2023 Comcast Cable Communications Management, LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nSPDX-License-Identifier: Apache-2.0\n\\*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/Lightning-UI-Components/Lightning-UI-Components/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.mjs\";\nimport {Meta} from '@storybook/blocks';\nimport * as withEditItemsStories from './withEditItems.stories';\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [\"\\n\", \"\\n\", \"\\n\", _jsx(Meta, {\n      of: withEditItemsStories\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"withedititems\",\n      children: \"withEditItems\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"withEditItems\"\n      }), \" mixin can be wrapped around any component that is or extends a FocusManager to enable rearranging the position of items with an animation\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"source\",\n      children: \"Source\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/@lightningjs/ui-components/src/mixins/withEditItems/index.js\",\n        rel: \"nofollow\",\n        children: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/@lightningjs/ui-components/src/mixins/withEditItems/index.js\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"usage\",\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"class Basic extends lng.Component {\\n  static _template() {\\n    return {\\n      TileRow: {\\n        type: withEditItems(Row),\\n        items: [\\n            {\\n                title: 'item-1'\\n            },{\\n                title: 'item-2'\\n            }, {\\n                ...\\n            }... ]\\n      }\\n    };\\n  }\\n\\n  //Some trigger, in this case a keypress handler to trigger the Tile Row's ability to swap an items position\\n  _handleEnter() {\\n      this.tag('TileRow').toggleEdit();\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"api\",\n      children: \"API\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"methods\",\n      children: \"Methods\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"toggleedit-void\",\n      children: \"toggleEdit(): void\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Called from parent of extended Row/Column to trigger the flow of editing the order of items in the item array\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"_swapitemarraypos-void\",\n      children: \"_swapItemArrayPos(): void\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Called each time on the update of the selectedIndex value when both editMode is true and isEditing is set to true on Enter press.\\nreturns the original items array with an updated order, swaping the positions of the selecte item and the next or previous item depending on the direction of the swap\"\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../node_modules/@storybook/core/dist/components sync recursive\";\nmodule.exports = webpackEmptyContext;","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport default function (Base) {\n  return class extends Base {\n    _init() {\n      super._init();\n      this.isEditing = false;\n    }\n\n    toggleEdit() {\n      this.isEditing = !this.isEditing;\n    }\n\n    _swapItemArrayPos(array, current, previous) {\n      [array[current], array[previous]] = [array[previous], array[current]];\n      super.selectedIndex = current;\n    }\n\n    _unfocus() {\n      this.isEditing = false;\n      super._unfocus();\n    }\n\n    get selectedIndex() {\n      return this._selectedIndex;\n    }\n    set selectedIndex(index) {\n      if (!this.isEditing) {\n        super.selectedIndex = index;\n        return;\n      }\n      if (\n        this.selectedIndex >= this.items.length - 1 &&\n        index > this.selectedIndex\n      ) {\n        return;\n      }\n      const currentItem = this.selected;\n      this.prevSelected = currentItem;\n      const nextItem = this.items[index];\n      const previousIndex = this.selectedIndex;\n      const oldPosX = currentItem.transition('x')\n        ? currentItem.transition('x').targetValue\n        : currentItem.x;\n      const oldPosY = currentItem.transition('y')\n        ? currentItem.transition('y').targetValue\n        : currentItem.y;\n      const newPosX = nextItem.transition('x')\n        ? nextItem.transition('x').targetValue\n        : nextItem.x;\n      const newPosY = nextItem.transition('y')\n        ? nextItem.transition('y').targetValue\n        : nextItem.y;\n\n      this._swapItemArrayPos(this.items, index, previousIndex);\n\n      // self invoking async function that waits for setSmooth calls to complete before triggering\n      // render and signaling selected changed event.\n      // This allows time for items to be in their final position before the row component check world context\n      // to identify items off screen to trigger scrolling\n      (async () => {\n        await currentItem.setSmooth('x', newPosX);\n        await currentItem.setSmooth('y', newPosY);\n        await nextItem.setSmooth('x', oldPosX);\n        await nextItem.setSmooth('y', oldPosY);\n        if (\n          !this.Items.children.length ||\n          !this.Items.children[index] ||\n          !this.Items.children[index].skipFocus\n        ) {\n          if (this.selected) {\n            this._selectedIndex = index;\n            this._render(this.selected, this.prevSelected);\n            this.signal('selectedChange', this.selected, this.prevSelected);\n          }\n          // Don't call refocus until after a new render in case of a situation like Plinko nav\n          // where we don't want to focus the previously selected item and need to get the new one first\n          this._refocus();\n        }\n      })();\n    }\n  };\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport Button from '../../components/Button/Button';\nimport TextBox from '../../components/TextBox/TextBox';\nimport Row from '../../components/Row/Row';\nimport { default as withEditItemsMixin } from '.';\n\n/**\n * Shared Args and Arg Types from Row\n */\nimport * as RowProps from '../../components/Row/Row.stories';\nexport default {\n  title: 'Utilities/withEditItems',\n  parameters: {\n    remountAll: true\n  }\n};\n\nexport const withEditItems = () =>\n  class withEditItems extends lng.Component {\n    static _template() {\n      return {\n        RowComponent: {\n          type: withEditItemsMixin(Row),\n          y: 300,\n          items: Array.apply(null, { length: 6 }).map((_, i) => ({\n            type: Button,\n            title: `Button ${i + 1}`,\n            w: 150\n          }))\n        },\n        TextBox: {\n          type: TextBox,\n          content:\n            'Press enter to toggle edit mode. \\nWhen in edit mode, use left/right arrows to move items \\nPress enter again to exit edit mode'\n        }\n      };\n    }\n\n    _handleEnter() {\n      this.tag('RowComponent').toggleEdit();\n    }\n  };\nwithEditItems.args = RowProps.Row.args;\nwithEditItems.argTypes = RowProps.Row.argTypes;\n\nwithEditItems.storyName = 'withEditItems';\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../node_modules/memoizerific sync recursive\";\nmodule.exports = webpackEmptyContext;"],"names":[],"sourceRoot":""}