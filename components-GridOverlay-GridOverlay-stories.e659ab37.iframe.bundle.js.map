{"version":3,"file":"components-GridOverlay-GridOverlay-stories.e659ab37.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/GridOverlay/GridOverlay.stories.js"],"sourcesContent":["/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport context from '../../globals/context/index';\nimport { default as GridOverlayComponent } from '.';\n\nexport default {\n  title: 'Components/GridOverlay'\n};\n\nexport const GridOverlay = args =>\n  class GridOverlay extends lng.Component {\n    static _template() {\n      return {\n        GridOverlay: {\n          type: GridOverlayComponent,\n          x: context.theme.layout.marginX * -1,\n          y: context.theme.layout.marginY * -1,\n          showColumns: args.showColumns,\n          showMargins: args.showMargins,\n          showSafe: args.showSafe,\n          showGutters: args.showGutters,\n          showText: args.showText,\n          alpha: args.alpha\n        }\n      };\n    }\n  };\nGridOverlay.storyName = 'GridOverlay';\nGridOverlay.args = {\n  alpha: 1,\n  showColumns: true,\n  showMargins: true,\n  showSafe: true,\n  showGutters: true,\n  showText: true\n};\nGridOverlay.argTypes = {\n  alpha: {\n    control: {\n      type: 'range',\n      min: 0,\n      max: 1,\n      step: 0.01\n    },\n    description:\n      'Adjusts the opacity, parameter should be a value between 0 and 1',\n    table: { defaultValue: { summary: 'undefined' } }\n  },\n  showColumns: {\n    control: 'boolean',\n    description: 'When true, displays the column span rectangles',\n    table: {\n      defaultValue: { summary: true }\n    }\n  },\n  showMargins: {\n    control: 'boolean',\n    description: 'When true, displays the X and Y margin rulers',\n    table: {\n      defaultValue: { summary: true }\n    }\n  },\n  showSafe: {\n    control: 'boolean',\n    description:\n      'When true, displays the X and Y \"safe\" zone rulers (this is the area that content should not be rendered in to avoid screen clipping on a device)',\n    table: {\n      defaultValue: { summary: true }\n    }\n  },\n  showGutters: {\n    control: 'boolean',\n    description: 'When true, displays the rulers for spacing between columns',\n    table: {\n      defaultValue: { summary: true }\n    }\n  },\n  showText: {\n    control: 'boolean',\n    description:\n      'When true, displays the textbox containing the exact numbers associated with the screen, margin, safe, and gutter sizes',\n    table: {\n      defaultValue: { summary: true }\n    }\n  }\n};\nGridOverlay.parameters = {\n  argActions: {}\n};\n"],"names":[],"sourceRoot":""}