{"version":3,"file":"2854.c12a679d.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;;AAIA;AACA;AAKA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAQA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AALA;AACA;AAAA;AAAA;AAAA;AAhIA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AALA;AACA;AAAA;AAAA;AAAA;AAzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAOA;AAQA;AAAA;AAZA;AACA;AAAA;AAAA;AAAA;AAcA;AACA;AAMA;AAEA;AACA;AAAA;AAAA;AAAA;AAtDA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AASA;AASA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAfA;AACA;AAAA;AAAA;AAAA;AAiBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAjGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+EA;AAQA;AAAA;AAlBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAOA;AAGA;AAAA;AAPA;AACA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAGA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AAIA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAIA;AAMA;AACA;AAEA;;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAKA;AAGA;;AAEA;;AAEA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AAAA;AAGA;AACA;AAMA;AAMA;AACA;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;;AACA;AACA;;AAEA;AACA;AAIA;AAMA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;;AAEA;;AAEA;AAAA;AAAA;AAAA;AAEA;AAQA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAQA;AAMA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAKA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAvmBA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAaA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Checkbox/Checkbox.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Checkbox/Checkbox.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Label/Label.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Label/Label.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/MetadataTile/MetadataTile.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/MetadataTile/MetadataTile.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/ProgressBar/ProgressBar.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/ProgressBar/ProgressBar.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Tile/Tile.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Tile/Tile.js"],"sourcesContent":["/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const base = theme => {\n  const strokeWidth = theme.stroke.sm;\n  const size = theme.spacer.xxl - strokeWidth * 2;\n  return {\n    alpha: theme.alpha.primary,\n    width: size,\n    height: size,\n    checkWidth: theme.spacer.lg,\n    checkHeight: theme.spacer.md + theme.spacer.xs,\n    checkSrc: theme.asset.check,\n    radius: size / 2,\n    strokeWidth\n  };\n};\n\nexport const tone = theme => ({\n  neutral: {\n    strokeColor: theme.color.strokeInverse,\n    checkColor: theme.color.textInverse,\n    backgroundColor: theme.color.fillNeutralDisabled,\n    backgroundColorChecked: theme.color.fillNeutral\n  },\n  inverse: {\n    strokeColor: theme.color.strokeNeutral,\n    checkColor: theme.color.textNeutral,\n    backgroundColor: theme.color.fillInverseDisabled,\n    backgroundColorChecked: theme.color.fillInverse\n  },\n  brand: {\n    strokeColor: theme.color.strokeNeutral,\n    checkColor: theme.color.textNeutral,\n    backgroundColor: theme.color.fillInverseDisabled,\n    backgroundColorChecked: theme.color.fillBrand\n  }\n});\n\nexport const mode = theme => ({\n  disabled: { alpha: theme.alpha.inactive }\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport Icon from '../Icon';\nimport Base from '../Base';\nimport * as styles from './Checkbox.styles.js';\n\nexport default class Checkbox extends Base {\n  static get __componentName() {\n    return 'Checkbox';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  static _template() {\n    const center = { mount: 0.5, x: w => w / 2, y: h => h / 2 };\n    return {\n      Body: {\n        rtt: true, // ensures the background color doesn't bleed into the checkbox icon when disabled\n        ...center,\n        Check: {\n          type: Icon,\n          ...center,\n          alpha: 0\n        }\n      },\n      Stroke: center\n    };\n  }\n\n  static get tags() {\n    return ['Check', 'Body', 'Stroke'];\n  }\n\n  static get properties() {\n    return ['checked'];\n  }\n\n  static get aliasStyles() {\n    return [\n      { prev: 'checkH', curr: 'checkHeight' },\n      { prev: 'checkW', curr: 'checkWidth' }\n    ];\n  }\n\n  _update() {\n    this._updateBody();\n    this._updateStroke();\n    this._updateCheck();\n    if (this._checkedChanged) {\n      this.fireAncestors('$announce', this.announce);\n      this._checkedChanged = false;\n    }\n    this._updateOpacity();\n  }\n\n  _updateCheck() {\n    this._Check.patch({\n      w: this.style.checkWidth,\n      h: this.style.checkHeight,\n      icon: this.style.checkSrc,\n      style: { color: this.style.checkColor }\n    });\n\n    const alphaPatch = {\n      alpha: this.checked ? 1 : 0\n    };\n\n    this.applySmooth(this._Check, alphaPatch);\n  }\n\n  _updateBody() {\n    const bodyColor = this.checked\n      ? this.style.backgroundColorChecked\n      : this.style.backgroundColor;\n\n    // if the inner checkbox should be square, a rounded corner radius can still be applied to the stroke\n    const radius =\n      this.style.radius >= this.w / 2\n        ? (this.w - this.style.strokeWidth) / 2\n        : 0;\n\n    this._Body.patch({\n      texture: lng.Tools.getRoundRect(\n        this.w - this.style.strokeWidth,\n        this.h - this.style.strokeWidth,\n        radius,\n        0,\n        null,\n        true,\n        bodyColor\n      )\n    });\n  }\n\n  _updateStroke() {\n    this._Stroke.patch({\n      texture: lng.Tools.getRoundRect(\n        this.w,\n        this.h,\n        this.style.radius,\n        this.style.strokeWidth,\n        this.style.strokeColor,\n        false\n      )\n    });\n  }\n\n  _updateOpacity() {\n    this.applySmooth(this, { alpha: this.style.alpha });\n  }\n\n  _setChecked(checked) {\n    this._checkedChanged = checked !== this._checked;\n    return checked;\n  }\n\n  toggle() {\n    if (!this._isDisabledMode) {\n      this.checked = !this.checked;\n    }\n    return this;\n  }\n\n  _handleEnter() {\n    if (typeof this.onEnter === 'function') {\n      return this.onEnter(this);\n    } else {\n      this.toggle();\n    }\n    return false;\n  }\n\n  set announce(announce) {\n    super.announce = announce;\n  }\n\n  get announce() {\n    return this._announce || (this.checked ? 'Checked' : 'Unchecked');\n  }\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const base = theme => ({\n  radius: [\n    theme.radius.md,\n    theme.radius.md,\n    theme.radius.md,\n    theme.radius.none\n  ],\n  paddingX: theme.spacer.lg,\n  paddingY: theme.spacer.md,\n  offsetY: theme.spacer.xxs,\n  textStyle: theme.typography.caption1\n});\n\nexport const tone = theme => ({\n  neutral: {\n    textStyle: { textColor: theme.color.textInverse },\n    backgroundColor: theme.color.fillNeutral\n  },\n  inverse: {\n    textStyle: { textColor: theme.color.textNeutral },\n    backgroundColor: theme.color.fillInverse\n  },\n  brand: {\n    textStyle: { textColor: theme.color.textNeutral },\n    backgroundColor: theme.color.fillBrand\n  }\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport Base from '../Base';\nimport * as styles from './Label.styles.js';\n\nexport default class Label extends Base {\n  static _template() {\n    return {\n      Background: {},\n      Text: {\n        mountY: 0.5,\n        mountX: 0.5,\n        text: {}\n      }\n    };\n  }\n\n  static get __componentName() {\n    return 'Label';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  static get properties() {\n    return ['title'];\n  }\n\n  static get tags() {\n    return ['Background', 'Text'];\n  }\n\n  _init() {\n    this._Text.on('txLoaded', this._updateBackground.bind(this));\n    super._init();\n  }\n\n  _update() {\n    this._updateBackground();\n    this._updateText();\n  }\n\n  _updateText() {\n    if (this._Text) {\n      this._Text.patch({\n        text: {\n          ...this.style.textStyle,\n          text: this.title\n        }\n      });\n    }\n  }\n\n  _updateBackground() {\n    this._Text.x = this.w / 2;\n    this._Text.y = this.h / 2 + this.style.offsetY;\n\n    this.h = !this.title\n      ? 0\n      : this._Text.renderHeight + 2 * this.style.paddingY;\n    this.w = !this.title ? 0 : this._Text.renderWidth + 2 * this.style.paddingX;\n\n    this._Background.patch({\n      texture: lng.Tools.getRoundRect(\n        // Compensating for the extra two pixels getRoundRect adds.\n        this.w - 2,\n        this.h - 2,\n        this.style.radius,\n        0,\n        null,\n        true,\n        this.style.backgroundColor\n      )\n    });\n    this.signal('loadedLabel', this);\n  }\n\n  set announce(announce) {\n    super.announce = announce;\n  }\n\n  get announce() {\n    return this._announce || (this._Text && this._Text.text.text);\n  }\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const base = theme => ({\n  titleTextStyle: theme.typography.headline3,\n  descriptionTextStyle: theme.typography.body3\n});\n\nexport const tone = theme => ({\n  neutral: {\n    detailsTextStyle: { textColor: theme.color.textNeutralSecondary },\n    descriptionTextStyle: { textColor: theme.color.textNeutral },\n    mode: {\n      disabled: {\n        detailsTextStyle: { textColor: theme.color.textNeutralDisabled },\n        descriptionTextStyle: {\n          textColor: theme.color.textNeutralDisabled\n        }\n      }\n    }\n  },\n  inverse: {\n    detailsTextStyle: { textColor: theme.color.textInverseSecondary },\n    descriptionTextStyle: { textColor: theme.color.textInverse },\n    mode: {\n      disabled: {\n        detailsTextStyle: { textColor: theme.color.textNeutralDisabled },\n        descriptionTextStyle: {\n          textColor: theme.color.textNeutralDisabled\n        }\n      }\n    }\n  },\n  brand: {\n    detailsTextStyle: { textColor: theme.color.textNeutralSecondary },\n    descriptionTextStyle: { textColor: theme.color.textNeutral },\n    mode: {\n      disabled: {\n        detailsTextStyle: { textColor: theme.color.textNeutralDisabled },\n        descriptionTextStyle: {\n          textColor: theme.color.textNeutralDisabled\n        }\n      }\n    }\n  }\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport MetadataBase from '../MetadataBase';\nimport * as styles from './MetadataTile.styles.js';\n\nexport default class MetadataTile extends MetadataBase {\n  static get __componentName() {\n    return 'MetadataTile';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  _updateDetails() {\n    if (this.description) {\n      this._Details.patch({ content: '' });\n      this._Details.alpha = 0;\n      this._Details.visible = false;\n    } else {\n      this._Details.alpha = 1;\n      this._Details.visible = true;\n      super._updateDetails();\n    }\n  }\n\n  _updateDetailsLayout({ h }) {\n    if (this._Details && !this.description) {\n      this._DetailsWrapper.h = h;\n      this._DetailsWrapper.alpha = this.style.alpha;\n    } else {\n      this._DetailsWrapper.h = 0;\n    }\n  }\n\n  set announce(announce) {\n    super.announce = announce;\n  }\n\n  get announce() {\n    return (\n      this._announce || [\n        this._Title && this._Title.announce,\n        (this._Details && this._Details.announce) ||\n          (this._Description && this._Description.announce),\n        this.logoTitle\n      ]\n    );\n  }\n\n  _textH() {\n    const titleH = (this.title && this._Title && this._Title.h) || 0;\n    const detailsH =\n      (this.details &&\n        this._Details &&\n        this._Details.visible &&\n        this._DetailsWrapper.h) ||\n      0;\n    const descriptionH =\n      (this.description && this._Description && this._Description.h) || 0;\n    return titleH + detailsH + descriptionH;\n  }\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const base = theme => ({\n  height: theme.spacer.md,\n  animation: theme.animation.utility,\n  radius: theme.radius.xs\n});\n\nexport const tone = theme => ({\n  neutral: {\n    barColor: theme.color.fillNeutralTertiary,\n    progressColor: theme.color.fillNeutral\n  },\n  inverse: {\n    barColor: theme.color.fillInverseTertiary,\n    progressColor: theme.color.fillInverse\n  },\n  brand: {\n    barColor: theme.color.fillNeutralTertiary,\n    progressColor: theme.color.fillBrand\n  }\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport Base from '../Base';\nimport * as styles from './ProgressBar.styles.js';\n\nexport default class ProgressBar extends Base {\n  static _template() {\n    return {\n      Bar: { zIndex: 1 },\n      Progress: { alpha: 0, zIndex: 2 }\n    };\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  static get __componentName() {\n    return 'ProgressBar';\n  }\n\n  static get properties() {\n    return ['progress'];\n  }\n\n  static get tags() {\n    return ['Bar', 'Progress'];\n  }\n\n  _construct() {\n    super._construct && super._construct();\n    this._progress = 0;\n  }\n\n  _update() {\n    this._updateTextures();\n    this._updateProgress();\n    if (this._progressChanged) {\n      this.fireAncestors('$announce', this.announce);\n      this._progressChanged = false;\n    }\n  }\n\n  _updateTextures() {\n    const w = this._getProgressWidth();\n\n    this._Bar.texture = lng.Tools.getRoundRect(\n      // getRoundRect adds 2 to the width\n      this.w - 2,\n      this.h,\n      this.style.radius,\n      0,\n      0,\n      true,\n      this.style.barColor\n    );\n\n    this._Progress.texture = lng.Tools.getRoundRect(\n      w + 1,\n      this.h,\n      this.style.radius,\n      0,\n      0,\n      true,\n      this.style.progressColor\n    );\n  }\n\n  _updateProgress() {\n    const w = this._getProgressWidth();\n\n    this._Progress.smooth = {\n      w: [w, this.style.animation],\n      alpha: Number(w > 0)\n    };\n  }\n\n  _setProgress(progress) {\n    this._progressChanged = progress !== this._progress;\n    return progress;\n  }\n\n  set announce(announce) {\n    super.announce = announce;\n  }\n\n  get announce() {\n    if (this._announce !== undefined && this._announce !== null) {\n      return this._announce;\n    }\n\n    let progress = this.progress;\n    if (progress > 1) {\n      progress = 1;\n    } else if (progress < 0) {\n      progress = 0;\n    }\n    return `${Math.round(progress * 100)}%`;\n  }\n\n  _getProgressWidth() {\n    const p = this.w * this._progress;\n    const w = p <= 0 ? 0 : Math.min(p, this.w);\n    return w;\n  }\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const base = theme => ({\n  animationEntrance: theme.animation.standardEntrance,\n  animationExit: theme.animation.standardExit,\n  logoWidth: theme.spacer.lg * 5,\n  logoHeight: theme.spacer.xxl + theme.spacer.md,\n  metadataLocation: 'standard',\n  paddingX: theme.spacer.xl,\n  paddingY: theme.spacer.lg,\n  paddingYProgress: theme.spacer.xl,\n  paddingYBetweenContent: theme.spacer.md,\n  radius: theme.radius.md,\n  alpha: theme.alpha.primary\n});\n\nexport const tone = theme => ({\n  neutral: {\n    mode: {\n      focused: {\n        backgroundColor: theme.color.interactiveNeutralFocusSoft\n      }\n    }\n  },\n  inverse: {\n    mode: {\n      focused: {\n        backgroundColor: theme.color.interactiveInverseFocusSoft\n      }\n    }\n  },\n  brand: {\n    mode: {\n      focused: {\n        backgroundColor: theme.color.interactiveBrandFocusSoft\n      }\n    }\n  }\n});\n\nexport const mode = theme => ({\n  disabled: {\n    alpha: theme.alpha.inactive\n  }\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport Artwork from '../Artwork';\nimport Badge from '../Badge';\nimport Checkbox from '../Checkbox';\nimport Label from '../Label';\nimport MetadataTile from '../MetadataTile';\nimport ProgressBar from '../ProgressBar';\nimport * as styles from './Tile.styles';\nimport Surface from '../Surface';\nimport Icon from '../Icon';\n\nexport default class Tile extends Surface {\n  static get __componentName() {\n    return 'Tile';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  static _template() {\n    return {\n      ...super._template(), // Make sure surface elements are patched\n      Tile: {\n        Artwork: {\n          type: Artwork,\n          signals: {\n            imageLoaded: '_imageLoaded'\n          },\n          mount: 0.5\n        },\n        Content: {\n          mount: 0.5\n        }\n      }\n    };\n  }\n\n  static get properties() {\n    return [\n      'artwork',\n      'badge',\n      'checkbox',\n      'circle',\n      'label',\n      'logo',\n      'metadata',\n      'metadataLocation',\n      'persistentMetadata',\n      'progressBar',\n      'src'\n    ];\n  }\n\n  static get aliasStyles() {\n    return [\n      { prev: 'iconHeight', curr: 'logoHeight' },\n      { prev: 'iconWidth', curr: 'logoWidth' }\n    ];\n  }\n\n  static get aliasProperties() {\n    return [{ prev: 'iconSrc', curr: 'logo' }];\n  }\n\n  static get tags() {\n    return [\n      ...super.tags,\n      'Artwork',\n      'Content',\n      'Tile',\n      { name: 'Badge', path: 'Content.Badge' },\n      { name: 'Checkbox', path: 'Content.Checkbox' },\n      { name: 'Logo', path: 'Content.Logo' },\n      { name: 'Metadata', path: 'Content.Metadata' },\n      { name: 'ProgressBar', path: 'Content.ProgressBar' },\n      { name: 'Label', path: 'Content.Label' }\n    ];\n  }\n\n  /**\n   * When metadata is displayed below the Tile we need a way to tell the containing columns that it exists\n   * in order for it to layout properly. This approach will not however show up in the DOM inspector\n   */\n\n  set announce(announce) {\n    super.announce = announce;\n  }\n\n  get announce() {\n    return (\n      this._announce || [\n        this._Metadata && this._Metadata.announce,\n        this._Badge && this._Badge.announce,\n        this._Label && this._Label.announce,\n        this._ProgressBar && this._ProgressBar.announce\n      ]\n    );\n  }\n\n  _update() {\n    super._update();\n    this._updateTileColor();\n    this._updateContent();\n    this._updateArtwork();\n    this._updateBadge();\n    this._updateLabel();\n    this._updateCheckbox();\n    this._updateProgressBar();\n    this._updateLogo();\n    this._updateMetadata();\n  }\n\n  /* ------------------------------ Tile ------------------------------ */\n\n  set h(v) {\n    super.h = v;\n  }\n\n  get h() {\n    return !this._isInsetMetadata\n      ? super.h + ((this._Metadata && this._Metadata.h) || 0)\n      : super.h;\n  }\n\n  get innerH() {\n    return this._h; // Ensure that surface respects the correct height when metadata is displayed below\n  }\n\n  get _gradient() {\n    if (this._isCircleLayout) return false;\n    return Boolean(\n      this._isInsetMetadata && this._hasMetadata && this._shouldShowMetadata\n    );\n  }\n\n  get _isCircleLayout() {\n    return Boolean(this._itemLayout && this._itemLayout.circle);\n  }\n\n  get _foregroundDefaultWidth() {\n    return parseFloat(this._w / this._h).toFixed(2) ===\n      parseFloat(16 / 9).toFixed(2)\n      ? this.innerW * 0.5\n      : this.innerW * 0.75;\n  }\n\n  _updateTileColor() {\n    this._Tile.alpha = this.style.alpha;\n  }\n\n  _updateContent() {\n    const itemContainerPatch = {\n      h: this._h,\n      w: this._w,\n      x: this._w / 2,\n      y: this._h / 2\n    };\n\n    // Make sure container animates with same values as badge, label, and metadata\n    this.applySmooth(\n      this._Content,\n      itemContainerPatch,\n      Object.keys(itemContainerPatch).reduce((acc, prop) => {\n        acc[prop] = [\n          itemContainerPatch[prop],\n          this._isFocusedMode\n            ? this.style.animationEntrance\n            : this.style.animationExit\n        ];\n        return acc;\n      }, {})\n    );\n  }\n\n  /* ------------------------------ Logo ------------------------------ */\n\n  _updateLogo() {\n    const logoObject = {\n      w: this.style.logoWidth,\n      h: this.style.logoHeight,\n      icon: this.logo,\n      alpha: this.style.alpha,\n      mountY: 1,\n      x: this.style.paddingX,\n      y: this._calculateLogoYPosition()\n    };\n\n    if (this.logo && (this.persistentMetadata || this._isFocusedMode)) {\n      if (!this._Logo) {\n        logoObject.type = Icon;\n      }\n      this.patch({ Icon: logoObject });\n    } else {\n      this.patch({ Icon: undefined });\n    }\n  }\n\n  _calculateLogoYPosition() {\n    if (this._isInsetMetadata) {\n      return this._metadataY - (this._Metadata ? this._Metadata.h : 0);\n    } else {\n      return this._progressBarY\n        ? this._progressBarY - this.style.paddingYBetweenContent\n        : this._h - this.style.paddingY;\n    }\n  }\n  /* ------------------------------ Artwork ------------------------------ */\n\n  _updateArtwork() {\n    // ensure a nested artwork src takes precedence over the class's src setter,\n    // but that if src is undefined in both the setter and artwork object,\n    // we don't incorrectly pass \"src: undefined\" to the Artwork component)\n    this._Artwork.patch({\n      mode: this.mode,\n      h: this._h,\n      w: this._w,\n      x: this._w / 2,\n      y: this._h / 2,\n      src: this.src,\n      ...(this.artwork || {}),\n      style: {\n        radius: this.style?.radius,\n        ...this.artwork?.style\n      },\n      gradient: this._gradient,\n      shouldScale: this._isFocusedMode\n    });\n  }\n\n  _getSrc() {\n    return (this.artwork && this.artwork.src) || this._src;\n  }\n\n  _imageLoaded() {\n    this._Background.alpha = 0; // Since the image is loaded the surface does not need to be shown\n  }\n\n  /* ------------------------------ Badge ------------------------------ */\n\n  _updateBadge() {\n    // Remove Badge if no longer required\n    if (!this.badge?.title || this._isCircleLayout) {\n      if (this._Badge) {\n        this._Content.patch({\n          Badge: undefined\n        });\n      }\n      return;\n    }\n\n    const badgePatch = {\n      ...this.badge,\n      mode: this.mode,\n      x: this.style.paddingX,\n      y: this.style.paddingY,\n      alpha: this._shouldShowBadgeLabel ? 1 : 0.001\n    };\n\n    if (!this._Badge) {\n      this._Content.patch({\n        Badge: {\n          type: Badge,\n          ...badgePatch,\n          signals: {\n            loadedBadge: '_updateBadge'\n          }\n        }\n      });\n      return;\n    } else {\n      this._Badge.patch(badgePatch);\n    }\n    this.applySmooth(this._Badge, badgePatch, {\n      ...badgePatch,\n      ...this._badgeLabelTransitions // Badge and Label should animate in with the same values\n    });\n  }\n\n  /* ------------------------------ Label  ------------------------------ */\n\n  _updateLabel() {\n    if (!this.label?.title || this._isCircleLayout) {\n      if (this._Label) {\n        this._Content.patch({\n          Label: undefined\n        });\n      }\n      return;\n    }\n    const labelPatch = {\n      ...this.label,\n      mode: this.mode,\n      x: this._w - this.style.paddingX,\n      y: this.style.paddingY,\n      alpha: this._shouldShowBadgeLabel ? 1 : 0.001\n    };\n\n    if (!this._Label) {\n      this._Content.patch({\n        Label: {\n          type: Label,\n          mountX: 1,\n          ...labelPatch,\n          signals: {\n            loadedLabel: '_updateLabel'\n          }\n        }\n      });\n      return;\n    } else {\n      this._Label.patch(labelPatch);\n    }\n\n    this.applySmooth(this._Label, labelPatch, {\n      ...labelPatch,\n      x: [\n        labelPatch.x,\n        this._shouldShowBadgeLabel\n          ? this.style.animationEntrance\n          : this.style.animationExit\n      ],\n      ...this._badgeLabelTransitions\n    });\n  }\n\n  /* ------------------------------ Badge & Label ------------------------------ */\n\n  // Badge and Label should animate in with the same values\n  get _shouldShowBadgeLabel() {\n    return (\n      this.persistentMetadata || (this._isFocusedMode && !this._isCircleLayout)\n    );\n  }\n\n  get _badgeLabelTransitions() {\n    return {\n      y: [\n        this._shouldShowBadgeLabel ? this.style.paddingY : 0,\n        this._shouldShowBadgeLabel\n          ? this.style.animationEntrance\n          : this.style.animationExit\n      ],\n      alpha: [\n        this._shouldShowBadgeLabel ? 1 : 0.001,\n        this._shouldShowBadgeLabel\n          ? this.style.animationEntrance\n          : this.style.animationExit\n      ]\n    };\n  }\n\n  /* ------------------------------ Checkbox ------------------------------ */\n\n  _updateCheckbox() {\n    // Remove Checkbox if no longer required\n    if (\n      !(typeof this.checkbox?.checked === 'boolean' && this.checkbox.checked) ||\n      this._isCircleLayout\n    ) {\n      if (this._Checkbox) {\n        this._Content.patch({\n          Checkbox: undefined\n        });\n      }\n      return;\n    }\n\n    const checkboxPatch = {\n      ...this.checkbox,\n      mode: this.mode,\n      x: this._w - this.style.paddingX,\n      y: this._h - this.style.paddingY\n    };\n\n    if (!this._Checkbox) {\n      this._Content.patch({\n        Checkbox: {\n          ...checkboxPatch,\n          type: Checkbox,\n          mount: 1\n        }\n      });\n      return;\n    }\n\n    this.applySmooth(this._Checkbox, checkboxPatch);\n  }\n  /* ------------------------------ Progress Bar ------------------------------ */\n\n  get _progressBarY() {\n    // this accessor gets used to determine where to position the metadata, so\n    // if there is a ProgressBar that is not being alpha-ed out\n    // (because of the progress being set to 0),\n    // use the y position of the ProgressBar\n    // if the ProgressBar is currently animating into place, use the future value\n    // otherwise, return 0\n    return (\n      (this._ProgressBar &&\n      this._ProgressBar._getTransition('alpha')._targetValue !== 0\n        ? this._ProgressBar._getTransition('y')._targetValue ||\n          this._ProgressBar.y\n        : 0) || 0\n    );\n  }\n\n  _updateProgressBar() {\n    // Remove ProgressBar if no longer required\n    if (\n      !(\n        typeof this.progressBar?.progress === 'number' &&\n        this.progressBar.progress\n      ) ||\n      this._isCircleLayout\n    ) {\n      if (this._ProgressBar) {\n        if (this.shouldSmooth) {\n          this._ProgressBar._getTransition('alpha').once('finish', () => {\n            this._removeProgressBar();\n          });\n          this._ProgressBar.smooth = { alpha: 0 };\n        } else {\n          this._removeProgressBar();\n        }\n      }\n      return;\n    }\n\n    if (this.progressBar.progress > 0) {\n      const progressPatch = {\n        ...this.progressBar,\n        mode: this.mode,\n        w: this._w - this.style.paddingX * 2,\n        x: this._w / 2,\n        y: this._h - this.style.paddingYProgress\n      };\n\n      if (!this._ProgressBar) {\n        this._Content.patch({\n          ProgressBar: {\n            ...progressPatch,\n            type: ProgressBar,\n            mountX: 0.5,\n            mountY: 1,\n            alpha: this._hasMetadata && this.shouldSmooth ? 0.001 : 1\n          }\n        });\n\n        if (this.shouldSmooth) {\n          this._ProgressBar.smooth = {\n            alpha: [\n              1,\n              { delay: this.style.animationEntrance.duration } // Wait for metadata to animate in\n            ]\n          };\n        }\n        return;\n      }\n\n      // TODO: See if we need to add animation to every property individually or can set parent\n      this.applySmooth(\n        this._ProgressBar,\n        progressPatch,\n        Object.keys(progressPatch).reduce((acc, prop) => {\n          acc[prop] = [\n            progressPatch[prop],\n            this._isFocusedMode\n              ? this.style.animationEntrance\n              : this.style.animationExit\n          ];\n          return acc;\n        }, {})\n      );\n    }\n  }\n  _removeProgressBar() {\n    this._Content.patch({ ProgressBar: undefined });\n    this._updateMetadata();\n  }\n\n  /* ------------------------------ Metadata  ------------------------------ */\n\n  // all the logic on whether the metaData should show\n  get _shouldShowMetadata() {\n    return (\n      this._hasMetadata &&\n      ((this.persistentMetadata && !this._isInsetMetadata) ||\n        (this._isFocusedMode && !this._isInsetMetadata) ||\n        ((this.persistentMetadata || this._isFocusedMode) &&\n          this._isInsetMetadata &&\n          !this._isCircleLayout))\n    );\n  }\n\n  get _isInsetMetadata() {\n    return this.metadataLocation === 'inset';\n  }\n\n  get _metadataTransitions() {\n    return {\n      y: [\n        this._shouldShowMetadata\n          ? this._metadataY\n          : this._h + this.style.paddingY,\n        this._shouldShowMetadata\n          ? this.style.animationEntrance\n          : this.style.animationExit\n      ],\n      alpha: [\n        this._metadataAlpha,\n        this._shouldShowMetadata\n          ? this.style.animationEntrance\n          : this.style.animationExit\n      ]\n    };\n  }\n\n  get _hasMetadata() {\n    return MetadataTile.properties.some(\n      prop => this.metadata && this.metadata[prop]\n    );\n  }\n\n  get _metadataY() {\n    return this._isInsetMetadata\n      ? this._progressBarY\n        ? this._progressBarY - this.style.paddingYBetweenContent\n        : this._h - this.style.paddingY\n      : this._h + this.style.paddingY;\n  }\n\n  get _metadataAlpha() {\n    return this._shouldShowMetadata ? 1 : 0.001;\n  }\n\n  get _metadataPatch() {\n    return {\n      mode: this.mode,\n      alpha: this._metadataAlpha,\n      mountX: 0.5,\n      mountY: this._isInsetMetadata ? 1 : 0,\n      marquee: this._isFocusedMode,\n      w: this._w - this.style.paddingX * 2,\n      x: this._w / 2,\n      y:\n        this.persistentMetadata ||\n        !(this._isInsetMetadata && this._isFocusedMode)\n          ? this._metadataY\n          : this._h + this.style.paddingY,\n      ...(this.metadata || {})\n    };\n  }\n\n  _getMetadataLocation() {\n    return this.style.metadataLocation ?? this._metadataLocation;\n  }\n\n  _setMetadataLocation(metadataLocation) {\n    if (metadataLocation) {\n      this.style = { metadataLocation };\n    }\n    return metadataLocation;\n  }\n\n  _updateMetadata() {\n    if (!this._hasMetadata) {\n      this._Content.patch({ Metadata: undefined });\n      return;\n    }\n\n    if (!this._Metadata && this._hasMetadata) {\n      // Patch in Metadata for the first time\n      this._Content.patch({\n        Metadata: {\n          type: MetadataTile,\n          signals: {\n            updateComponentDimensions: '_metadataLoaded'\n          },\n          ...this._metadataPatch\n        }\n      });\n\n      return;\n    }\n    // if none of the above apply patch in metadataPatch\n    this._Metadata.patch(this._metadataPatch); // Metadata should never be patched with smooth\n    // then call animateMetadata\n    this._animateMetadata();\n  }\n\n  _animateMetadata() {\n    if (!this._Metadata) {\n      return;\n    }\n\n    this.applySmooth(\n      this._Metadata,\n      this._metadataPatch,\n      this._metadataTransitions\n    );\n\n    if (!this._isFocusedMode) {\n      this._resetMarqueeAnimation();\n    }\n  }\n\n  _metadataLoaded() {\n    this._animateMetadata();\n    this._updateLogo();\n    // Send event to columns/rows that the height has been updated since metadata will be displayed below the Tile\n    if (!this._isInsetMetadata) {\n      this.fireAncestors('$itemChanged');\n    }\n  }\n\n  /* ------------------------------ Marquee  ------------------------------ */\n\n  _resetMarqueeAnimation() {\n    const alphaTransition = this._Metadata._getTransition('alpha');\n    if (alphaTransition) {\n      alphaTransition.on('finish', () => {\n        if (this._Metadata) {\n          this._Metadata.resetMarquee();\n        }\n      });\n    } else {\n      this._Metadata.resetMarquee();\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}