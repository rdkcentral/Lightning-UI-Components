{"version":3,"file":"6476.7f857c0b.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AAGA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AA3KA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Button/ButtonSmall.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Button/ButtonSmall.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Control/Control.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Control/Control.styles.js"],"sourcesContent":["/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { getWidthByColumnSpan } from '../../utils';\n\nexport const base = theme => ({\n  minWidth: getWidthByColumnSpan(theme, 1),\n  paddingX: theme.spacer.xxl,\n  paddingXNoTitle: theme.spacer.lg,\n  paddingY: theme.spacer.lg,\n  textStyle: theme.typography.button2\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport Button from './Button';\nimport * as styles from './ButtonSmall.styles';\n\nexport default class ButtonSmall extends Button {\n  static get __componentName() {\n    return 'ButtonSmall';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ButtonSmall } from '../Button';\nimport Icon from '../Icon';\nimport * as styles from './Control.styles';\n\nexport default class Control extends ButtonSmall {\n  static get __componentName() {\n    return 'Control';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  static get properties() {\n    return [...super.properties, 'icon', 'logo', 'shouldCollapse'];\n  }\n\n  static get aliasStyles() {\n    return [{ prev: 'titlePadding', curr: 'contentSpacing' }];\n  }\n\n  _update() {\n    // ordering this way to make sure that this._Title is defined so the title visibility can be set properly when _updateCollapseStatus is called\n    this._updatePrefixStyle();\n    super._update();\n    this._updateCollapseStatus();\n  }\n\n  _updateCollapseStatus() {\n    if (this._Title) {\n      this._Title.visible = !this._collapse;\n    }\n  }\n\n  // if user provides styling of either logo or icon, apply the style to the respected element\n  _updatePrefixStyle() {\n    if (this._prefix) {\n      // checking logo first since it takes precedence\n      if (this.logo) {\n        this._updatePrefixObj(this.logo, {\n          style: { color: undefined, ...this.style.logoStyle }\n        });\n      } else if (this.icon) {\n        this._updatePrefixObj(this.icon, { style: this.style.iconStyle });\n      }\n    }\n  }\n\n  // optimization\n  // sets Title's x and mountX values\n  _patchTitle(x, mountX) {\n    this._Title.patch({\n      x,\n      mountX\n    });\n  }\n\n  _updateContentPosition() {\n    if (this._prefix && this._Title) {\n      // placing prefix always to the left if title is present\n      // justification should only apply to title in this case\n      this._Content.patch({\n        mountX: 0,\n        x: this._paddingLeft\n      });\n\n      switch (this._justify) {\n        case 'left':\n          this._patchTitle(0, 0);\n          break;\n        case 'right':\n          if (this.w < this._Prefix.w + this._Title.w) {\n            this._patchTitle(0, 0);\n          } else {\n            const leftOverSpace =\n              this.w -\n              (this._paddingLeft +\n                this._paddingRight +\n                this._Prefix.w +\n                this.style.contentSpacing);\n\n            this._patchTitle(leftOverSpace, 1);\n          }\n          break;\n        case 'center':\n        default:\n          if (this.fixed) {\n            // if the component width is less than the prefix and title then we go to the default padding on left and right of title\n            if (this.w < this._Prefix.w + this._Title.w) {\n              this._patchTitle(0, 0);\n            } else {\n              const middle =\n                (this.w -\n                  (this._paddingLeft + this._Prefix.w + this._paddingRight)) /\n                2;\n              this._patchTitle(middle, 0.5);\n            }\n          } else if (this._Prefix !== undefined) {\n            const middle =\n              (this.w -\n                (this._paddingLeft +\n                  this._Prefix.w +\n                  this.style.contentSpacing +\n                  this._paddingRight)) /\n              2;\n            this._patchTitle(middle, 0.5);\n          }\n          break;\n      }\n    } else {\n      super._updateContentPosition();\n      this._Title && this._patchTitle(0, 0); // RESET Title back to original position\n    }\n  }\n\n  // does nothing if a prefix property is passed in for Control\n  _setPrefix() {\n    return;\n  }\n\n  // does nothing if a suffix property is passed in for Control\n  _setSuffix() {\n    return;\n  }\n\n  // optimization\n  // turning prefix property setter into a function since functionality is repeated\n  _updatePrefixObj(icon, props = {}) {\n    this._prefix = {\n      type: Icon,\n      icon,\n      ...props\n    };\n  }\n\n  _setIcon(icon) {\n    if (!this.logo) {\n      // if icon is defined then set it otherwise set prefix to be undefined\n      if (icon) {\n        this._updatePrefixObj(icon, { style: this.style.iconStyle });\n      } else {\n        this._prefix = icon;\n      }\n    }\n    return icon;\n  }\n\n  _setLogo(logo) {\n    if (logo) {\n      this._updatePrefixObj(logo, {\n        style: { color: undefined, ...this.style.logoStyle }\n      });\n      // if logo is set to undefined but an icon is provided, display the icon\n    } else if (this.icon) {\n      this._updatePrefixObj(this.icon, { style: this.style.iconStyle });\n    } else {\n      this._prefix = logo;\n    }\n    return logo;\n  }\n\n  get _paddingLeft() {\n    return this.logo ? this.style.paddingXNoTitle : this.style.paddingX;\n  }\n\n  get _paddingRight() {\n    return this.logo && (!this._hasTitle || this._collapse)\n      ? this.style.paddingXNoTitle\n      : this.style.paddingX;\n  }\n\n  get _collapse() {\n    return this.shouldCollapse && !this._isFocusedMode;\n  }\n\n  get _announceComponentName() {\n    return Control.__componentName;\n  }\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const base = theme => {\n  const paddingX = theme.spacer.lg;\n  const radius = theme.radius.xl;\n  const logoRadius = Math.max(radius - paddingX / 2, 0);\n\n  return {\n    height: theme.spacer.md * 8,\n    iconStyle: {\n      radius: radius,\n      width: theme.spacer.xxxl,\n      height: theme.spacer.xxxl\n    },\n    logoStyle: {\n      radius: logoRadius,\n      width: theme.spacer.md * 7,\n      height: theme.spacer.md * 6\n    },\n    minWidth: theme.spacer.md * 9,\n    paddingX,\n    paddingXNoTitle: theme.spacer.md,\n    prefixPadding: theme.spacer.md,\n    radius,\n    contentSpacing: theme.spacer.md\n  };\n};\n"],"names":[],"sourceRoot":""}