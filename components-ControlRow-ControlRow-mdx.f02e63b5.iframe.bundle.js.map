{"version":3,"file":"components-ControlRow-ControlRow-mdx.f02e63b5.iframe.bundle.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;AACA","sources":["webpack://lightning-ui-docs/../../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/ControlRow/ControlRow.mdx","webpack://lightning-ui-docs/../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://lightning-ui-docs/../../../node_modules/react/jsx-runtime.js"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\n/*prettier-ignore*/\n/*\nCopyright 2023 Comcast Cable Communications Management, LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nSPDX-License-Identifier: Apache-2.0\n\\*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/Lightning-UI-Components/Lightning-UI-Components/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {ArgTypes, Meta, Title} from '@storybook/blocks';\nimport * as ControlRowStories from './ControlRow.stories';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    pre: \"pre\",\n    h3: \"h3\",\n    strong: \"strong\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [\"\\n\", \"\\n\", \"\\n\", _jsx(Meta, {\n      of: ControlRowStories\n    }), \"\\n\", _jsx(Title, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"ControlRow\"\n      }), \" component renders a\\n\", _jsx(_components.a, {\n        href: \"/docs/components-titlerow--basic\",\n        children: \"TitleRow\"\n      }), \" component with optional left controls content items, and right controls\\nwhich are rendered as row items in that order.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"source\",\n      children: \"Source\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/@lightningjs/ui-components/src/components/ControlRow/ControlRow.js\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/@lightningjs/ui-components/src/components/ControlRow/ControlRow.js\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"usage\",\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"ControlRow\"\n      }), \" accepts all \", _jsx(_components.a, {\n        href: \"/docs/components-titlerow--basic#properties\",\n        children: \"properties supported by TitleRow\"\n      }), \"\\nas well as optional \", _jsx(_components.code, {\n        children: \"leftControls\"\n      }), \", \", _jsx(_components.code, {\n        children: \"contentItems\"\n      }), \", and \", _jsx(_components.code, {\n        children: \"rightControls\"\n      }), \" properties.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"import { ControlRow } from '@lightningjs/ui-components';\\n\\nclass Example extends lng.Component {\\n  static _template() {\\n    return {\\n      ControlRow: {\\n        type: ControlRow,\\n        leftControls: [\\n          // list of components to display as left controls\\n        ],\\n        contentItems: [\\n          // list of components to display as content items\\n        ],\\n        rightControls: [\\n          // list of components to display as right controls\\n        ]\\n      }\\n    };\\n  }\\n  _getFocused() {\\n    return this.tag('ControlRow');\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"lazyloading\",\n      children: \"lazyLoading\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"ControlRow\"\n      }), \" component can be configured for lazy loading content items by utilizing the \", _jsx(_components.code, {\n        children: \"lazyLoadBuffer\"\n      }), \" property and \", _jsx(_components.code, {\n        children: \"'loadMoreItems'\"\n      }), \" signal. When a positive number is assigned to \", _jsx(_components.code, {\n        children: \"ControlRow.lazyLoadBuffer\"\n      }), \", the \", _jsx(_components.code, {\n        children: \"ControlRow\"\n      }), \" will emit a signal, \", _jsx(_components.code, {\n        children: \"'loadMoreItems'\"\n      }), \". The \", _jsx(_components.code, {\n        children: \"lazyLoadBuffer\"\n      }), \" property defines how many items before the last \", _jsx(_components.code, {\n        children: \"contentItems\"\n      }), \" is the index at which \", _jsx(_components.code, {\n        children: \"'loadMoreItems'\"\n      }), \" will be emitted. The \", _jsx(_components.code, {\n        children: \"ControlRow\"\n      }), \" does not include further side effects to this signal being emitted, but allows parent components to listen for that signal and add further functionality to the component (ex. fetching more content items and appending them to the ControlRow via the \", _jsx(_components.code, {\n        children: \"ControlRow.addContentItems\"\n      }), \" method). If the number of content items in the \", _jsx(_components.code, {\n        children: \"ControlRow\"\n      }), \" is updated (adding or removing content items), the new length of content items will be used to calculate at which index the next \", _jsx(_components.code, {\n        children: \"'loadMoreItems'\"\n      }), \" signal is emitted.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"class LazyLoad extends lng.Component {\\n  static _template() {\\n    return {\\n      LazyLoad: {\\n        type: ControlRow,\\n        leftControls: [leftControlA, leftControlB],\\n        contentItems: [contentItemA, contentItemB, contentItemC],\\n        rightControls: [rightControlA, rightControlB],\\n        // The loadMoreItems signal will be emitted when the content item 1 before the last content item is focused.\\n        lazyLoadBuffer: 1,\\n        // When ControlRow emits the loadMoreItems signal, call this._loadMore().\\n        signals: {\\n          loadMoreItems: '_loadMore'\\n        }\\n      }\\n    };\\n  }\\n\\n  _loadMore() {\\n    // fetch more items from an API\\n    // append those items to the ControlRow via this.tag('ControlRow').addContentItems(itemsToAdd)\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"api\",\n      children: \"API\"\n    }), \"\\n\", _jsx(ArgTypes, {\n      of: ControlRowStories\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"properties\",\n      children: \"Properties\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsxs(_components.strong, {\n        children: [_jsx(_components.code, {\n          children: \"ControlRow\"\n        }), \" is a subclass of the \", _jsx(_components.a, {\n          href: \"/docs/components-titlerow--basic\",\n          children: _jsx(_components.code, {\n            children: \"TitleRow\"\n          })\n        })]\n      }), \",\\nso allows setting all properties that are available on \", _jsx(_components.code, {\n        children: \"TitleRow\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"name\"\n          }), _jsx(_components.th, {\n            children: \"type\"\n          }), _jsx(_components.th, {\n            children: \"required\"\n          }), _jsx(_components.th, {\n            children: \"default\"\n          }), _jsx(_components.th, {\n            children: \"description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"leftControls\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"Component[]\"\n            })\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"[]\"\n          }), _jsx(_components.td, {\n            children: \"Controls displayed at left of row of items.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"contentItems\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"Component[]\"\n            })\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"[]\"\n          }), _jsx(_components.td, {\n            children: \"Items displayed in row. Array of patch objects.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"rightControls\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"Component[]\"\n            })\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"[]\"\n          }), _jsx(_components.td, {\n            children: \"Controls displayed at right of row of items.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"extraItemSpacing\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"theme.spacer.lg\"\n          }), _jsx(_components.td, {\n            children: \"additional space to be added between controls and content items\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"lazyLoadBuffer\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"0\"\n          }), _jsx(_components.td, {\n            children: \"Number of content items prior to last content items where a \\\"loadMoreItems\\\" signal is emitted\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"methods\",\n      children: \"Methods\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"loadmoreitems\",\n      children: \"loadMoreItems\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By default fires a signal, \", _jsx(_components.code, {\n        children: \"'loadMoreItems'\"\n      }), \", when an item is selected after an index determined by the \", _jsx(_components.code, {\n        children: \"lazyLoadBuffer\"\n      }), \" property\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"addcontentitemsitems-component\",\n      children: \"addContentItems(items: Component[])\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Adds items to the end of the row\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"addcontentitemsatitems-component-index-number\",\n      children: \"addContentItemsAt(items: Component[], index: number)\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Adds items at a specified index of the row\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"removecontentitematindex-number\",\n      children: \"removeContentItemAt(index: number)\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Removes an item at the specified index\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"addleftcontrolscontrols-component--componentpatchobjcontrolsmall\",\n      children: [\"addLeftControls(controls: Component[] || \", _jsx(_components.code, {\n        children: \"ComponentPatchObj<ControlSmall>[]\"\n      }), \")\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Adds controls to the end of the left controls\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"addleftcontrolsatcontrols-component--componentpatchobjcontrolsmall-index-number\",\n      children: [\"addLeftControlsAt(controls: Component[] || \", _jsx(_components.code, {\n        children: \"ComponentPatchObj<ControlSmall>[]\"\n      }), \", index: number)\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Adds controls at a specified index of the left controls\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"removeleftcontrolatindex-number\",\n      children: \"removeLeftControlAt(index: number)\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Removes a left control at the specified index\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"addrightcontrolscontrols-component--componentpatchobjcontrolsmall\",\n      children: [\"addRightControls(controls: Component[] || \", _jsx(_components.code, {\n        children: \"ComponentPatchObj<ControlSmall>[]\"\n      }), \")\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Adds controls to the end of the right controls\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"addrightcontrolsatcontrols-component--componentpatchobjcontrolsmall-index-number\",\n      children: [\"addRightControlsAt(controls: Component[] || \", _jsx(_components.code, {\n        children: \"ComponentPatchObj<ControlSmall>[]\"\n      }), \", index: number)\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Adds controls at a specified index of the right controls\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"removerightcontrolatindex-number\",\n      children: \"removeRightControlAt(index: number)\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Removes a right control at the specified index\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"signals\",\n      children: \"Signals\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"loadmoreitems-1\",\n      children: \"loadMoreItems\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Emitted when an item is selected after an index determined by the \", _jsx(_components.code, {\n        children: \"lazyLoadBuffer\"\n      }), \" property.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":[],"sourceRoot":""}