{"version":3,"file":"components-Input-Input-mdx.e3e19a73.iframe.bundle.js","mappingsvsources":["webpack://lightning-ui-docs/../../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/docs/utils.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Input/Input.mdx","webpack://lightning-ui-docs/../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://lightning-ui-docs/../../../node_modules/react/jsx-runtime.js"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport utils from '../utils';\n\n// creates Mode control on stories\nexport const createModeControl = ({ options, summaryValue } = {}) => {\n  return {\n    mode: {\n      control: 'radio',\n      options:\n        options && Array.isArray(options)\n          ? ['unfocused', ...options]\n          : ['unfocused', 'focused', 'disabled'],\n      description: 'Sets the visual mode for the component',\n      table: {\n        defaultValue: { summary: summaryValue }\n      },\n      type: { name: 'string', required: true }\n    }\n  };\n};\n\n/**\n * @param {object} config Parameters for generating nested args: { argsObj, targetProp, include, overrides }\n */\nexport function nestedArgs(config) {\n  const { argsObj, targetProp, include, overrides } = config;\n  return Object.keys(argsObj).reduce((acc, curr) => {\n    if (!include.includes(curr)) return acc;\n    return {\n      ...acc,\n      [targetProp + '_' + curr]:\n        (overrides.args && overrides.args[curr]) || argsObj[curr]\n    };\n  }, {});\n}\n\n/**\n * @param {object} config Parameters for generating nested arg types: { argsObj, targetProp, include, overrides }\n */\nexport function nestedArgTypes(config) {\n  const { argTypesObj, targetProp, include, overrides } = config;\n  return Object.keys(argTypesObj).reduce((acc, curr) => {\n    if (!include.includes(curr)) return acc;\n    return {\n      ...acc,\n      [targetProp + '_' + curr]: {\n        // Namespaced to avoid conflicts\n        name: curr,\n        ...argTypesObj[curr],\n        ...overrides[curr],\n        table: {\n          ...(argTypesObj[curr].table || {}),\n          ...(overrides[curr] && overrides[curr].table),\n          category: targetProp\n        }\n      }\n    };\n  }, {});\n}\n\nexport const prevValues = {};\n\n/**\n * @param {object} config Parameters for generating nested arg actions: { componentName, argsTypeObj, targetProp, include, overrides }\n */\nexport function nestedArgActions(config) {\n  const { componentName, argTypesObj, targetProp, include, overrides } = config;\n  return Object.keys(argTypesObj).reduce((acc, curr) => {\n    if (!include.includes(curr)) return acc;\n    return {\n      ...acc,\n      [targetProp + '_' + curr]: (value, component) => {\n        component.tag(componentName).patch({\n          [targetProp]: {\n            ...prevValues[targetProp],\n            [curr.replace(targetProp + '_', '')]:\n              value === 'none'\n                ? undefined\n                : (overrides && overrides[curr]) || value // There are issues with merging objects here\n          }\n        });\n        // Allow patching to work with nested objects\n        if (!prevValues[targetProp]) {\n          prevValues[targetProp] = {};\n        }\n        prevValues[targetProp][curr.replace(targetProp + '_', '')] =\n          value === 'none'\n            ? undefined\n            : (overrides && overrides[curr]) || value;\n      }\n    };\n  }, {});\n}\n\n/**\n * @param {object} config Parameters for generating story: { componentName, baseStory, subStory, targetProperty, include, options }\n */\nexport function generateSubStory(config) {\n  config.baseStory.args = {\n    ...config.baseStory.args,\n    ...nestedArgs({\n      argsObj: config.subStory.args || {},\n      targetProp: config.targetProperty,\n      include: config.include,\n      overrides: (config.overrides && config.overrides.args) || {}\n    })\n  };\n\n  config.baseStory.argTypes = {\n    ...config.baseStory.argTypes,\n    ...nestedArgTypes({\n      argTypesObj: config.subStory.argTypes || {},\n      targetProp: config.targetProperty,\n      include: config.include,\n      overrides: (config.overrides && config.overrides.argTypes) || {}\n    })\n  };\n\n  if (\n    !(\n      config.baseStory &&\n      config.baseStory.parameters &&\n      config.baseStory.parameters.argActions\n    )\n  ) {\n    config.baseStory.parameters = {\n      argActions: {}\n    };\n  }\n\n  config.baseStory.parameters.argActions = {\n    ...config.baseStory.parameters.argActions,\n    ...nestedArgActions({\n      componentName: config.componentName,\n      argTypesObj: config.subStory.argTypes || {},\n      targetProp: config.targetProperty,\n      include: config.include,\n      overrides: (config.overrides && config.overrides.argActions) || {}\n    })\n  };\n}\n\n// used to create links to Lightning docs given an id\nexport const DocsLink = ({ children, id }) => {\n  const docsmap = {\n    lng: {\n      _base: 'https://rdkcentral.github.io/Lightning/docs',\n      Component: '/components/overview',\n      Text: '/textures/text',\n      Transition: '/transitions/attributes'\n    }\n  };\n  const [source, path] = id.split('.');\n  const href = docsmap[source]._base + docsmap[source][path];\n  return (\n    <a href={href} target=\"_blank\">\n      {children || id}\n    </a>\n  );\n};\n\nexport const Item = ({ children }) => children;\n\n/**\n * Creates formatted object for markdown prop tables\n * see Column and Row stories\n * @param {object} props\n * @param {object} props.type - TS-style generic/utility type\n */\nexport const ObjectFormat = ({ object }) => {\n  return [\n    '{',\n    <br />,\n    '  ',\n    ...utils.flatten(\n      Object.entries(object).map(([k, v]) => [\n        <span>&nbsp;&nbsp;</span>,\n        `${k}: `,\n        v,\n        ',',\n        <br />\n      ])\n    ),\n    '}'\n  ].map((x, i) => <Item key={i}>{x}</Item>);\n};\n\n/**\n * Formats TS-style generic types\n * See Columns and Row stories\n * @param {object} props\n * @param {object} props.children - component children\n * @param {string} props.type - Name of generic type\n */\nexport const GenericType = ({ children, type }) => {\n  return [type, '<', children, '>'].map((x, i) => <Item key={i}>{x}</Item>);\n};\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\n/*prettier-ignore*/\n/*\nCopyright 2023 Comcast Cable Communications Management, LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nSPDX-License-Identifier: Apache-2.0\n\\*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/Lightning-UI-Components/Lightning-UI-Components/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Meta, Title} from '@storybook/blocks';\nimport * as InputStories from './Input.stories';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    code: \"code\",\n    strong: \"strong\",\n    pre: \"pre\",\n    h3: \"h3\",\n    em: \"em\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [\"\\n\", \"\\n\", \"\\n\", _jsx(Meta, {\n      of: InputStories\n    }), \"\\n\", _jsx(Title, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Text input field component\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"source\",\n      children: \"Source\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/@lightningjs/ui-components/src/components/Input/Input.js\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/@lightningjs/ui-components/src/components/Input/Input.js\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"usage\",\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Input\"\n      }), \" component manages the state of a user's keyboard input. An important distinction between \", _jsx(_components.code, {\n        children: \"Input\"\n      }), \" and the standard web \", _jsx(_components.code, {\n        children: \"<input />\"\n      }), \" is that \", _jsx(_components.code, {\n        children: \"Input\"\n      }), \" \", _jsx(_components.strong, {\n        children: \"does not do key handling for input\"\n      }), \". Instead, you use the \", _jsx(_components.code, {\n        children: \"insert()\"\n      }), \" method to add values based on the current cursor \", _jsx(_components.code, {\n        children: \"position\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"import { Input } from '@lightningjs/ui-components';\\n\\nclass Example extends lng.Component {\\n  static _template() {\\n    return {\\n      Input: {\\n        type: Input\\n      }\\n    };\\n  }\\n\\n  _handleKey(event) {\\n    const { key } = event;\\n    if (key.length === 1) {\\n      this.tag('Input').input(key);\\n    }\\n    if (key === 'Backspace') {\\n      this.tag('Input').backspace();\\n    }\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"setting--inserting-values\",\n      children: \"Setting & Inserting values\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Input\"\n      }), \" component provides different ways to manage the input text and cursor position. When the \", _jsx(_components.code, {\n        children: \"listening\"\n      }), \" property is enabled, the cursor blinks as a placeholder, whether the component is in focused or unfocused mode.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The text displayed in the \", _jsx(_components.code, {\n        children: \"Input\"\n      }), \" can be directly set via the \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" property. The following example will display the input with the text \\\"Hello\\\".\\nSetting the \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" on the \", _jsx(_components.code, {\n        children: \"Input\"\n      }), \" directly like this will remove any existing text in the input and set the cursor \", _jsx(_components.code, {\n        children: \"position\"\n      }), \" in the Input to \", _jsx(_components.code, {\n        children: \"0\"\n      }), \" ( before the 'H' in 'Hello').\\nThe cursor position can be manually updated by setting the \", _jsx(_components.code, {\n        children: \"position\"\n      }), \" property. Setting \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"position\"\n      }), \" like this will update the \", _jsx(_components.code, {\n        children: \"Input\"\n      }), \" regardless of whether or not \", _jsx(_components.code, {\n        children: \"listening\"\n      }), \" is enabled.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"// dislay Hello in the input\\nthis.tag('Input').value = 'Hello';\\n\\n// update the cursor position in the input from index 0 (before the H in Hello) to index 5 (after the o in Hello)\\nthis.tag('Input').position = 5;\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To set the \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" \", _jsx(_components.em, {\n        children: \"and\"\n      }), \" update the \", _jsx(_components.code, {\n        children: \"position\"\n      }), \" to after the last character in the added text, use the \", _jsx(_components.code, {\n        children: \"insert()\"\n      }), \" method.\\nThe \", _jsx(_components.code, {\n        children: \"Input\"\n      }), \" must be in focused or unfocused mode and the \", _jsx(_components.code, {\n        children: \"listening\"\n      }), \" property enabled to use \", _jsx(_components.code, {\n        children: \"insert()\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"this.tag('Input').insert('Hello');\\n\\n// is the same as\\nthis.tag('Input').value = 'Hello';\\nthis.tag('Input').position = 5;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"deletion\",\n      children: \"Deletion\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To clear the current value use \", _jsx(_components.code, {\n        children: \"clear()\"\n      }), \". This also repositions the cursor to index \", _jsx(_components.code, {\n        children: \"0\"\n      }), \".\\nThe \", _jsx(_components.code, {\n        children: \"Input\"\n      }), \" must be in focused or unfocused mode and the \", _jsx(_components.code, {\n        children: \"listening\"\n      }), \" property enabled to use \", _jsx(_components.code, {\n        children: \"clear()\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"this.tag('Input').clear();\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To remove the character 1 position before the cursor position, use \", _jsx(_components.code, {\n        children: \"backspace()\"\n      }), \". This will remove that character and move the cursor back one position.\\nThe \", _jsx(_components.code, {\n        children: \"Input\"\n      }), \" must be in focused or unfocused mode and the \", _jsx(_components.code, {\n        children: \"listening\"\n      }), \" property enabled to use \", _jsx(_components.code, {\n        children: \"backspace()\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"this.tag('Input').value = 'foo';\\nthis.tag('Input').position = 1;\\n\\nthis.tag('Input').backspace();\\nthis.tag('Input').value; //=> 'oo'\\nthis.tag('Input').position; //=> 0\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"listening\",\n      children: \"Listening\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When \", _jsx(_components.code, {\n        children: \"listening\"\n      }), \" is true, the cursor begins blinking and the user is able to enter text.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"this.tag('Input').listening = true;\\n//When listening is true, the cursor blinks and allows user to enter text.\\n\\nthis.tag('Input').listening = false;\\n//When listening is false, the cursor will not be visible and does not allow user to enter text.\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"cursor-position\",\n      children: \"Cursor position\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Input\"\n      }), \" component has left and right key handlers to manage cursor position, so it works out of the box!\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"this.tag('Input').value = 'foo';\\n\\nthis.tag('Input')._handleRight();\\nthis.tag('Input').position; //=> 1\\n\\nthis.tag('Input')._handleLeft();\\nthis.tag('Input').position; //=> 0\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The cursor position stays within the bounds of the current \", _jsx(_components.code, {\n        children: \"value\"\n      }), \", so it is always >= 0 and <= \", _jsx(_components.code, {\n        children: \"value.length\"\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"password\",\n      children: \"Password\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Inputs commonly mask the value of passwords and other secure values. To enable input masking, set password to true.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"this.tag('Input').password = true;\\n//The character used to mask input can be changed as well.\\n\\nthis.tag('Input').mask = '•';\\n//To reveal the input, simply set password back to false.\\n\\nthis.tag('Input').password = false;\\n//When password is true, the Announcer will say \\\"Input hidden\\\" when the Input is focused.\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"api\",\n      children: \"API\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"properties\",\n      children: \"Properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"name\"\n          }), _jsx(_components.th, {\n            children: \"type\"\n          }), _jsx(_components.th, {\n            children: \"required\"\n          }), _jsx(_components.th, {\n            children: \"default\"\n          }), _jsx(_components.th, {\n            children: \"description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"actualTitle\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"undefined\"\n          }), _jsx(_components.td, {\n            children: \"actualTitle is a proxy element for title which is used to store actual value typed when password is enabled\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"cursor\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"undefined\"\n          }), _jsx(_components.td, {\n            children: \"cursor lets us know the current insert or delete position of title.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"eyebrow\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"undefined\"\n          }), _jsx(_components.td, {\n            children: \"Eyebrow of input container\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"helpText\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"undefined\"\n          }), _jsx(_components.td, {\n            children: \"HelpText of input container\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"listening\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"undefined\"\n          }), _jsx(_components.td, {\n            children: \"when true, input will accept changes from clear, insert, and backspace methods. When false, effects of those methods will be ignored and not affect the input.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"mask\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"undefined\"\n          }), _jsx(_components.td, {\n            children: \"character to use as a mask when password is true\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"password\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"undefined\"\n          }), _jsx(_components.td, {\n            children: \"determines whether input should be masked\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"position\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"undefined\"\n          }), _jsx(_components.td, {\n            children: \"index of current cursor position\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"style-properties\",\n      children: \"Style Properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"name\"\n          }), _jsx(_components.th, {\n            children: \"type\"\n          }), _jsx(_components.th, {\n            children: \"description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"cursorStyle\"\n          }), _jsx(_components.td, {\n            children: \"object\"\n          }), _jsx(_components.td, {\n            children: \"styles of the cursor\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"eyebrowTextStyle\"\n          }), _jsx(_components.td, {\n            children: \"string | object\"\n          }), _jsx(_components.td, {\n            children: \"text style to apply to the eyebrow\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"helpTextStyle\"\n          }), _jsx(_components.td, {\n            children: \"string | object\"\n          }), _jsx(_components.td, {\n            children: \"text style to apply to the helpText\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"minWidth\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsxs(_components.td, {\n            children: [\"used as a fallback width if no width is passed into the component and \", _jsx(_components.code, {\n              children: \"fixed\"\n            }), \" is false\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"paddingX\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"space between the button horizontal edge and the content\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"paddingY\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"space between the button vertical edge and the content\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":[],"sourceRoot":""}