{"version":3,"file":"components-ControlRow-ControlRow-stories.59557b5f.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AALA;AACA;AAAA;AAAA;AAAA;AA9EA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AALA;AACA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AALA;AACA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AALA;AACA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AANA;AACA;AACA;AAAA;AAAA;AAAA;AAjVA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAMA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAKA;AAKA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AAKA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACxPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/TitleRow/TitleRow.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/TitleRow/TitleRow.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/ControlRow/ControlRow.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/ControlRow/ControlRow.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/ControlRow/ControlRow.stories.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/TitleRow/TitleRow.stories.js"],"sourcesContent":["/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { getWidthByUpCount } from '../../utils';\n\nexport const base = theme => ({\n  width: getWidthByUpCount(theme, 1),\n  titleMarginBottom: theme.spacer.lg,\n  titleMarginLeft: theme.layout.gutterX,\n  titleTextStyle: {\n    ...theme.typography.headline1,\n    textColor: theme.color.textNeutral\n  }\n});\n\nexport const tone = theme => ({\n  neutral: {\n    titleTextStyle: { textColor: theme.color.textNeutral }\n  },\n  inverse: {\n    titleTextStyle: { textColor: theme.color.textInverse }\n  },\n  brand: {\n    titleTextStyle: { textColor: theme.color.textNeutral }\n  }\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport TextBox from '../TextBox';\nimport Row from '../Row';\n\nimport * as styles from './TitleRow.styles';\n\nexport default class TitleRow extends Row {\n  static get __componentName() {\n    return 'TitleRow';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  static get properties() {\n    return [...super.properties, 'title'];\n  }\n\n  static get tags() {\n    return [...super.tags, 'Title'];\n  }\n\n  static get aliasStyles() {\n    return [{ prev: 'rowMarginTop', curr: 'titleMarginBottom' }];\n  }\n\n  _titleLoaded() {\n    this._updateRow();\n  }\n\n  _construct() {\n    super._construct();\n    this._autoResizeHeight = true;\n  }\n\n  _update() {\n    super._update();\n    this._updateTitle();\n    this._updateRow();\n  }\n\n  _autoResize() {\n    this.w = this.w || this.style.w;\n    this.h = this.autoResizeHeight ? this.Items.y + this.Items.h : this.h;\n  }\n\n  _updateTitle() {\n    if (!this.title) {\n      if (this._Title) {\n        this.patch({ Title: undefined });\n      }\n      return;\n    }\n\n    let titlePatch = {\n      x: this.style.titleMarginLeft,\n      content: this.title,\n      style: { textStyle: this.style.titleTextStyle }\n    };\n    if (!this._Title) {\n      titlePatch = {\n        ...this._titleFirstLoadProps,\n        ...titlePatch\n      };\n    }\n    this.patch({ Title: titlePatch });\n  }\n\n  get _titleFirstLoadProps() {\n    return {\n      type: TextBox,\n      signals: {\n        textBoxChanged: '_titleLoaded'\n      }\n    };\n  }\n\n  _updateRow() {\n    this.applySmooth(this.Items, {\n      y: this.title ? this._Title.finalH + this.style.titleMarginBottom : 0\n    });\n  }\n\n  set announce(announce) {\n    super.announce = announce;\n  }\n\n  get announce() {\n    return this._announce || (this._Title && this._Title.announce);\n  }\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const base = theme => ({\n  extraItemSpacing: theme.spacer.lg\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport TitleRow from '../TitleRow';\n\nimport * as styles from './ControlRow.styles';\n\nexport default class ControlRow extends TitleRow {\n  static get __componentName() {\n    return 'ControlRow';\n  }\n\n  static get __themeStyles() {\n    return styles;\n  }\n\n  static _template() {\n    return {\n      ...super._template(),\n      alpha: 0,\n      lazyScroll: true,\n      signals: {\n        selectedChange: '_getMoreItems'\n      }\n    };\n  }\n\n  static get properties() {\n    return [...super.properties, 'extraItemSpacing'];\n  }\n\n  _construct() {\n    super._construct();\n    this._leftControls = [];\n    this._contentItems = [];\n    this._rightControls = [];\n    this._lastLeftControlIndex = -1;\n    this._lastItemIndex = -1;\n    this._lazyLoadBuffer = 0;\n  }\n\n  _updateContent() {\n    const itemsToAppend = [];\n    if (this.leftControls.length) {\n      itemsToAppend.push(...this._withExtraSpacing(this.leftControls, true));\n    }\n    if (this.contentItems.length) {\n      itemsToAppend.push(...this._withExtraSpacing(this.contentItems));\n    }\n    if (this.rightControls.length) {\n      itemsToAppend.push(...this.rightControls);\n    }\n    if (itemsToAppend.length) {\n      this.patch({\n        alpha: 1,\n        items: itemsToAppend,\n        selectedIndex: this.leftControls.length,\n        startLazyScrollIndex: this.leftControls.length,\n        stopLazyScrollIndex: this.leftControls.length + this.items.length - 1\n      });\n    }\n  }\n\n  _withExtraSpacing(items, isControl = false) {\n    const itemsCopy = [...items];\n    const prevItems = isControl ? this._prevLeftControls : this._prevItems;\n\n    // after appending remove extra spacing from the previous last item\n    if (prevItems && prevItems.length && itemsCopy[prevItems.length - 1]) {\n      itemsCopy[prevItems.length - 1].extraItemSpacing = 0;\n    }\n\n    itemsCopy[itemsCopy.length - 1].extraItemSpacing =\n      this.extraItemSpacing == undefined\n        ? this.style.extraItemSpacing\n        : this.extraItemSpacing;\n\n    if (isControl) {\n      this._prevLeftControls = itemsCopy;\n    } else {\n      this._prevItems = itemsCopy;\n    }\n    return itemsCopy;\n  }\n\n  _getMoreItems() {\n    if (this.lazyLoadBuffer) {\n      const loadMoreIndex = this.contentItems.length - 1 - this.lazyLoadBuffer;\n      if (\n        this.selectedIndex - this.leftControls.length >= loadMoreIndex &&\n        this.selectedIndex < this.leftControls.length + this.contentItems.length\n      ) {\n        this.loadMoreItems();\n      }\n    }\n  }\n\n  loadMoreItems() {\n    this.signal('loadMoreItems');\n  }\n\n  _selectedChange(selected, prevSelected) {\n    super._selectedChange(selected, prevSelected);\n    this._getMoreItems();\n  }\n\n  _appendItemsAt(items, appendIndex, removeSpacingIndex) {\n    const itemsCopy = [...items];\n\n    if (removeSpacingIndex != undefined && removeSpacingIndex >= 0) {\n      this.items[removeSpacingIndex].extraItemSpacing = undefined;\n      itemsCopy[itemsCopy.length - 1].extraItemSpacing =\n        this.extraItemSpacing == undefined\n          ? this.style.extraItemSpacing\n          : this.extraItemSpacing;\n    }\n    this.appendItemsAt(itemsCopy, appendIndex);\n  }\n\n  addContentItems(items) {\n    const lastSelected = this.selectedIndex;\n    const itemsToAdd = this._createContentItems(items);\n    const addIndex = this._lastItemIndex + 1;\n    this._appendItemsAt(itemsToAdd, addIndex, this._lastItemIndex);\n    this._lastItemIndex += itemsToAdd.length;\n\n    if (this._contentItems) {\n      this._contentItems = [...this.contentItems, ...itemsToAdd];\n    }\n\n    this._updateContent();\n    this.selectedIndex = lastSelected;\n\n    this.patch({\n      stopLazyScrollIndex: this.leftControls.length + this.items.length - 1\n    });\n  }\n\n  addContentItemsAt(items, itemIndex) {\n    const itemsToAdd = this._createContentItems(items);\n    const addIndex = this._lastLeftControlIndex + 1 + itemIndex;\n    if (addIndex === this._lastItemIndex + 1) {\n      this.addContentItems(itemsToAdd);\n    } else {\n      this._appendItemsAt(itemsToAdd, addIndex);\n\n      if (this._contentItems) {\n        this._contentItems.splice(addIndex, 0, ...itemsToAdd);\n        this._lastItemIndex = this.contentItems.length - 1;\n      }\n\n      this.patch({\n        stopLazyScrollIndex: this.leftControls.length + this.items.length - 1\n      });\n    }\n  }\n\n  removeContentItemAt(index) {\n    const removeIndex = this._lastLeftControlIndex + 1 + index;\n    this.removeItemAt(removeIndex);\n    this._lastItemIndex--;\n\n    if (this._contentItems) {\n      this._contentItems.splice(index, 1);\n    }\n\n    this.patch({\n      startLazyScrollIndex: this.leftControls.length,\n      stopLazyScrollIndex: this.leftControls.length + this.items.length - 1\n    });\n  }\n\n  addLeftControls(controls) {\n    const itemsToAdd = this._createControls(controls);\n    const addIndex = this._lastLeftControlIndex + 1;\n\n    this._appendItemsAt(itemsToAdd, addIndex, this._lastLeftControlIndex);\n    if (this._leftControls) {\n      this._leftControls = [...this._leftControls, ...controls];\n      this._lastLeftControlIndex = this._leftControls.length - 1;\n      this._lastItemIndex += controls.length;\n    }\n\n    this.patch({\n      startLazyScrollIndex: this.leftControls.length,\n      stopLazyScrollIndex: this.leftControls.length + this.items.length - 1\n    });\n  }\n\n  addLeftControlsAt(controls, index) {\n    const itemsToAdd = this._createControls(controls);\n    if (index === this._lastLeftControlIndex + 1) {\n      this.addLeftControls(controls);\n    } else {\n      this._appendItemsAt(itemsToAdd, index);\n      if (this.leftControls) {\n        this._leftControls.splice(index, 0, ...controls);\n        this._lastLeftControlIndex = this._leftControls.length - 1;\n        this._lastItemIndex += controls.length;\n      }\n\n      this.patch({\n        startLazyScrollIndex: this.leftControls.length,\n        stopLazyScrollIndex: this.leftControls.length + this.items.length - 1\n      });\n    }\n  }\n\n  removeLeftControlAt(index) {\n    this.removeItemAt(index);\n    this._lastLeftControlIndex--;\n    this._lastItemIndex--;\n\n    if (this.leftControls) {\n      this._leftControls.splice(index, 1);\n    }\n\n    this.patch({\n      startLazyScrollIndex: this.leftControls.length,\n      stopLazyScrollIndex: this.leftControls.length + this.items.length - 1\n    });\n  }\n\n  addRightControls(controls) {\n    this._rightControls.push(...controls);\n    this._appendItemsAt(this._createControls(controls), this.items.length);\n  }\n\n  addRightControlsAt(controls, index) {\n    const appendIndex =\n      this._leftControls.length + this._contentItems.length + index;\n    this._rightControls.splice(index, 0, ...controls);\n    this._appendItemsAt(this._createControls(controls), appendIndex);\n  }\n\n  removeRightControlAt(index) {\n    const removeIndex =\n      this.leftControls.length + this.contentItems.length + index;\n    this.removeItemAt(removeIndex);\n\n    if (this.rightControls) {\n      this._rightControls.splice(index, 1);\n    }\n  }\n\n  _createControls(controls) {\n    return controls.map(controlProps => ({\n      backgroundType: 'fill',\n      centerInParent: true,\n      ...controlProps\n    }));\n  }\n\n  _createContentItems(contentItems) {\n    const newContentItems = contentItems.map(itemProps => ({\n      ...itemProps,\n      centerInParent: true\n    }));\n\n    return newContentItems;\n  }\n\n  _setLeftControls(leftControls) {\n    this._leftControls = this._createControls(leftControls);\n    this._lastLeftControlIndex = leftControls.length - 1;\n    this._updateContent();\n  }\n\n  _getLeftControls() {\n    return this._leftControls;\n  }\n\n  _setRightControls(rightControls) {\n    this._rightControls = this._createControls(rightControls);\n    this._updateContent();\n  }\n\n  _getRightControls() {\n    return this._rightControls;\n  }\n\n  _getContentItems() {\n    return this._contentItems;\n  }\n\n  _setContentItems(items) {\n    this._contentItems = this._createContentItems(items);\n    this._lastItemIndex = this._lastLeftControlIndex + items.length;\n    this._updateContent();\n  }\n\n  _getLeftControlItems() {\n    if (this.leftControls.length) {\n      return this.items.slice(0, this._lastLeftControlIndex + 1);\n    }\n    return [];\n  }\n\n  _getContentItemItems() {\n    if (this.contentItems.length) {\n      return this.items.slice(\n        this._lastLeftControlIndex + 1,\n        this._lastItemIndex + 1\n      );\n    }\n    return [];\n  }\n\n  _getRightControlItems() {\n    if (this.rightControls.length) {\n      const leftSiblingIndex =\n        this._lastItemIndex || this._lastLeftControlIndex;\n      return leftSiblingIndex\n        ? this.items.slice(leftSiblingIndex + 1)\n        : this.items;\n    }\n    return [];\n  }\n\n  set leftControls(leftControls) {\n    this._setLeftControls(leftControls);\n  }\n\n  get leftControls() {\n    return this._getLeftControls();\n  }\n\n  set rightControls(rightControls) {\n    this._setRightControls(rightControls);\n  }\n\n  get rightControls() {\n    return this._getRightControls();\n  }\n\n  set contentItems(items) {\n    this._setContentItems(items);\n  }\n\n  get contentItems() {\n    return this._getContentItems();\n  }\n\n  set lazyLoadBuffer(lazyLoadBuffer) {\n    this._lazyLoadBuffer = lazyLoadBuffer;\n    this._getMoreItems();\n  }\n\n  get lazyLoadBuffer() {\n    return this._lazyLoadBuffer;\n  }\n}\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport Tile from '../Tile';\nimport ControlSmall from '../Control/ControlSmall';\nimport lightningIcon from '../../assets/images/ic_lightning_white_32.png';\nimport playIcon from '../../assets/images/ic_play_white_32.png';\nimport { default as TitleRowStory } from '../TitleRow/TitleRow.stories';\nimport ControlRowComponent from '.';\nimport { createModeControl } from '../../docs/utils';\n\nexport default {\n  title: 'Components/ControlRow',\n  args: {\n    ...TitleRowStory.args,\n    lazyScroll: true,\n    mode: 'focused'\n  },\n  argTypes: {\n    ...TitleRowStory.argTypes,\n    ...createModeControl({ summaryValue: 'focused' })\n  }\n};\n\nconst createItems = (length, src, props = {}) => {\n  return Array.from({ length }).map((_, index) => ({\n    type: Tile,\n    artwork: {\n      src\n    },\n    itemLayout: {\n      ratioX: 16,\n      ratioY: 9,\n      upCount: 4\n    },\n    announce: 'Tile',\n    announceContext: `${index + 1} of ${length}`,\n    ...props\n  }));\n};\nconst createControls = (length, icon = lightningIcon, props = {}) => {\n  return Array.from({ length }).map(() => ({\n    type: ControlSmall,\n    icon,\n    fixed: true,\n    h: 64,\n    w: 64,\n    ...props\n  }));\n};\n\nexport const Basic = () =>\n  class Basic extends lng.Component {\n    static _template() {\n      return {\n        ControlRow: {\n          type: ControlRowComponent,\n          leftControls: createControls(3),\n          contentItems: createItems(5),\n          rightControls: createControls(3)\n        }\n      };\n    }\n\n    _getFocused() {\n      return this.tag('ControlRow');\n    }\n  };\n\nexport const LazyLoading = () =>\n  class LazyLoading extends lng.Component {\n    static _template() {\n      return {\n        ControlRow: {\n          type: ControlRowComponent,\n          leftControls: createControls(3),\n          contentItems: createItems(5),\n          rightControls: createControls(3),\n          lazyLoadBuffer: 1,\n          signals: {\n            loadMoreItems: '_loadMore'\n          }\n        }\n      };\n    }\n\n    _construct() {\n      this._counter = 0;\n    }\n\n    _loadMore() {\n      if (this._counter < 2) {\n        this._ControlRow.addContentItems(\n          createItems(\n            3,\n            'https://image.tmdb.org/t/p/w500/frwl2zBNAl5ZbFDJGoJv0mYo0rF.jpg'\n          )\n        );\n        this._counter++;\n      }\n    }\n\n    _getFocused() {\n      return this.tag('ControlRow');\n    }\n\n    get _ControlRow() {\n      return this.tag('ControlRow');\n    }\n  };\n\nLazyLoading.args = { lazyLoadBuffer: 1 };\nLazyLoading.argTypes = {\n  lazyLoadBuffer: {\n    control: 'number',\n    description:\n      'The number of items before the last content item at which a signal, \"loadMoreItems\", is emitted.',\n    remount: true,\n    table: { defaultValue: { summary: 0 } }\n  }\n};\nLazyLoading.parameters = {\n  storyDetails:\n    'The loadMoreItems signal is emitted each time a contentItem is selected at and after the index defined by the lazyLoadBuffer property. This story adds a method that is invoked when that signal is emitted and adds 3 additional contentItems to the ControlRow via ControlRow.addContentItems. That method will append items in response to the signal two times, then will do nothing in response to further invocations from the signal.'\n};\n\nconst createSignal = signalName => ({\n  onEnter: function () {\n    this.signal(signalName);\n  },\n  passSignals: { [signalName]: true }\n});\n\nconst parksUrl =\n  'https://image.tmdb.org/t/p/w500/frwl2zBNAl5ZbFDJGoJv0mYo0rF.jpg';\n\nexport const AddingAndRemoving = () =>\n  class AddingAndRemoving extends lng.Component {\n    static _template() {\n      return {\n        ControlRow: {\n          type: ControlRowComponent,\n          signals: {\n            addLeftControl: true,\n            removeLeftControl: true,\n            addContentItem: true,\n            removeContentItem: true,\n            addRightControl: true,\n            removeRightControl: true\n          },\n          leftControls: createControls(\n            1,\n            lightningIcon,\n            createSignal('addLeftControl')\n          ),\n          contentItems: createItems(\n            5,\n            undefined,\n            createSignal('addContentItem')\n          ),\n          rightControls: createControls(\n            1,\n            lightningIcon,\n            createSignal('addRightControl')\n          )\n        }\n      };\n    }\n\n    addLeftControl() {\n      this._ControlRow.addLeftControlsAt(\n        createControls(1, playIcon, createSignal('removeLeftControl')),\n        0\n      );\n    }\n\n    removeLeftControl() {\n      this._ControlRow.removeLeftControlAt(this._ControlRow.selectedIndex);\n    }\n\n    addContentItem() {\n      this._ControlRow.addContentItemsAt(\n        createItems(1, parksUrl, createSignal('removeContentItem')),\n        this.contentItemIndex + 1\n      );\n    }\n\n    removeContentItem() {\n      this._ControlRow.removeContentItemAt(this.contentItemIndex);\n    }\n\n    addRightControl() {\n      this._ControlRow.addRightControls(\n        createControls(1, playIcon, createSignal('removeRightControl'))\n      );\n    }\n\n    removeRightControl() {\n      this._ControlRow.removeRightControlAt(this.rightControlIndex);\n    }\n\n    get _ControlRow() {\n      return this.tag('ControlRow');\n    }\n\n    get contentItemIndex() {\n      return (\n        this._ControlRow.selectedIndex - this._ControlRow.leftControls.length\n      );\n    }\n\n    get rightControlIndex() {\n      return (\n        this._ControlRow.selectedIndex -\n        this._ControlRow.leftControls.length -\n        this._ControlRow.contentItems.length\n      );\n    }\n\n    _getFocused() {\n      return this._ControlRow;\n    }\n  };\n\nAddingAndRemoving.parameters = {\n  storyDetails: `\n  Press the Enter key while focused on any controls or items in the ControlRow for the following effects:\n      - left controls: prepend a new control with a play icon to the left controls\n      - content items: append a tile with a background after the selected index\n      - right controls: append a new control with a play icon to the right controls\n  Press the Enter key while focused on any of the added controls or content items to remove that control or content item.\n  `\n};\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport { Row as RowBasic } from '../Row/Row.stories';\nimport Tile from '../Tile';\nimport { default as TitleRowComponent } from '.';\n\n// add remount to all Row argTypes individually since Row uses remountAll\n// TitleRow title prop can be updated without requiring a remount\nconst rowArgTypes = Object.keys(RowBasic.argTypes).reduce((acc, key) => {\n  acc[key] = {\n    ...RowBasic.argTypes[key],\n    remount: key !== 'mode'\n  };\n  return acc;\n}, {});\n\nexport default {\n  title: 'Components/TitleRow',\n\n  args: {\n    title: 'Row Title',\n    ...RowBasic.args\n  },\n  argTypes: {\n    title: {\n      control: 'text',\n      description: 'title text to be displayed above the row',\n      table: {\n        defaultValue: { summary: 'undefined' }\n      }\n    },\n    ...rowArgTypes\n  }\n};\n\nconst createItems = length => {\n  return Array.from({ length }).map((_, index) => ({\n    type: Tile,\n    itemLayout: {\n      ratioX: 16,\n      ratioY: 9,\n      upCount: 4\n    },\n    announce: 'Tile',\n    announceContext: `${index + 1} of ${length}`\n  }));\n};\n\nexport const TitleRow = () =>\n  class TitleRow extends lng.Component {\n    static _template() {\n      return {\n        TitleRow: {\n          type: TitleRowComponent,\n          items: createItems(12)\n        }\n      };\n    }\n\n    _getFocused() {\n      return this.tag('TitleRow');\n    }\n  };\n\nTitleRow.storyName = 'TitleRow';\n"],"names":[],"sourceRoot":""}