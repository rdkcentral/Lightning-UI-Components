{"version":3,"file":"components-InlineContent-InlineContent-mdx.7d25646b.iframe.bundle.js","mappingspdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA","sources":["webpack://lightning-ui-docs/../../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/InlineContent/InlineContent.mdx","webpack://lightning-ui-docs/../../../node_modules/memoizerific/ sync","webpack://lightning-ui-docs/../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://lightning-ui-docs/../../../node_modules/react/jsx-runtime.js"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\n/*prettier-ignore*/\n/*\nCopyright 2023 Comcast Cable Communications Management, LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nSPDX-License-Identifier: Apache-2.0\n\\*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/Lightning-UI-Components/Lightning-UI-Components/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Meta, Title} from '@storybook/blocks';\nimport * as InlineContentStories from './InlineContent.stories';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    a: \"a\",\n    h2: \"h2\",\n    code: \"code\",\n    pre: \"pre\",\n    h3: \"h3\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [\"\\n\", \"\\n\", \"\\n\", _jsx(Meta, {\n      of: InlineContentStories\n    }), \"\\n\", _jsx(Title, {}), \"\\n\", _jsx(_components.p, {\n      children: _jsxs(_components.strong, {\n        children: [\"Depreciated: \", _jsx(_components.a, {\n          href: \"/docs/components-textbox--basic\",\n          children: \"TextBox\"\n        }), \" is the recommended component for rendering text and supports all properties of InlineContent\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Renders text, icons, and badges in line together.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"source\",\n      children: \"Source\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/@lightningjs/ui-components/src/components/InlineContent/InlineContent.js\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/@lightningjs/ui-components/src/components/InlineContent/InlineContent.js\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"usage\",\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pass in a \", _jsx(_components.code, {\n        children: \"content\"\n      }), \" array containing simple strings or objects with badge or icon strings.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"import { InlineContent } from '@lightningjs/ui-components';\\n\\nclass Example extends lng.Component {\\n  static _template() {\\n    return {\\n      InlineContent: {\\n        type: InlineContent,\\n        content: [\\n          'example of simple text',\\n          {\\n            icon: 'http://myIconUrl.com/goeshere',\\n            title: 'to add voice out content (essentially alt text)',\\n            color: '00ff00'\\n          },\\n          { newline: true },\\n          { badge: 'HD' }\\n        ]\\n      }\\n    };\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"api\",\n      children: \"API\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"properties\",\n      children: \"Properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"name\"\n          }), _jsx(_components.th, {\n            children: \"type\"\n          }), _jsx(_components.th, {\n            children: \"required\"\n          }), _jsx(_components.th, {\n            children: \"default\"\n          }), _jsx(_components.th, {\n            children: \"description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"badgeProperties\"\n          }), _jsx(_components.td, {\n            children: \"object\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"undefined\"\n          }), _jsx(_components.td, {\n            children: \"styling to update the Badge component\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"badgeY\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"undefined\"\n          }), _jsx(_components.td, {\n            children: \"y value of all badges\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"content\"\n          }), _jsx(_components.td, {\n            children: \"string | array\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"undefined\"\n          }), _jsxs(_components.td, {\n            children: [\"list of data to render inline, see \", _jsx(_components.a, {\n              href: \"#content-element-properties\",\n              children: \"Content Element Properties\"\n            }), \" below\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"contentProperties\"\n          }), _jsx(_components.td, {\n            children: \"object\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {}), _jsx(_components.td, {\n            children: \"object setting flexItem props on all content items\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"contentWrap\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"determines whether the containing flexbox should wrap the content onto the next line\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"justify\"\n          }), _jsx(_components.td, {\n            children: \"'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'space-evenly'\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"center\"\n          }), _jsx(_components.td, {\n            children: \"alignment of first line flexbox content\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"customStyleMappings\"\n          }), _jsx(_components.td, {\n            children: \"object\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {}), _jsxs(_components.td, {\n            children: [\"set of nested objects containing \", _jsx(_components.a, {\n              href: \"https://rdkcentral.github.io/Lightning/docs/textures/text\",\n              target: \"_blank\",\n              rel: \"nofollow noopener noreferrer\",\n              children: \"Lightning Text\"\n            }), \" properties which can be referenced in the \", _jsx(_components.a, {\n              href: \"#content-element-properties\",\n              children: \"Content Element Properties\"\n            }), \" to apply styling to individual text elements\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"maxLines\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"undefined\"\n          }), _jsx(_components.td, {\n            children: \"maximum number of lines to render before truncation\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"maxLinesSuffix\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"'..'\"\n          }), _jsxs(_components.td, {\n            children: [\"suffix appended to last line of content if it will exceed the \", _jsx(_components.code, {\n              children: \"maxLines\"\n            })]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"style-properties\",\n      children: \"Style Properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"name\"\n          }), _jsx(_components.th, {\n            children: \"type\"\n          }), _jsx(_components.th, {\n            children: \"description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"contentSpacing\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"padding between all content items\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"iconHeight\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"height of each icon\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"iconWidth\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"width of each icon\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"justify\"\n          }), _jsx(_components.td, {\n            children: \"'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'space-evenly'\"\n          }), _jsx(_components.td, {\n            children: \"alignment of first line flexbox content\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"marginBottom\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"space beneath rendered content\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"maxLines\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"Maximum number of lines to display before truncation\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"textStyle\"\n          }), _jsx(_components.td, {\n            children: \"string | object\"\n          }), _jsxs(_components.td, {\n            children: [\"Default style of text to be displayed. Object should come from the current theme or contain any properties that the \", _jsx(_components.a, {\n              href: \"https://lightningjs.io/docs/#/lightning-core-reference/RenderEngine/Textures/Text?id=properties\",\n              target: \"_blank\",\n              rel: \"nofollow noopener noreferrer\",\n              children: \"Lightning text texture supports\"\n            }), \".\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"textY\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"y value of all text\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"events\",\n      children: \"Events\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"loadedinlinecontent-void\",\n      children: \"$loadedInlineContent(): void\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Fires when all contents inside the InlineContent component have finished rendering their textures. This is when you will have all of the correct flex properties of the components as well as \", _jsx(_components.code, {\n        children: \"finalH\"\n      }), \" available to be used.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"content-element-properties\",\n      children: \"Content Element Properties\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"InlineContent\"\n      }), \" component will recognize the following elements inside its \", _jsx(_components.code, {\n        children: \"content\"\n      }), \" param:\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"string|object\"\n          }), _jsx(_components.th, {\n            children: \"description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsxs(_components.td, {\n            children: [_jsx(_components.code, {\n              children: \"'Text'\"\n            }), \" \", _jsx(\"br\", {}), _jsx(\"br\", {}), \" \", _jsx(_components.code, {\n              children: \"{ text: 'Text', style: { styleName: styleValue } }\"\n            }), \" \", _jsx(\"br\", {}), _jsx(\"br\", {}), \" \", _jsx(_components.code, {\n              children: \"{ text: 'Text', style: 'StyleName' }\"\n            })]\n          }), _jsxs(_components.td, {\n            children: [\"any stand alone string will be used a pure text, or an object with the properties of \", _jsx(_components.code, {\n              children: \"text\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"style\"\n            }), \" can be passed to override the default text styles, and \", _jsx(_components.code, {\n              children: \"style\"\n            }), \" can be passed a string which references a predefined entry in the \", _jsx(_components.a, {\n              href: \"#properties\",\n              children: \"customStyleMappings\"\n            }), \" object passed to the component\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"{ icon: 'pathToIcon', title: 'IconTitle' }\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"will render an \", _jsx(_components.a, {\n              href: \"/story/elements-icon--text\",\n              children: \"Icon\"\n            }), \" with the given source and use the title param as the string to announce\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"{ badge: 'BadgeName' }\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"will render a \", _jsx(_components.a, {\n              href: \"/story/elements-badge--text\",\n              children: \"Badge\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"{ newline: true }\"\n            })\n          }), _jsx(_components.td, {\n            children: \"will insert a line break between content if the contentWrap param is true\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"content-string-markup\",\n      children: \"Content String Markup\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Additionally, the \", _jsx(_components.code, {\n        children: \"content\"\n      }), \" param will automatically parse a string into the above elements using the following markup:\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"string markup\"\n          }), _jsx(_components.th, {\n            children: \"parsed element\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"{ICON:title|url}\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"{ icon: 'url', title: 'title' }\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"{BADGE:title}\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"{ badge: 'title' }\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"{NEWLINE}\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"{ newline: true }\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"{TEXT:text|styleName}\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"{ text: 'text', style: 'styleName' }\"\n            })\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For example:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"import { InlineContent } from '@lightningjs/ui-components';\\n\\nclass Example extends lng.Component {\\n  static _template() {\\n    return {\\n      InlineContent: {\\n        type: InlineContent,\\n        contentWrap: true,\\n        customStyleMappings: {\\n          red: { textColor: getHexColor('FF6194') }\\n        },\\n        content:\\n          'This is an {ICON:settings|./assets/icons/settings.png} icon and {BADGE:HD} badge with a{NEWLINE} and {TEXT:red text|red}.'\\n      }\\n    };\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"will yield\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"[\\n  'This is an ',\\n  { icon: './assets/icons/settings.png', title: 'settings' },\\n  ' icon and ',\\n  { badge: 'HD' },\\n  ' badge with a',\\n  { newline: true },\\n  ' and ',\\n  { text: 'red text', style: 'red' },\\n  '.'\\n];\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../node_modules/memoizerific sync recursive\";\nmodule.exports = webpackEmptyContext;","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":[],"sourceRoot":""}