{"version":3,"file":"mixins-withUpdates-withUpdates-mdx.fced0b80.iframe.bundle.js","mappingslBA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACxsources":["webpack://lightning-ui-docs/../../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/mixins/withUpdates/withUpdates.stories.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/mixins/withUpdates/withUpdates.mdx","webpack://lightning-ui-docs/../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://lightning-ui-docs/../../../node_modules/react/jsx-runtime.js"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"﻿/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport withUpdatesMixin from '.';\\n\\nexport default {\\n  title: 'Utilities/withUpdates'\\n};\\n\\nexport const withUpdates = args =>\\n  class withUpdates extends withUpdatesMixin(lng.Component) {\\n    static get properties() {\\n      return ['title'];\\n    }\\n\\n    static _template() {\\n      return {\\n        x: 50,\\n        y: 50,\\n        Text: {}\\n      };\\n    }\\n\\n    _init() {\\n      this._title = args.title;\\n    }\\n\\n    _update() {\\n      this.tag('Text').text = this.title;\\n    }\\n\\n    _setTitle(val) {\\n      // Only gets called when title is set, not _title\\n      return 'TITLE: ' + val;\\n    }\\n  };\\n\\nwithUpdates.storyName = 'withUpdates';\\n\\nwithUpdates.args = {\\n  title: 'Default Title Value'\\n};\\n\\nwithUpdates.argTypes = {\\n  title: {\\n    control: 'text',\\n    description: 'Title text',\\n    table: { defaultValue: { summary: 'undefined' } }\\n  }\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"withUpdates\": {\n    \"startLoc\": {\n      \"col\": 27,\n      \"line\": 24\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 45\n    },\n    \"startBody\": {\n      \"col\": 27,\n      \"line\": 24\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 45\n    }\n  }\n};\n    \n/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport withUpdatesMixin from '.';\nexport default {parameters: {\n  \"storySource\": {\n    \"source\": \"/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport withUpdatesMixin from '.';\\nexport default {\\n  title: 'Utilities/withUpdates'\\n};\\nexport const withUpdates = args => class withUpdates extends withUpdatesMixin(lng.Component) {\\n  static get properties() {\\n    return ['title'];\\n  }\\n  static _template() {\\n    return {\\n      x: 50,\\n      y: 50,\\n      Text: {}\\n    };\\n  }\\n  _init() {\\n    this._title = args.title;\\n  }\\n  _update() {\\n    this.tag('Text').text = this.title;\\n  }\\n  _setTitle(val) {\\n    // Only gets called when title is set, not _title\\n    return 'TITLE: ' + val;\\n  }\\n};\\nwithUpdates.storyName = 'withUpdates';\\nwithUpdates.args = {\\n  title: 'Default Title Value'\\n};\\nwithUpdates.argTypes = {\\n  title: {\\n    control: 'text',\\n    description: 'Title text',\\n    table: {\\n      defaultValue: {\\n        summary: 'undefined'\\n      }\\n    }\\n  }\\n};\\nwithUpdates.parameters = {\\n  ...withUpdates.parameters,\\n  docs: {\\n    ...withUpdates.parameters?.docs,\\n    source: {\\n      originalSource: \\\"args => class withUpdates extends withUpdatesMixin(lng.Component) {\\\\n  static get properties() {\\\\n    return ['title'];\\\\n  }\\\\n  static _template() {\\\\n    return {\\\\n      x: 50,\\\\n      y: 50,\\\\n      Text: {}\\\\n    };\\\\n  }\\\\n  _init() {\\\\n    this._title = args.title;\\\\n  }\\\\n  _update() {\\\\n    this.tag('Text').text = this.title;\\\\n  }\\\\n  _setTitle(val) {\\\\n    // Only gets called when title is set, not _title\\\\n    return 'TITLE: ' + val;\\\\n  }\\\\n}\\\",\\n      ...withUpdates.parameters?.docs?.source\\n    }\\n  }\\n};\",\n    \"locationsMap\": {\n      \"with-updates\": {\n        \"startLoc\": {\n          \"col\": 27,\n          \"line\": 24\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 45\n        },\n        \"startBody\": {\n          \"col\": 27,\n          \"line\": 24\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 45\n        }\n      }\n    }\n  }\n,},\n  title: 'Utilities/withUpdates'\n};\nexport const withUpdates = args => class withUpdates extends withUpdatesMixin(lng.Component) {\n  static get properties() {\n    return ['title'];\n  }\n  static _template() {\n    return {\n      x: 50,\n      y: 50,\n      Text: {}\n    };\n  }\n  _init() {\n    this._title = args.title;\n  }\n  _update() {\n    this.tag('Text').text = this.title;\n  }\n  _setTitle(val) {\n    // Only gets called when title is set, not _title\n    return 'TITLE: ' + val;\n  }\n};\nwithUpdates.storyName = 'withUpdates';\nwithUpdates.args = {\n  title: 'Default Title Value'\n};\nwithUpdates.argTypes = {\n  title: {\n    control: 'text',\n    description: 'Title text',\n    table: {\n      defaultValue: {\n        summary: 'undefined'\n      }\n    }\n  }\n};\nwithUpdates.parameters = {\n  ...withUpdates.parameters,\n  docs: {\n    ...withUpdates.parameters?.docs,\n    source: {\n      originalSource: \"args => class withUpdates extends withUpdatesMixin(lng.Component) {\\n  static get properties() {\\n    return ['title'];\\n  }\\n  static _template() {\\n    return {\\n      x: 50,\\n      y: 50,\\n      Text: {}\\n    };\\n  }\\n  _init() {\\n    this._title = args.title;\\n  }\\n  _update() {\\n    this.tag('Text').text = this.title;\\n  }\\n  _setTitle(val) {\\n    // Only gets called when title is set, not _title\\n    return 'TITLE: ' + val;\\n  }\\n}\",\n      ...withUpdates.parameters?.docs?.source\n    }\n  }\n};","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\n/*prettier-ignore*/\n/*\nCopyright 2023 Comcast Cable Communications Management, LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nSPDX-License-Identifier: Apache-2.0\n\\*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/Lightning-UI-Components/Lightning-UI-Components/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nimport {Meta} from '@storybook/blocks';\nimport * as withUpdatesStories from './withUpdates.stories';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    h2: \"h2\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [\"\\n\", \"\\n\", \"\\n\", _jsx(Meta, {\n      of: withUpdatesStories\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"withupdates\",\n      children: \"withUpdates\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"withUpdates\"\n      }), \" mixin can be wrapped around a parent component to have properties which call an \", _jsx(_components.code, {\n        children: \"_update\"\n      }), \" function.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"source\",\n      children: \"Source\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/@lightningjs/ui-components/src/mixins/withUpdates/index.js\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"https://github.com/rdkcentral/Lightning-UI-Components/blob/develop/packages/@lightningjs/ui-components/src/mixins/withUpdates/index.js\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"usage\",\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"withUpdates\"\n      }), \" looks for a \", _jsx(_components.code, {\n        children: \"static get properties\"\n      }), \" which returns an array of properties to add getters and setters for.\\nYou can add a \", _jsx(_components.code, {\n        children: \"_get${PropName}(value)\"\n      }), \" function to override the default return value from the getter. Likewise, you\\ncan add a \", _jsx(_components.code, {\n        children: \"_set${PropName}(value)\"\n      }), \" function which returns a processed value for storing. The setter automatically calls\\n\", _jsx(_components.code, {\n        children: \"requestUpdate\"\n      }), \" which in turn calls \", _jsx(_components.code, {\n        children: \"_update\"\n      }), \" in components to render. Additionally, a private property \", _jsx(_components.code, {\n        children: \"_${propName}\"\n      }), \"\\nis created to store the value, which can be utilized to set initial values.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Important to note that you can not override properties which exist on the component, ie w or h.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"class Example extends withUpdates(lng.Component) {\\n  static get properties() {\\n    return ['title'];\\n  }\\n\\n  _init() {\\n    this._title = 'Default Title Value';\\n  }\\n\\n  _update() {\\n    this.text = {\\n      text: this.title\\n    };\\n  }\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":[],"sourceRoot":""}