{"version":3,"file":"components-Keyboard-KeyboardFullscreen-stories.39019f90.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAwCA;AAYA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAsBA;AAAA;AAAA;AAKA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAxJA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AATA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA","sources":["webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Keyboard/KeyboardFullscreen.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Keyboard/KeyboardFullscreen.stories.js"],"sourcesContent":["/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport Keyboard from './Keyboard';\nimport * as styles from './Keyboard.styles.js';\n\nexport default class KeyboardFullScreen extends Keyboard {\n  static get __componentName() {\n    return 'KeyboardFullScreen';\n  }\n\n  static get __themeStyle() {\n    return styles;\n  }\n\n  _construct() {\n    super._construct();\n    this.formats = this.fullscreenFormat;\n  }\n\n  get fullscreenFormat() {\n    return {\n      letters: [\n        [\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          {\n            title: '#@!',\n            size: 'lg',\n            toggle: 'symbols',\n            announce: 'symbol mode, button',\n            keyId: 'symbols'\n          },\n          {\n            title: 'Space',\n            size: 'lg',\n            keyId: 'space',\n            announce: 'space, button'\n          },\n          {\n            title: 'Delete',\n            size: 'md',\n            keyId: 'delete',\n            announce: 'delete, button'\n          },\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          ''\n        ],\n        [\n          'A',\n          'B',\n          'C',\n          'D',\n          'E',\n          'F',\n          'G',\n          'H',\n          'I',\n          'J',\n          'K',\n          'L',\n          'M',\n          'N',\n          'O',\n          'P',\n          'Q',\n          'R',\n          'S',\n          'T',\n          'U',\n          'V',\n          'W',\n          'X',\n          'Y',\n          'Z'\n        ]\n      ],\n      symbols: [\n        [\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          {\n            title: 'ABC',\n            size: 'lg',\n            toggle: 'letters',\n            announce: 'caps on, button'\n          },\n          {\n            title: 'Space',\n            size: 'lg',\n            keyId: 'space',\n            announce: 'space, button'\n          },\n          {\n            title: 'Delete',\n            size: 'md',\n            keyId: 'delete',\n            announce: 'delete, button'\n          },\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          '',\n          ''\n        ],\n        [\n          '1',\n          '2',\n          '3',\n          '4',\n          '5',\n          '6',\n          '7',\n          '8',\n          '9',\n          '0',\n          { title: '!', announce: 'exclamation, button' },\n          '@',\n          '#',\n          '$',\n          '%',\n          { title: '^', announce: 'caret circumflex, button' },\n          '&',\n          '*',\n          { title: '(', announce: 'open parenthesis, button' },\n          { title: ')', announce: 'close parenthesis, button' },\n          { title: '`', announce: 'grave accent, button' },\n          '~',\n          '_',\n          '.',\n          '-',\n          '+'\n        ]\n      ]\n    };\n  }\n}\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"ï»¿/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport { context } from '../../globals';\\nimport utils from '../../utils';\\nimport { default as KeyboardFullscreenComponent } from './KeyboardFullscreen';\\nimport { Keyboard } from './Keyboard.stories';\\n\\nexport default {\\n  title: 'Components/Keyboard/KeyboardFullscreen'\\n};\\n\\nexport const KeyboardFullscreen = () =>\\n  class KeyboardFullscreen extends lng.Component {\\n    static _template() {\\n      return {\\n        Keyboard: {\\n          type: KeyboardFullscreenComponent,\\n          defaultFormat: 'letters'\\n        },\\n        w: utils.getWidthByUpCount(context.theme, 1)\\n      };\\n    }\\n\\n    _init() {\\n      this.tag('Keyboard')._whenEnabled.then(() => {\\n        this.tag('Keyboard').selectKeyOn(this.tag('Keyboard').tag('Letters'), {\\n          row: 1,\\n          column: 0\\n        });\\n      });\\n    }\\n  };\\n\\nKeyboardFullscreen.storyName = 'KeyboardFullscreen';\\nKeyboardFullscreen.args = {\\n  centerKeyboard: false,\\n  centerKeys: false,\\n  mode: 'focused'\\n};\\nKeyboardFullscreen.parameters = {};\\nKeyboardFullscreen.argTypes = {\\n  ...Keyboard.sharedArgTypes,\\n  centerKeys: {\\n    description: \\\"Center the keys within it's set width of keyboard\\\",\\n    control: 'boolean',\\n    table: {\\n      defaultValue: { summary: false }\\n    }\\n  }\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"KeyboardFullscreen\": {\n    \"startLoc\": {\n      \"col\": 34,\n      \"line\": 27\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 45\n    },\n    \"startBody\": {\n      \"col\": 34,\n      \"line\": 27\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 45\n    }\n  }\n};\n    \n/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport lng from '@lightningjs/core';\nimport { context } from '../../globals';\nimport utils from '../../utils';\nimport { default as KeyboardFullscreenComponent } from './KeyboardFullscreen';\nimport { Keyboard } from './Keyboard.stories';\nexport default {parameters: {\n  \"storySource\": {\n    \"source\": \"/**\\n * Copyright 2023 Comcast Cable Communications Management, LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\nimport lng from '@lightningjs/core';\\nimport { context } from '../../globals';\\nimport utils from '../../utils';\\nimport { default as KeyboardFullscreenComponent } from './KeyboardFullscreen';\\nimport { Keyboard } from './Keyboard.stories';\\nexport default {\\n  title: 'Components/Keyboard/KeyboardFullscreen'\\n};\\nexport const KeyboardFullscreen = () => class KeyboardFullscreen extends lng.Component {\\n  static _template() {\\n    return {\\n      Keyboard: {\\n        type: KeyboardFullscreenComponent,\\n        defaultFormat: 'letters'\\n      },\\n      w: utils.getWidthByUpCount(context.theme, 1)\\n    };\\n  }\\n  _init() {\\n    this.tag('Keyboard')._whenEnabled.then(() => {\\n      this.tag('Keyboard').selectKeyOn(this.tag('Keyboard').tag('Letters'), {\\n        row: 1,\\n        column: 0\\n      });\\n    });\\n  }\\n};\\nKeyboardFullscreen.storyName = 'KeyboardFullscreen';\\nKeyboardFullscreen.args = {\\n  centerKeyboard: false,\\n  centerKeys: false,\\n  mode: 'focused'\\n};\\nKeyboardFullscreen.parameters = {};\\nKeyboardFullscreen.argTypes = {\\n  ...Keyboard.sharedArgTypes,\\n  centerKeys: {\\n    description: \\\"Center the keys within it's set width of keyboard\\\",\\n    control: 'boolean',\\n    table: {\\n      defaultValue: {\\n        summary: false\\n      }\\n    }\\n  }\\n};\\nKeyboardFullscreen.parameters = {\\n  ...KeyboardFullscreen.parameters,\\n  docs: {\\n    ...KeyboardFullscreen.parameters?.docs,\\n    source: {\\n      originalSource: \\\"() => class KeyboardFullscreen extends lng.Component {\\\\n  static _template() {\\\\n    return {\\\\n      Keyboard: {\\\\n        type: KeyboardFullscreenComponent,\\\\n        defaultFormat: 'letters'\\\\n      },\\\\n      w: utils.getWidthByUpCount(context.theme, 1)\\\\n    };\\\\n  }\\\\n  _init() {\\\\n    this.tag('Keyboard')._whenEnabled.then(() => {\\\\n      this.tag('Keyboard').selectKeyOn(this.tag('Keyboard').tag('Letters'), {\\\\n        row: 1,\\\\n        column: 0\\\\n      });\\\\n    });\\\\n  }\\\\n}\\\",\\n      ...KeyboardFullscreen.parameters?.docs?.source\\n    }\\n  }\\n};\",\n    \"locationsMap\": {\n      \"keyboard-fullscreen\": {\n        \"startLoc\": {\n          \"col\": 34,\n          \"line\": 27\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 45\n        },\n        \"startBody\": {\n          \"col\": 34,\n          \"line\": 27\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 45\n        }\n      }\n    }\n  }\n,},\n  title: 'Components/Keyboard/KeyboardFullscreen'\n};\nexport const KeyboardFullscreen = () => class KeyboardFullscreen extends lng.Component {\n  static _template() {\n    return {\n      Keyboard: {\n        type: KeyboardFullscreenComponent,\n        defaultFormat: 'letters'\n      },\n      w: utils.getWidthByUpCount(context.theme, 1)\n    };\n  }\n  _init() {\n    this.tag('Keyboard')._whenEnabled.then(() => {\n      this.tag('Keyboard').selectKeyOn(this.tag('Keyboard').tag('Letters'), {\n        row: 1,\n        column: 0\n      });\n    });\n  }\n};\nKeyboardFullscreen.storyName = 'KeyboardFullscreen';\nKeyboardFullscreen.args = {\n  centerKeyboard: false,\n  centerKeys: false,\n  mode: 'focused'\n};\nKeyboardFullscreen.parameters = {};\nKeyboardFullscreen.argTypes = {\n  ...Keyboard.sharedArgTypes,\n  centerKeys: {\n    description: \"Center the keys within it's set width of keyboard\",\n    control: 'boolean',\n    table: {\n      defaultValue: {\n        summary: false\n      }\n    }\n  }\n};\nKeyboardFullscreen.parameters = {\n  ...KeyboardFullscreen.parameters,\n  docs: {\n    ...KeyboardFullscreen.parameters?.docs,\n    source: {\n      originalSource: \"() => class KeyboardFullscreen extends lng.Component {\\n  static _template() {\\n    return {\\n      Keyboard: {\\n        type: KeyboardFullscreenComponent,\\n        defaultFormat: 'letters'\\n      },\\n      w: utils.getWidthByUpCount(context.theme, 1)\\n    };\\n  }\\n  _init() {\\n    this.tag('Keyboard')._whenEnabled.then(() => {\\n      this.tag('Keyboard').selectKeyOn(this.tag('Keyboard').tag('Letters'), {\\n        row: 1,\\n        column: 0\\n      });\\n    });\\n  }\\n}\",\n      ...KeyboardFullscreen.parameters?.docs?.source\n    }\n  }\n};"],"names":[],"sourceRoot":""}