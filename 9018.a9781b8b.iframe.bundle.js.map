{"version":3,"file":"9018.a9781b8b.iframe.bundle.js","mappingslZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAEA;AACA;AAAA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyjBA;AACA;AAAA;AAAA;AAAA;AAlUA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAUA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA","sources":["webpack://lightning-ui-docs/","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Input/Input.styles.js","webpack://lightning-ui-docs/../../@lightningjs/ui-components/src/components/Input/Input.js"],"sourcesContent":[null,"/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { getWidthByUpCount } from '../../utils';\n\nexport const base = theme => ({\n  cursorStyle: {\n    textColor: theme.color.textNeutral,\n    blink: true,\n    width: theme.spacer.xs,\n    height: theme.spacer.xxl\n  },\n  eyebrowTextStyle: {\n    ...theme.typography.caption1,\n    maxLines: 1,\n    textColor: theme.color.textNeutral\n  },\n  textStyle: {\n    ...theme.typography.body1,\n    maxLines: 1,\n    textColor: theme.color.textNeutral\n  },\n  helpTextStyle: {\n    ...theme.typography.caption1,\n    maxLines: 1,\n    textColor: theme.color.textNeutralSecondary\n  },\n  minWidth: getWidthByUpCount(theme, 4),\n  paddingX: theme.spacer.xl,\n  paddingY: theme.spacer.xl,\n  backgroundColor: theme.color.interactiveNeutral\n});\n\nexport const mode = theme => ({\n  disabled: {\n    eyebrowTextStyle: { textColor: theme.color.textNeutralDisabled },\n    helpTextStyle: { textColor: theme.color.textNeutralDisabled }\n  },\n  focused: {\n    cursorStyle: { textColor: theme.color.textInverse },\n    eyebrowTextStyle: { textColor: theme.color.textNeutral },\n    helpTextStyle: { textColor: theme.color.textNeutralSecondary }\n  }\n});\n\nexport const tone = theme => ({\n  inverse: {\n    mode: {\n      focused: {\n        eyebrowTextStyle: { textColor: theme.color.textNeutral },\n        helpTextStyle: { textColor: theme.color.textNeutral }\n      }\n    }\n  }\n});\n","/**\n * Copyright 2023 Comcast Cable Communications Management, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as styles from './Input.styles.js';\nimport Button from '../Button';\nimport TextBox from '../TextBox';\n\nexport default class Input extends Button {\n  static get __componentName() {\n    return 'Input';\n  }\n  static get __themeStyle() {\n    return styles;\n  }\n  static _template() {\n    return {\n      ...super._template(),\n      Eyebrow: { type: TextBox },\n      HelpText: { type: TextBox }\n    };\n  }\n\n  static get properties() {\n    return [\n      ...super.properties,\n      'actualTitle',\n      'cursor',\n      'eyebrow',\n      'helpText',\n      'listening',\n      'mask',\n      'password',\n      'position'\n      // TODO: should maybe remove \"fixed\" as an editable prop to make sure this is never dynamic\n    ];\n  }\n\n  static get tags() {\n    return [\n      ...super.tags,\n      'Eyebrow',\n      'HelpText',\n      { name: 'Cursor', path: 'Content.Cursor' },\n      { name: 'HiddenContent', path: 'Content.HiddenContent' }\n    ];\n  }\n\n  _construct() {\n    super._construct();\n    this._title = '';\n    this.actualTitle = '';\n    this.position = this.title ? this.title.length : 0;\n    this._justify = 'left';\n    this._fixed = true;\n    this.w = this.style.minWidth;\n  }\n\n  $itemChanged() {\n    super.$itemChanged();\n    this._updateTextWrapper();\n    this._updateHiddenContent();\n    this._updateCursorPosition();\n    this._updateTitleScrollPosition();\n  }\n\n  _onTitleTextBoxChanged() {\n    this._updateHiddenContent();\n  }\n\n  _onHiddenTextBoxChanged() {\n    this._updateCursorPosition();\n  }\n\n  _update() {\n    this._updatePassword(); // need to update title masking before rendering the new title\n    super._update();\n\n    this._updateEyebrow();\n    this._updateHelpText();\n\n    this._updateTextWrapper();\n    this._updateHiddenContent();\n\n    this._updateCursor();\n    this._updateCursorListening();\n    this._updateCursorBlink();\n    this._updateCursorPosition();\n\n    this._updateTitleScrollPosition();\n  }\n\n  _updatePassword() {\n    this.title = this.password\n      ? this.mask.repeat(this.actualTitle.length)\n      : this.actualTitle;\n  }\n\n  _updateTruncation() {\n    // do not add word wrap\n    if (this._Title) {\n      this._Title.patch({\n        style: { textStyle: { ...this.style.textStyle, wordWrap: false } }\n      });\n    }\n  }\n\n  _updateEyebrow() {\n    this._Eyebrow.patch({\n      content: this.eyebrow,\n      style: { textStyle: this.style.eyebrowTextStyle },\n      mountY: 1,\n      x: this.style.paddingX,\n      y: this.y - this.style.paddingY\n    });\n  }\n\n  _updateHelpText() {\n    this._HelpText.patch({\n      content: this.helpText,\n      style: { textStyle: this.style.helpTextStyle },\n      x: this.style.paddingX,\n      y: this.y + this.innerH + this.style.paddingY\n    });\n  }\n\n  _updateTextWrapper() {\n    this._TextWrapper.clipping = true;\n    this._TextWrapper.w = this._visibleContentWidth;\n    if (this._Title) {\n      this._TextWrapper.h = this._Title.h;\n    }\n  }\n\n  _updateHiddenContent() {\n    /**\n     * Hidden value is used for measuring where the cursor should\n     * be positioned when a user changes the cursor position. Since\n     * the text is one texture we don't know the exact position of each\n     * individual character, so we render a substring version of the text\n     * to determine the render width and position the cursor based on that number\n     */\n    if (!this._HiddenContent) {\n      this._Content.patch({\n        HiddenContent: {\n          type: TextBox,\n          mountY: 0.5,\n          y: h => h / 2,\n          signals: {\n            textBoxChanged: '_onHiddenTextBoxChanged'\n          }\n        }\n      });\n    }\n\n    const { title: value = '', position, password, mask } = this;\n\n    const textBeforeCursor = password\n      ? mask.repeat(value.length).substring(0, position)\n      : value.substring(0, position);\n\n    this._HiddenContent.patch({\n      style: { textStyle: this.style.textStyle },\n      content: textBeforeCursor\n    });\n\n    this._HiddenContent._Text &&\n      this._HiddenContent._Text.patch({ alpha: 0.001 });\n  }\n\n  _updateCursor() {\n    if (this.style.cursorStyle && this.style.cursorStyle.blink) {\n      if (!this._Cursor) {\n        this._Content.patch({\n          Cursor: {\n            rect: true,\n            mountY: 0.5\n          }\n        });\n        this.cursorBlink = this._Cursor.animation({\n          duration: 1.5,\n          repeat: -1,\n          actions: [{ p: 'alpha', v: { 0: 0, 0.5: 1, 1: 0 } }]\n        });\n      }\n      this._Cursor.patch(this.style.cursorStyle);\n    }\n  }\n\n  _updateCursorListening() {\n    if (!this._isDisabledMode) {\n      if (this.cursorBlink && !this.cursorBlink.isPlaying()) {\n        this.cursorBlink.start();\n      }\n    } else {\n      if (this.cursorBlink)\n        this.isCursorActive\n          ? this.cursorBlink.start()\n          : this.cursorBlink.stop();\n    }\n    this._Cursor.smooth = {\n      color: this.style.cursorStyle.textColor\n    };\n  }\n\n  _updateCursorBlink() {\n    if (this.cursorBlink) {\n      if (this.isCursorActive) {\n        this.cursorBlink.start();\n      } else {\n        this.cursorBlink.stop();\n        this._Cursor.patch({ alpha: 0.001 });\n      }\n    }\n  }\n\n  _updateCursorPosition() {\n    this._Cursor.x =\n      this._titleX +\n      (this._isOverflow ? this._TextWrapper.w : this._HiddenContent.w);\n  }\n\n  _updateTitleScrollPosition() {\n    if (this._Title) {\n      this._Title.x = this._isOverflow\n        ? this._visibleContentWidth - this._HiddenContent.w\n        : 0;\n      if (this._HiddenContent && this._TextWrapper) {\n        this._HiddenContent.x = this._TextWrapper.x + this._Title.x;\n      }\n    }\n  }\n\n  get _suffixX() {\n    const suffixX = this._hasPrefix\n      ? this.w - this._paddingLeft - this._paddingRight - this._prefixW\n      : this.w - this._paddingLeft - this._paddingRight - this.style.paddingX;\n    return suffixX > 0 ? suffixX : 0;\n  }\n\n  get isCursorActive() {\n    return this.listening && (this._isFocusedMode || this._isUnfocusedMode);\n  }\n\n  get _isOverflow() {\n    return this._HiddenContent.w > this._visibleContentWidth;\n  }\n\n  get _visibleContentWidth() {\n    return this._fixedWordWrapWidth;\n  }\n\n  set value(value) {\n    this.title = this.actualTitle = value;\n    this.position = 0;\n    this._updatePassword();\n  }\n\n  get value() {\n    return this.actualTitle;\n  }\n\n  clear() {\n    if (this.isCursorActive) {\n      this.title = this.actualTitle = '';\n      this.position = 0;\n    }\n  }\n\n  insert(content) {\n    if (this.isCursorActive) {\n      this.actualTitle =\n        this.actualTitle.slice(0, this.position) +\n        content +\n        this.actualTitle.slice(this.position);\n      this._updatePassword();\n      this.position += content.length;\n    }\n  }\n\n  backspace() {\n    if (this.isCursorActive && this.position > 0) {\n      this.actualTitle =\n        this.actualTitle.slice(0, this.position - 1) +\n        this.actualTitle.slice(this.position);\n      this._updatePassword();\n      this.position--;\n    }\n  }\n\n  _handleLeft() {\n    if (this._isDisabledMode) {\n      return false;\n    }\n    this.moveLeft();\n    if (typeof this.onLeft === 'function') {\n      return this.onLeft(this);\n    }\n    return true;\n  }\n\n  _handleRight() {\n    if (this._isDisabledMode) {\n      return false;\n    }\n    this.moveRight();\n    if (typeof this.onRight === 'function') {\n      return this.onRight(this);\n    }\n    return true;\n  }\n\n  moveLeft() {\n    const { position } = this;\n    if (position >= 0) {\n      this.position--;\n      return true;\n    }\n    return false;\n  }\n\n  moveRight() {\n    const { position, title } = this;\n    if (position < title.length) {\n      this.position++;\n      return true;\n    }\n    return false;\n  }\n\n  set announce(announce) {\n    super.announce = announce;\n  }\n\n  get announce() {\n    if (this._announce) {\n      return this._announce;\n    }\n\n    // TODO - Localization?\n    // Do we need a locale file with\n    // component translations?\n    // need to check with Accessibility on what order this should read out in\n    if (this.password) {\n      return [this.eyebrow, this.helpText];\n    } else {\n      return [this.eyebrow, 'Input: ' + this.title, this.helpText];\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}